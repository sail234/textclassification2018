计算机 工程 COMPUTERENGINEERING 年 　 第卷 　 第期 　 Vol 　 No 　 界面 类 对象 测试 建模 技术 研究 顾玉良 　 王立福 摘要 　 目前 大量 OO 应用软件 彩用 图形界面 对 这类 软件 的 测试 尚 缺乏 有效 的 技术支持 。 分析 了 这类 软件 的 特点 ， 基于 用户 应用 系统 交互 和 应用 系统 系统 环境 交互 的 视角 ， 提出 了 一种 界面 类 对象 状态 测试 建模 技术 ， 从面 支持 这 类 软件 的 测试 。 关键词 　 面向对象 软件测试 测试 建模 状态 模型 TheTechnicalResearchofTestModelingofUserInterfaceObjectClassGuYuliangWangLifuDeptofComputerCapitalNormalUnivBeijingComputerDeptofBeijingUnivBeijingAbstract ： UntilnowthereisfewtechnicalsupporttotestingofOOsoftwarewithGUIBasedonfeaturesofinteractionbetweenuserandapplicationsystemandfeaturesofinteractionbetweenapplicationsystemandsystemenvironmentthepaperpromptsatechiniqueofstatemodelingoftheuserinterfaceobjectsKeywords ： ObjectorientedsoftwaretestingTestingmodelingStatemodel 　 　 测试 建模 建立 被测 对象 的 模型 被测 对象 模型 可以 根据 规约 建立 也 可以 根据 程序 源代码 生成 。 原则上 功能 和 行为 模型 应该 根据 规约 建立 但是 规约 通常 缺少 支持 测试 的 特性 同时 规约 一般 具有 多义性 和 矛盾性 。 虽然 许多 面向对象 方法 提供 了 功能 行为 建模 的 方法 但 在实践中 有 相当 数量 的 软件 没有 完整 的 文档 难于 为 测试 提供 必要 的 支持 。 　 　 目前 测试 建模 技术 对 建立 可 控制性 和 可 观察 性 缺乏 支持 在 如何 支持 集成 和 系统 测试 等 方面 缺乏 研究 。 　 　 状态 转换 图是 描述 行为 模型 的 常用工具 。 目前 用 状态 转换 图 进行 测试 建模 时 主要 存在 以下 问题 ： 　 　 · 对于 实现 的 对象 类 没有 一种 好 的 规则 识别 对象 状态 及其 状态 转换 测试 分析 人员 很难 为 一些 类 的 对象 建立 状态 模型 尤其 在 文档 不 完备 时 建立 对象 状态 模型 更加 困难 ； 　 　 · 当对 一组 类 的 对象 进行 状态 建模 时 模型 的 规模 难于 控制 ； 　 　 · 缺乏 对 建立 被测 对象 的 控制 和 观察 机制 的 支持 。 　 　 为 解决 以上 问题 本文 提出 了 一种 界面 类 对象 状态 建模 技术 以 支持 具有 图形界面 的 面向对象 软件 的 测试 。 　 建模 范围 和 测试 特征 的 选取 　 　 OO 软件 是 基于 消息 系统 、 由 事件驱动 的 与 用户 直接 交互 的 是 一些 界面 部件 它们 具有 规范 的 特征 作为 用户 与 软件系统 的 接口 为 系统 提供 交互 数据 和 显示 外部 可见 的 系统 状态 。 从 用户 角度 来看 用户界面 可以 看作 是 应用 系统 本身 。 进一步 说 ， 用户 与 应用 系统 的 交互 是 由 窗口 系统控制 的 ， 类库 扩充 了 这种 控制 机制 。 在 应用 系统 的 每个 界面 类中 ， 包含 了 处理 用户 交互 消息 的 方法 。 当 应用 系统 执行 时 ， 系统 的 用户 与 窗口 进行 交互 ， 导致系统 环境 产生 并 传递 相应 的 用户 交互 消息 ， 由 应用 系统 的 界面 类 对象 进行 处理 。 所以 ， 应用 系统 的 界面 类 对象 通过 系统 环境 ， 最终 与 用户 发生 交互 。 如果 某些 界面 类 对象 与 另 一 系统 的 界面 类 对象 通信 ， 它们 就 组成 不同 应用 系统 之间 的 边界 。 　 　 直接 对系统 环境 、 类库 对象 和 非 界面 类 对象 建模 非常 困难 ， 且 难于 控制 模型 规模 。 为此 ， 考察 界面 类 对象 的 行为 ， 通过 界面 类 对象 来看 应用 系统 的 行为 ， 据此 实现 应用 系统 的 测试 。 所以 ， 本文 选取 应用 系统 的 界面 类 对象 进行 测试 建模 ， 基于 界面 类 对象 的 特点 ， 采用 交互 状态 转换 图 和 生存 周期 状态 转换 图 描述 界面 类 对象 行为 模型 。 　 界面 类 对象 交互 状态 模型 　 　 界面 类 对象 交互 状态 模型 是 一种 对象 状态 模型 ， 它 描述 了 对象 类中 所有 对象 的 共同 的 行为 。 其中 包括 两个 基本概念 交互 状态 表达 界面 类 对象 等待 用户 交互 所处 的 阶段 ， 在 一个 交互 状态 下 ， 界面 类 对象 可以 等待 不同 类型 的 交互 状态 转换 表示 界面 类 对象 从 一个 交互 状态 到 下 一个 交互 状态 的 变化 过程 ， 由 消息 到达 事件 触发 ， 体现 对象 的 动态 特性 。 界面 类 对象 交互 状态 模型 用 下面 定义 的 OSNObjectStateNet ， 本文 称为 子网 表示 。 　 　 定义 OSN 是 一个 五元 组 P ， T ， F ， p ， M ， 它 满足 如下 条件 ： 　 　 　 P 是 有限 位置 集 ； 　 　 　 T 是 有限 变迁 集 ； 　 　 　 p ∈ P ， Mp 是 初始 标识 ， 称 p 是 初始 位置 ； 标识 是 包含 一个 位置 的 集合 ； 　 　 　 OSN 没有 孤立 元素 ， P ≠ ￠ T ≠ ￠ ， A ≠ ￠ ； 　 　 　 F с P × T ∪ T × P 是 关系 集合 ； 　 　 　 任何 位置 至少 有 一个 前继 和 一个 后继 ， 即 ： 对 p ∈ P ， 有 p ≠ ￠ ， p ≠ ￠ ； 　 　 　 任何 变迁 至少 有 一个 后继 ， 有且 仅 有 一个 前继 ， 即 ： 对 t ∈ T ， 有 t ≠ ￠ ， t ≠ ￠ ， 且 如果 ョ p ∈ t ， p ∈ t ， 则 pp 。 　 　 这里 ， 用 位置 表示 界面 类 对象 的 交互 状态 变迁 表示 界面 类 对象 的 状态 转换 p 表示 界面 类 对象 创建 完成 后 的 初始状态 ， 在 该 状态 下 ， 对象 准备 响应 消息 。 在 任何时刻 ， 子网 的 当前 标识 Mp ， p ∈ P ， 表示 对应 的 界面 类 对象 正 处于 该 p 表示 的 交互 状态 。 　 　 对 一个 OSN ， 如果 其中 包含 的 变迁 数 Tn ， 根据 定义 ， 可以 得到 P 的 上限 ， P ≤ n 。 证明 方法 如下 ： 把 该 OSN 中 从 T 到 P 的 所有 关系 去掉 ， 于是 对 p ∈ P ， 存在 多于 一个 t ∈ T 与 p 对应 ， 所以 ， P ≤ T ， 即 P ≤ n 。 由于 T 的 数量 较 少 ， 所以 ， PT 的 数量 较 少 。 一个 应用软件 的 界面 类 数量 也 较 少 ， 从而 使 模型 的 规模 得到 了 有效 控制 。 　 　 界面 类 对象 的 状态 转换规则 可以 用 子网 的 运行 规则 表示 ， 包括 如下 几个 规则 ： 　 　 　 触发 规则 对 p ∈ t ， 子网 的 变迁 t 在 标识 Mt 下 是 可 触发 的 。 　 　 　 新 标识 产生 规则 变迁 t 触发 后 ， 把 当前 标识 M 变为 标识 Mp ， 并且 满足 p ∈ t 。 　 　 　 触发 序列 完整性 规则 一个 完整 的 触发 序列 导致 子网 从 p 到 p 的 次 或 多次 环行 ， 它 是 子网 执行 的 必要条件 。 　 界面 类 对象 生存 周期 状态 模型 　 　 OSN 描述 界面 类 对象 生存 期间 的 交互 状态 及其 转换 。 为了 实施 测试 ， 还 需要 描述 界面 类 对象 的 实例 化及 生存 周期 的 状态 变化 过程 。 根据 界面 类 对象 的 特点 ， 用图 中 的 状态 转换 图 之一 表示 界面 类 对象 生存 周期 状态 模型 。 图 界面 类 对象 生存 周期 状态 转换 图 　 　 为 表示 界面 类 对象 之间 的 关系 ， 需要 描述 对象 生成 和 接收 的 消息 。 但 在 实际 的 应用 系统 中 ， 消息 生成 和 传递 过程 非常复杂 ， 在 状态 建模 中 ， 只 需 在 测试 空间 内 模拟 它们 的 等价 效果 。 所以 ， 把 非 界面 类 对象 、 相关 类库 对象 、 系统 环境 看作 是 界面 类 对象 之间 、 界面 类 对象 与 用户 之间 通信 的 “ 信道 ” ， 在 其中 传递 两类 与 实际 消息 序列 等价 的 消息 ： 　 　 　 用户 交互 消息 UM ， 简称 交互 消息 　 　 用户 交互 消息 由 用户 与 系统 交互 动作 导致 ， 传递 到 界面 类 对象 并 触发 其 状态 转换 。 　 　 　 界面 类 对象 消息 IM 　 　 界面 类 对象 消息 等价 于 界面 类 对象 之间 的 消息 序列 ， 一个 界面 类 对象 “ 产生 消息 ， 经由 “ 信道 传递 到 另 一个 界面 类 对象 或 自身 。 可能 导致 界面 类 对象 产生 消息 的 事件 包括 界面 类 对象 交互 状态 转换 事件 和 生存 周期 状态 转换 事件 。 　 　 如图所示 ， 一个 界面 类 对象 处于 如下 状态 之一 ： 进入状态 Start 、 活动状态 Active 、 暂停状态 Pause 和 终止 状态 Dead ， 每个 生存 周期 的 状态 转换 事件 可以 导致 一个 IM 消息 序列 。 　 　 进入状态 是 一个 瞬态 ， 表示 对象 创建 的 初始状态 。 New 消息 导致 实例 化 一个 对象 ， 该 过程 完成 对象 从 进入 系统 到 准备 接受 消息 的 转换 ， 即 对象 进入 活动状态 。 　 　 一个 界面 类 对象 处于 暂停状态 时 ， 存在 于 内存 中 ， 但 当前 不能 响应 UM 消息 ， 可以 响应 IM 消息 。 在 任何时刻 ， 可以 有 多个 同类 界面 类 对象 处于 暂停状态 。 对 处于 活动状态 的 对象 发 Pause 消息 ， 则 该 对象 进入 暂停状态 ， 对象 当前 状态 被 保存 。 　 　 一个 界面 类 对象 处于 活动状态 时 ， 可以 响应 用户 交互 消息 和 界面 类 对象 消息 。 在 任何时刻 ， 同类 的 对象 中 ， 只有 其中 一个 处于 活动状态 。 如果 对 处于 暂停状态 的 对象 发 Continue 消息 ， 或 实例 化 一个 对象 ， 该 对象 进入 活动状态 ， 对象 从 保存 或 初始 的 状态 运行 。 　 　 终止 状态 是 一个 瞬态 ， 表示 界面 类 对象 从 系统 中 消失 。 对 处于 活动状态 或 暂停状态 的 对象 发 Stop 消息 ， 该 对象 进入 终止 状态 。 　 界面 类 对象 状态 建模 步骤 　 　 采用 以下 的 步骤 进行 界面 类 对象 状态 建模 　 　 　 识别 界面 类 在 文档 和 源代码 中 识别 出 界面 类 的 集合 ， 每个 界面 类 采用 平面化 表示 ， 用 一个 子网 OSN 表示 该 界面 类 的 对象 的 交互 状态 模型 。 　 　 　 对 一个 OSN ， 首先 给出 一个 初始 位置 p ， 表示 在 此 状态 时 对象 准备 响应 消息 。 然后 分析 界面 类 的 方法 ， 如果 其 处理过程 包含 交互 状态 ， 则 按 如下 方法 在 该 子网 中 生成 若干 相关 的 变迁 和 位置 ： 　 　 · 标识 变迁 t ∈ T 。 如果 发现 一个 新 的 交互 类型 ， 则 生成 一个 变迁 表示 与 该 交互 对应 的 状态 转换 。 　 　 · 标识 位置 p ∈ P 。 对于 已经 标识 的 变迁 ， 存在 等待 该 交互 类型 的 状态 和 转换 发生 后 的 状态 ， 如果 相应 的 位置 尚未 生成 ， 则 生成 之 。 每个 变迁 可以 有 若干 后继 ， 但 只 可以 有 一个 前继 。 如果 若干 变迁 对应 同一个 前继 ， 表示 在 该 状态 下 可以 响应 不同 类型 的 交互 ， 从而 发生 不同 的 状态 转换 。 　 　 · 连接 位置 和 变迁 。 根据 上面 确定 的 关系 ， 生成 关系 e ∈ A ， 连接 相关 的 位置 p ∈ P 和 变迁 t ∈ T 。 　 　 　 确定 子网 之间 的 消息 关联 对 一个 OSN ， 考察 所有 已 标识 的 变迁 。 如果 该 变迁 的 发生 可能 导致 其它 子网 的 变迁 发生 ， 则 定义 一个 IM 消息 ， 把 该 变迁 与 目标 变迁 相关联 。 如果 该 变迁 的 发生 可能 导致 其它 界面 类 对象 的 生存 周期 状态 转换 ， 则 根据 该 转换 的 类型 ， 定义 相应 的 预定 义 消息 IM ， 把 该 变迁 与 目标 子网 相关联 。 　 　 在 该 界面 类 对象 的 生存 周期 状态 转换 图中 ， 对于 个 预定 义 消息 引起 的 状态 转换 ， 分别 生成 可能 导致 的 IM 消息 ， 并 根据 消息 把 该 子网 与 目标 子网 或 目标 子网 的 变迁 相关联 。 　 　 对 每 一个 界面 类 重复 ， 直至 完成 所有 子网 的 定义 。 在 确定 消息 时 ， 可能 目标 子网 还 没有 生成 ， 则 该 工作 在 目标 子网 生成 后 继续 。 　 　 　 检查 一致性 对 以上 标识 的 所有 子网 的 位置 和 变迁 ， 按 OSN 的 定义 进行 一致性 检查 。 　 　 界面 类 对象 生存 周期 状态 转换 图 和 交互 状态 转换 图 体现 了 界面 类 对象 区别 于 非 界面 类 对象 的 一些 重要 特性 　 　 · 容易 确定 各个 用户 交互 类型 及 对应状态 ； 　 　 · 用户 交互 导致 了 界面 类 对象 的 状态 转换 ， 通过 模拟 用户 交互 ， 可以 驱动 界面 类 对象 可 控制性 。 可 执行 的 测试用例 是 由 界面 类 对象 的 状态 转换 序列 表示 的 ； 　 　 · 可 在 运行 时刻 跟踪 界面 类 对象 的 地址 ， 从而 支持 对象 跟踪 和 对象 状态 检查 可 观察 性 ； 　 　 · 在 运行 时刻 ， 界面 类 对象 的 数量 有限 ， 从而 支持 在 运行 时刻 模拟 每 一个 界面 类 对象 。 　 相关 工作 　 　 基于 以上 技术 ， 实现 了 一个 支持 具有 图形界面 的 面向对象 软件测试 的 原型 系统 JBOOTE 。 这里 ， 通过 介绍 测试 执行 系统 ， 说明 界面 类 对象 状态 模型 如何 支持 和 实现 被测 对象 控制 和 观察 机制 。 测试 执行 系统 的 结构 如图所示 。 图 　 测试 执行 系统 　 　 模拟 执行器 是 测试 执行 工具 的 核心 部分 。 在 测试 执行 时刻 ， 模拟 执行器 在 界面 类 对象 状态 空间 内 模拟 被测 对象 的 运行 ， 与 被 测 对象 同步 。 对应 于 每 一个 界面 类 对象 ， 生成 一个 对应 的 模拟 对象 ， 用 三元组 对象 标识 ， 对象 值 状态 标识 ， 子网 标识 表示 。 模拟 对象 包含 了 用于 驱动 、 状态 跟踪 和 检查 所 需 的 最少 信息 ， 其 状态 表示 了 运行 时刻 的 界面 类 对象 的 正确 状态 。 　 　 执行器 动态 地 维护 每个 模拟 对象 ， 跟踪 被测 对象 的 状态 ， 与 被 测 对象 之间 传递 命令 和 数据 。 对于 模拟系统 中 当前 活动 的 子网 ， 其 每个 位置 是 一个 检查点 ， 在 每个 检查点 上 ， 可以 由 测试 脚本 定义 所 需 的 检查 ， 由 模拟 执行器 实施 相应 的 检查 。 检查 的 类型 包括 界面 检查 、 界面 类 对象 状态 检查 、 断言 检查和 报告 检查 。 　 　 被测 对象 控制 和 观察 机制 的 建立 ： 　 　 · 由 模拟 执行器 、 控制器 和 插装 代码 实现 对 界面 类 对象 的 动态 模拟 和 跟踪 ； 　 　 · 利用 交互 驱动器 产生 交互 事件 ， 控制 被测 对象 的 运行 ； 　 　 · 在 界面 类 对象 交互 状态 模型 中 ， 用 等待 用户 交互 的 阶段 定义 对象 状态 ， 在 对象 等待 交互 时刻 ， 模拟 执行器 与 被 测 对象 之间 可以 进行 数据交换 。 一般 地 ， 初始 位置 对应 于 一个 值 状态 检查点 ， 当 界面 类 对象 发生 一个 状态 转换 序列 ， 而 到达 初始 位置 时 ， 可以 要求 模拟 执行器 对 它 产生 一个 值 状态 检查 。 当 每次 状态 转换 后 ， 可以 根据 所达 位置 的 含义 ， 进行 交互 状态 检查 、 界面 检查 、 断言 检查和 报告 检查 。 　 　 不 需要 专门 在 程序 中 建立 复杂 的 控制 逻辑 ， 用 程序 插装 工具 对 方法 进行 插装 ； 在 界面 类中 增加 了 用于 对象 值 状态 检查 的 方法 DoCheck ， 检查 的 内容 由 测试 设计 决定 。 原型 系统 把 源代码 转换 为 测试代码 ， 除了 必要 的 状态 检查 的 方法 代码 由 用户 编写 ， 其余 工作 可以 由 原型 系统 自动 完成 。 测试代码 不 改变 源代码 的 结构 ， 从而 保证 源代码 的 逻辑 完整性 和 一致性 。 在 测试代码 中 建立 的 控制器 用于 接受 执行器 的 指令 ， 并 控制 指定 的 界面 类 对象 执行 状态 检查 ， 进行 有关 数据 的 传送 和 处理 。 　 结束语 　 　 针对 具有 图形界面 的 面向对象 软件 的 测试 ， 本文 提出 了 一种 界面 类 对象 状态 建模 技术 。 该 技术 体现 了 对象 封装 、 通信 和 动态 特征 ， 使得 对象 状态 易于 识别 ， 模型 规模 容易 控制 ， 并且 支持 建立 被测 对象 的 控制 和 观察 机制 。 本项 研究 得到 国家 九五 重点 科技 攻关项目 资助 作者简介 ： 顾玉良 男 ， 岁 ， 博士生 ， 主研 领域 为 软件工程 和 软件测试 作者 单位 ： 顾玉良 　 首都师范大学 计算机系 北京 　 　 　 　 　 王立福 　 北京大学 计算机系 北京 参考文献 　 ArnoldTRFusonWATestinginaPerfectWorldCommofACM ： 　 BinderRVStatebasedTestingObjectMagazine ： 　 BinderRVTheFREEApproachforSystemTestingObjectMagazine ： 　 HsiaPTestingofObjectorientedProgramsYIGASeminar ： 　 MurphyGCTownsendPWongPSExperienceswithClusterandClassTestingCommunicationofACM ， ， ： 收稿 日期 ：