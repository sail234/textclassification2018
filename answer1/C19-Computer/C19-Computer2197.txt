计算机 应用 研究 APPLICATIONRESEARCHOFCOMPUTERS 　 Vol 　 No 　 P 基于 CORBA 的 Web 数据库 服务器 罗大杰 　 董玮文 　 董传良 摘要 近年来 ， 随着 分布式 对象 计算 方面 研究 的 深入 ， CORBA 逐渐 成为 这方面 的 热点 。 就 CORBA 的 跨平台 、 跨 语言 特性 出发 ， 介绍 了 CORBA 标准 及 基于 CORBA 的 分布式应用 的 开发方法 和 步骤 。 最后 提出 了 一个多 数据源 的 Web 数据库 解决方案 。 关键词 分布式应用 CORBA 对象 技术 客户服务器 引言 　 　 国际 对象 管理 组织 ObjectManagementGroupOMG 遵循 对象 技术 ， 制定 了 一整套 公认 的 基于 可 商用 对象 技术 的 标准 。 它 有 一套 面向对象 的 标准化 语言 ， 接口 和 协议 ， 其 基础 是 公共对象 请求 代理 结构 CommonObjectRequestBrokerArchitectureCORBA 规范 。 　 　 CORBA 作为 一种 新兴 的 面向对象 分布式计算 技术 ， 为 建立 大型 复杂 的 分布式应用 提供 了 一条 令人振奋 的 新思路 。 使用 CORBA 体系结构 ， 不同 操作系统 、 不同 编程语言 、 不同 网络协议 的 应用 系统 可以 方便 地 进行 互操作 ， 很 容易 地 集成 在 一起 ， 这使 所谓 软件 总线结构 的 实现 成为 可能 。 软件 总线结构 ， 就是 起到 类似 于 计算机硬件 总线 的 作用 ， 只要 将 应用 模块 按 总线 规范 做成 软 插件 ， 插入 总线 即可 实现 集成 运行 。 CORBA 概述 　 　 对象 管理 体系结构 ObjectManagementArchitectureOMA 是 OMG 为 分布式 对象 计算 应用 定义 的 一个 抽象 结构 。 其 核心 是 对象 请求 代理 ObjectRequestBrokerORB ， ORB 提供 对象 调用 的 地址 透明 ， 激活 策略 和 通讯 功能 。 　 　 CORBA 包含 五个 重要 组成部分 ： 　 　 ORB 核心 　 　 接口定义 语言 InterfaceDefinitionLanguageIDL 　 　 动态 调用 接口 DynamicInvocationInterfaceDII 　 　 接口 池 InterfaceRepositoryIR 　 　 对象 适配器 ObjectAdaptersOAORB 核心 　 　 在 分布式系统 中 ， 某个 对象 提供 服务 ， 而 调用者 根据 需要 向 该 对象 发出请求 ， 其中 调用者 称之为 客户 ， 对象 称为 服务器 。 在 OMA 对象 模型 中 ， 由 ORB 负责 将 客户 的 请求 传递 给 服务器 对象 ， 并 返回 运算 结果 给 客户 。 对 客户 来说 ， 这种 消息 的 传递 是 透明 的 ， 全部 由 ORB 完成 ， 客户 不 需要 知道 对象 位于 网络 的 什么 地方 ， ORB 如何 通讯 ， 对象 如何 实现 ， 如何 存储 等 。 　 　 ORB 核心 实现 对象 间 的 通信 机制 和 激活 、 调度 等 任务 。 实现 客户 对 目标 对象 服务器 访问 在 以下 方面 的 透明 。 　 　 对象 位置 ： 客户 不 知道 目标 对象 驻留 何处 ， 目标 对象 可以 在 跨过 网络 到达 的 另一台 机器 的 某 一 进程 中 ， 可以 在 客户 所 处 同一 机器 但 处于 不同 的 进程 中 ， 也 可以 与 客户 处于 同一 进程 。 　 　 对象 实现 ： 客户 不 知道 目标 对象 是 如何 实现 的 、 不 知道 目标 对象 实现 所 采用 的 语言 、 也 不 知道 所处 的 硬件平台 和 操作系统 。 　 　 对象 执行 状态 ： 客户 向 目标 对象 发 请求 时 ， 无需 知道 目标 对象 当前 是否 处于 活动状态 并 准备 接受 请求 。 如果 需要 ， ORB 在 向 目标 对象 发送 请求 前会 透明 地 启动 对象 。 　 　 对象 通信 机制 ： 客户 不 知道 ORB 用来 向 对象 发送 请求 和 将 响应 返回 客户 的 具体 通信 机制 如 TCPIP 、 共享内存 、 本地 方法 调用 等 。 　 　 客户 在 向 对象 发送 请求 之前 ， 首先 需要 获得 一个 对象 引用 。 ORB 使用 对象 引用 来 辨别 和 定位 对象 从而 传送 请求 。 　 　 一旦 客户 获得 了 对象 引用 ， 它 就 可以 调用 该 对象 提供 的 方法 。 一般来说 ， 方法 总 包括 一些 参数 作为 输入 ， 并 返回 另 一些 参数 作为 输出 。 ORB 的 责任 就 是从 客户 一方 接收 输入 参数 ， 并 将 这些 参数 打包 把 参数 转换 为 能 在 网络 上 传输 的 格式 ， 传送 到 对象 一方 。 在 对象 一方 的 ORB 负责 将 参数 解包 为 对象 能 操作 的 格式 ， 交由 对象 实现 后 再 将 输出 参数 用 同样 方式 返回 客户 。 整个 打包 解包 及 传送 的 过程 对 程序员 来说 都 是 透明 的 ， 客户端程序 调用 远地 方法 就 如同 调用 本地 方法 一样 简单 。 　 　 由于 ORB 在 打包 解包 过程中将 参数 转换成 与 平台 无关 的 通讯 格式 ， 屏蔽 了 各种 平台 数据格式 的 差异 ， 从而 实现 了 CORBA 的 平台 独立性 。 如 一个 运行 在 Macintosh 平台 上 的 客户程序 可以 调用 运行 在 UNIX 系统 上 的 服务器 对象 的 方法 ， 使得 不同 平台 上 的 应用程序 可以 方便 地 进行 通讯 ， 而 这种 平台 间 差异 转换 完全 由 ORB 完成 ， 程序员 一点 也 不 需要 关心 。 IDL 语言 与 映象 Mapping 　 　 尽管 一个 对象 引用 指定 了 一个 特定 的 对象 ， 但 它 不 提供 对象 的 接口 信息 。 客户 在 向 对象 发送 请求 前 必须 知道 对象 提供 哪些 服务 ， 对象 的 接口 规定 了 对象 所 支持 的 操作 和 类型 ， 也 就 定义 了 客户 向 对象 发送 的 请求 。 在 CORBA 中 ， 对象 的 接口 由 接口定义 语言 IDL 定义 ， IDL 的 一个 重要 特点 是 其 语言 独立性 ， 因为 IDL 是 一种 描述 型 语言 ， 不是 用来 实现 对象 功能 ， 它 只是 定义 了 分布 对象 间 调用 的 接口 。 所以 它 不 具有 也 不 应该 具有 一般 程序设计 语言 的 所有 特征 ， 如 控制结构 等 ， 对象 功能 的 实现 是 由 某种 具体 程序设计 语言 ， 如 C 、 Java 等 来 实现 的 。 语言 映象 的 目的 就是 将 IDL 语言 翻译 到 某种 具体 程序设计 语言 。 语言 映象 一般 包括 三个 方面 ： 　 　 基本 语言 成分 的 映象 ， 如 IDL 数据类型 、 模块 、 接口 、 操作 、 对象 引用 等 的 映象 。 　 　 CORBA 对象 接口 及其 它 伪 对象 接口 的 映象 。 　 　 CORBA 对象 在 具体 程序设计 语言 中 的 实现 方法 。 　 　 目前 OMG 已 定义 了 OMGIDL 到 多种 程序设计 语言 的 映象 规范 ， 如 IDL 到 C 、 C 、 SmallTalk 、 Ada 、 Java 等 。 　 　 正是 IDL 实现 了 CORBA 的 语言 独立性 ， 因为 由 IDL 定义 的 接口 描述 可以 映射 到 任何 一种 编程语言 ， CORBA 应用程序 和 组件 就 不 依赖于 同 一种 语言 来 编写 。 换句话说 ， 一个 C 编写 的 客户程序 可以 调用 一个 由 Java 编写 的 服务器 对象 的 方法 ， 甚至 还 可以 是 一个 由 COBOL 编写 的 服务器程序 。 　 　 语言 独立性 是 CORBA 的 一个 重要 特征 ， 因为 CORBA 没有 指定 一种 特定 的 编程语言 来 实现 应用 系统 。 它 提供 了 程序员 自由选择 语言 的 权利 ， 程序员 可以 选择 对 应用 最合适 的 语言 ， 或者 他 最 熟悉 的 语言 来 开发 应用 。 在 一个 应用 系统 中 的 各个 组件 也 可以 使用 不同 的 语言 来 开发 ， 如 客户端程序 可以 用 Java 来 实现 ， 以 提供 平台 可移植性 ， 服务器端 程序 可以 用 C 来 开发 ， 以 保证 运行 效率 。 CORBA 使 这些 不同 的 组件 间 的 通讯 成为 可能 。 客户 码桩 ClientStub 与 服务器 码架 ServerSkeleton 　 　 应用 系统 开发者 首先 应当 将 各 组件 间 的 接口 用 IDL 定义 ， 然后 用 IDL 编译器 翻译 IDL ， 编译器 会 产生 针对 具体 编程语言 的 客户 Stub 代码 和 服务器 Skeleton 代码 。 Stub 和 Skeleton 代码 被 认为 是 IDL 语言 与 具体 编程语言 之间 的 粘合剂 。 Stub 代码 被 用 在 客户端程序 中 作为 客户 调用 服务器 方法 的 一个 界面 ， 客户程序 调用 Stub 代码 就 好象 调用 服务器 方法 一样 ， 而 Stub 会 负责 与 ORB 通讯 。 Skeleton 代码 被 用 在 服务器 一端 ， 提供 对象 建立 的 框架 。 对 IDL 中 Interface 的 每 一个 Operation ， IDL 编译器 都 会 在 Skeleton 代码 中 产生 一个 空 的 方法 ， 以便 程序员 提供 这些 方法 的 具体 实现 。 　 　 CORBA 定义 了 两种 客户 向 对象 发送 请求 的 方式 ： 　 　 静态 调用 方式 — 由 客房 调用 Stub 代码 实现 　 　 动态 调用 方式 － 由 动态 调用 接口 DynamicInvocationInterfaceDII 实现 ， DII 不 需要 Stub 代码 ， 客户 从 接口 池中 动态 地 产生 一个 请求 由 DII 分 发给 ORB 　 　 不论 使用 何种 调用 方式 发送 请求 ， ORB 都 会 定位 到 对象 实现 、 激活 对象 、 传递 请求 。 对象 实现 不 需要 知道 请求 是 通过 Stub 还是 DII 方式 传递 过来 的 ， 也 不 需要 知道 请求 来自 何处 。 它 处理 接收 到 的 请求 ， 将 输出 结果 返回 给 ORB ， 再 由 ORB 返回 给 客户 。 CORBA 应用 的 体系结构 　 　 为了 更好 地 理解 CORBA ， 我们 来看 一下 在 分布式 对象 计算 中 ， 不同 的 CORBA 组件 是 如何 协同工作 的 。 假设 客户 已 持有 对象 实现 的 一个 有效 的 对象 引用 ， 于是 它 调用 对象 提供 的 一个 方法 。 这个 请求 通过 静态 Stub 程序 传递 给 ORB ， 或者 客户 从 接口 池中 动态 地 产生 一个 请求 由 DII 分发 。 不论是 何种 情况 ， ORB 用 对象 引用 定位 到 对象 实现 ， 并 负责 将 请求 传递 给 管理 该 对象 的 对象 适配器 ， 对象 适配器 将 请求 传递 到 Skeleton 程序 ， 然后 由 其 交给 对象 实现 进行 处理 ， 返回 的 结果 再 经由 Skeleton 从 对象 适配器 到 ORB 。 最后 ， ORB 将 结果 经 Stub 或 DII 返回 客户程序 。 基于 CORBA 的 多 数据源 Web 数据库 方案 　 　 随着 InternetIntranet 时代 的 到来 。 在 各个 办公 领域 ， 迫切需要 将 原有 的 计算机信息 系统集成 到 新 的 Intranet 体系结构 中来 。 但 已有 的 计算机信息 系统 是 异构 的 、 普遍存在 着 严重 的 “ 信息 孤岛 ” 问题 ， 即 每个 子系统 之间 是 独立 的 ， 不能 有效 地 进行 信息 交换 和 共享 。 解决问题 的 方法 是 采用 系统集成 技术 ， 其中 关键 是 数据库 集成 技术 。 数据库 集成 技术 的 目标 是 要 解决 信息系统 中 复杂 的 、 分布 的 、 异构 的 数据库 数据 ， 以及 非 结构化 数据 的 交换 、 转换 、 共享 与 集成 。 数据源 集成 模型 　 　 CORBA 的 软件 总线 概念 给 数据库 集成 技术 提供 了 一条 新 的 思路 。 CORBA 的 跨平台 特性 屏蔽 了 不同 操作系统 间 的 差异 ， 使 不同 平台 上 的 成员 系统 可以 集成 到 同一 体系 中来 。 此外 ， IDL 提供 了 对 成员 系统 的 封装 和 成员 系统 之间 的 隔离 ， 任何 成员 系统 作为 一个 对象 ， 通过 IDL 对 其 接口 参数 进行 定义 和 说明 ， 就 可 接到 ORB 上 ， 为 其它 系统 提供 服务 或 向 其它 系统 提出 请求 ， 达到 即插即用 效果 。 　 　 由此 可以 设计 一个 基于 CORBA 的 多 数据库 集成 方案 ， 该 方案 将 各种 主流 数据库系统 如 Oracle 、 Sybase 、 DB 等 集成 起来 ， 给 用户 提供 统一 的 操作界面 。 该 集成系统 应该 能为 用户 提供 单一 类型 的 数据 定义 和 操作 语言 ， 并 允许 同时 访问 多个 独立 的 数据库 。 该 方案 的 实现 思路 是 ： 　 　 将 分布式系统 中 各 数据库 成员 模型 化为 对象 ， 而 数据库系统 提供 的 服务 被 模型 化为 对象 方法 ， 这些 方法 组成 对象 接口 。 这样 ， 在 每个 成员 系统 上 可以 定义 一个 服务 接口 ， 成员 系统 为 这些 服务 提供 实现 ， 也 就是 将 参加 集成 的 数据库 通过 对象 封装 注册 到 ORB 总线 上 。 客户 通过 以 公共 语言 表示 的 请求 与 成员 系统 进行 交互 ， 对象 请求 代理 机制 负责 转换 请求 到 可用 服务 、 传递 请求 到 适当 的 系统 ， 并 提供 以 公共 语言 表示 的 应答 返还 给 客户 。 而 这 一切 的 实现 是 通过 对 成员 数据库 的 相关 部分 进行 转换 和 集成 ， 给 用户 提供 一个 统一 的 模式 表示 和 接口 而 完成 的 。 Web 三层 体系结构 　 　 CORBA 分布式 对象 系统 的 最大 问题 是 客户端 和 服务器 大量 请求 的 存在 ， 在 网络 环境 中 ， 过多 的 请求 将 增加 网络 的 负担 ， 降低 整个 系统 的 性能 。 因此 如何 管理 这些 请求 ， 充分利用 系统资源 是 为 CORBA 系统 建模 时 必须 考虑 的 一个 重要 问题 。 我们 将 CORBA 中 请求 交互 模式 分为 三类 ： 　 　 传统 的 ClientServer 模式 。 在 这种 模式 下 ， 客户 对象 仅仅 是 提出 请求 ， 而 服务器 对象 仅仅 是 完成 请求 的 操作 ， 客户 和 服务器之间 通过 ORB 直接 进行 通信 。 在 这种 模式 下 ， 客户端 是 整个 应用 的 控制 部分 ， 不仅 完成 用户 GUI 的 控制 ， 而且 要 向 服务器 传送 请求 ， 因此 相对 比较复杂 。 而 服务器 因为 完成 的 操作 大多 已经 确定 ， 相对 比较简单 。 这种 模式 的 交互 比较 适用 于 控制 部分 和 被控 部分 比较 明确 的 情况 下 。 　 　 对 等 交互 模式 。 在 这种 模式 下 ， 客户端 和 服务器 是 一种 合作 关系 。 在 这种 模式 下 并 没有 严格 的 客户端 和 服务器 的 区分 ， 所有 的 应用 相互 独立 ， 各自 完成 一定 的 操作 ， 同时 又 可以 向 其它 应用 提出 请求 ， 相对 前 一种 模式 而言 ， 这种 对 等 交互 模式 比较复杂 。 　 　 代理 交互 模式 。 在 这种 模式 下 ， 客户端 和 服务器之间 存在 着 一种 特殊 的 服务器 － 代理 。 它 代表 客户端 向 服务器 提出 请求 ， 并 代表 服务器 向 客户端 提供 一定 的 操作 。 这里 的 代理 不同于 CORBA 中 的 ORB ， ORB 仅仅 是 一个 CORBA 对象 ， 而 这里 所说 的 代理 是 用户 在 系统 建模 时 提出 的 一种 抽象 的 作为 特殊 服务器 的 应用 对象 ， ORB 只是 请求 传送 的 中介 ， 而 代理 则 是 服务 完成 过程 中 的 中介 。 尽管 ORB 也 有 中介 的 功能 ， 但 它 无法 完成 负载 均衡 或 选择 服务器 的 功能 。 　 　 我们 设计 的 多 数据库 Web 体系 中 采用 了 第三种 交互 模式 ， 其 连接 模型 可 简示 如图 。 图 　 连接 模型 　 　 其中 数据库 服务器 将 成员 数据库 模型 化为 一个个 组件 ， 成为 可以 直接 插 在 CORBA 软件 总线 上 的 对象 插件 。 Web 应用服务器 就是 上面 所说 的 代理 ， 它 负责 给 客户端 提供 统一 的 接口 ， 均衡 客户 请求 并 将 客户 请求 传送 到 合适 的 数据库 服务器 。 代理 机制 简化 了 客户 方 程序 ， 并 使 系统 具有 良好 的 开放性 、 可扩展性 和 可伸缩性 。 如果 今后 有 其它 数据库系统 ， 或 其它 非 结构化 的 文件系统 、 快速 表 系统 、 工作 流 系统集成 进来 ， 只 需 修改 Web 应用服务器 ， 而 不 影响 客户 代码 。 以上 这些 对象 插件 按照 三层 客户服务器 结构 组成 整个 Web 体系 。 CORBA 系统分析 方法 及 IDL 接口 确定 　 　 CORBA 的 最大 特点 是 面向对象 ， 采用 面向对象 的 分析方法 是 很 自然 的 。 设计 系统 时 ， 可以 结合 OMT 、 UML 等 面向对象 设计 方法 。 首先 要 建立 起 整个 系统 的 框架 模型 ， 形成 IDL 接口 文件 ， 从 具体 的 用户 需求 中 抽象 出 所有 的 对象 、 操作 及其 相互之间 的 关系 ， 用 IDL 语言 描述 出来 。 由于 CORBA 对 用户 屏蔽 底层 通信 ， 在 设计 CORBA 分布式系统 时 可以 将 重点 放在 系统 的 功能 完成 上 。 建立 系统 的 框架 模型 ， 可以 充分体现 CORBA 系统 面向对象 的 特点 ， 有助于 理清 思路 ， 简化 实现 。 其中 主要 有 以下 几个 步骤 ： 　 　 ● 明确 系统 需求 ， 产生 系统 的 任务 说明书 。 　 　 ● 应用 任务 说明书 建立 系统 的 抽象 模型 。 　 　 ● 在 抽象 模型 的 基础 上 建立 系统 的 对象 模型 。 　 　 ● 用 IDL 语言 来 描述 该 对象 模型 ， 得出 IDL 接口 文件 ， 从而 形成 整个 CORBA 系统 的 框架 模型 。 　 　 在 CORBA 中 ， 接口定义 了 一类 对象 的 属性 和 行为 ， 包括 在 这些 对象 中 进行 的 各类 操作 ， 将 对象 模型 化为 IDL 接口 文件 等 。 这是 一个 交互 的 过程 ， 在 转化 的 过程 中 ， 程序员 可能 对 IDL 文件 和 对象 模型 作 进一步 的 改动 ， 以 得到 最佳 的 结果 。 结束语 　 　 基于 InternetIntranet 的 数据 集成系统 的 开发 又 面临 新 的 挑战 。 OMG 已经 提出 了 用于 国际 互联网 的 CORBA 标准 IIOPInternetInterORBProtocal 。 不同 厂商 的 ORB 只要 支持 IIOP 就 能 互相 通信 ， 使 在 浏览器 内 运行 的 客户 ORB 能 与 任何 其它 在 InternetIntranet 上 运行 的 CORBA 兼容 对象 通信 。 由于 IIOP 涉及 了 比 翻译 HTTP 和 CGI 脚本 少得 多 的 开销 ， 保证 了 CORBA 为 基于 Web 的 应用程序 提供 更 高性能 和 可 扩展 的 能力 。 由此可见 ， 基于 CORBA 标准 的 Web 技术 将 有待 进一步 深入研究 和 开发 ， 并 有着 广泛 的 应用 前景 。 本 课题 属 年 国家 科研 资助 项目 罗大杰 （ 上海交通大学 计算机系 上海 ） 董玮文 （ 上海交通大学 计算机系 上海 ） 董传良 （ 上海交通大学 计算机系 上海 ） 参考文献 ， 钟玲 彭 莆阳 基于 CORBA 的 分布式应用 开发 计算机 工程 与 应用 ， 于戈 张斌 王国 仁郑 怀远 基于 CORBA 的 多 数据源 集成 技术 ， JeremyRosenbergerTeachYourselfCORBAInDays ， SteveVinoskiDistributedObjectComputingWithCORBA ， 张治洪史 忠植 谭宁 WWW 与 数据库 的 连接 计算机 研究 与 发展 ， 林凡 郭戈 涂玉平 郭 学理 WWW 与 数据库 互连 技术 分析 小型 微型 计算机系统 ， NNDuanDistributedDatabaseAccessinaCorporateEnvironmentUsingJavaFifthInternationalWorldWideWebConferenceMay ， AndeasVogelKeithDuddyJAVAProgrammingwithCORBA 收稿 日期 ： 年月日