计算机 应用 研究 APPLICATIONRESERCHOFCOMPUTERSVol 　 No 　 P 在 Windows 环境 下 开发 虚拟 设备 驱动程序 赫 江华 　 熊莺 　 韦峰 　 周一 勤 摘要 讲述 了 VxD 产生 的 背景 ， 通过 描述 VxD 与 虚拟机 、 虚拟机 管理器 之间 的 关系 阐明 了 VxD 的 作用 ， 并 详细 介绍 了 VxD 的 工作 原理 和 开发 过程 。 最后 给出 了 一个 VxD 程序 实例 梈 Packetvxd 。 关键词 VMMVMVxDDDBDCPServiceTableAPI 引言 Windows 的 结构 及 虚拟环境 　 　 为了 保证 应用软件 能 在 多种 平台 上 运行 ， Windows 除了 支持 Win 位 和 Win 位 应用程序 外 ， 还 支持 MSDOS 应用程序 的 运行 ， 成为 一个 完整 的 位 多任务 抢占 式 操作系统 。 Win 操作系统 之所以 有 较 强 的 兼容性 ， 它 是 通过 在 层次 式 体系结构 中 建构 一个 虚拟环境 实现 的 。 　 　 Win 的 结构组件 包括 三个 ： 虚拟机 VirtualMachine 、 虚拟机 管理器 VirtualMachineManager 、 虚拟 设备 驱动程序 VxD 。 在 Win 下 应用程序 是 在 虚拟机 中 执行 的 ， 虚拟机 有 两种 ， 它们 是 MSDOS 虚拟机 和 系统 虚拟机 。 每个 虚拟机 都 可 运行 DOS 应用程序 ， 一个 DOS 虚拟机 中 只 运行 一个 DOS 应用程序 ， 而 所有 的 Windows 应用程序 和 DLL 都 可 在 系统 虚拟机 中 运行 。 虚拟机 的 好处 是 ： 每个 虚拟机 都 有 独立 的 地址 空间 、 IO 空间 、 寄存器 、 堆栈 、 局部 描述符 表 、 中断向量 表 和 执行 优先权 ， 多个 虚拟机 可 同时 同步 工作 ， 互不 干扰 。 它们 对 用户 来说 是 透明 的 ， 每个 虚拟机 可 使用 全部 的 系统资源 ， 并 虚拟 地 控制 了 整个 系统 。 虚拟 管理器 在 Windows 虚拟环境 处于 核心 地位 ， 它 的 作用 是 产生 、 卸载 虚拟机 ， 协调 和 调度 各 虚拟机 的 工作 ， 并 作为 虚拟机 和 虚拟 设备 驱动程序 打交道 的 接口 ， 以及 负责 虚拟内存 的 管理 等 工作 。 由于 每个 虚拟机 都 可 使用 系统 的 所有 软硬件 资源 ， 这 就 存在 资源 怎样 被 无 冲突 共享 的 问题 。 为 解决 此 问题 ， Win 把 各 硬件 设备 抽象 成 一个个 的 虚拟 设备 ， 用户 若 要 访问 底层 硬件 ， 则 实际上 是 访问 这些 虚拟 设备 驱动程序 VxD 。 也就是说 ， 它 是 虚拟机 上 运行 的 任务 和 各 软硬件 资源 之间 的 接口 。 VxD 的 定义 及 它 与 Windows 各 部分 之间 的 关系 　 　 在 Win 位 的 版本 中 ， 整个 加载 设备 驱动程序 的 过程 是 ： 系统 在 启动 时 ， Windows 寻找 SYSTEMINI 文件 ， 读出 此 文件 中 nh 节 的 内容 ， 此节 的 格式 是 devicexxxx 驱动程序 。 这样 设备 驱动程序 在 系统 初始化 时 被 加载 。 这 带来 了 三个 问题 ， 无论 此 设备 驱动程序 需不需要 ， 所有 设备 驱动程序 都 将 在 初始化 时 加载 。 一旦 设备 驱动程序 加载 ， 就 不能 被 卸载 。 系统文件 SYSTEMINI 中 的 内容 无法 自动 地 和 实际 的 硬件 环境 保持一致 ， 此 一致性 需 程序 或 用户 来 维护 。 第一个 和 第二个 问题 所 带来 的 缺点 是 系统资源 被 浪费 。 VxD 起 始于 Windows 增强 模式 ， 它 是 Win 为 解决 这一 问题 而 加入 的 。 VxD 的 全称 是 VirtualDeviceDriver ， 其中 的 x 是 设备 名 的 统称 ， 如 虚拟 鼠标 设备 驱动程序 称为 VMD ， 虚拟 显示 设备 是 VDD 等等 ， 这些 VxD 文件 使得 设备 虚拟化 。 动态 地 检测 硬件 配置 并 自动 地 加载 合适 的 设备 驱动程序 ， 并 可 动态 地 卸载 、 重载 不同 的 虚拟 设备 驱动程序 。 　 　 虚拟机 、 虚拟机 管理程序 与 VxD 之间 的 关系 可用 图 表示 。 图 　 VM 、 VMM 、 VXD 关系 图 　 　 虚拟机 管理器 和 VxD 的 集合 构成 Winx 系统 的 核心 ， 而 VxD 和 VMM 之间 的 关系 又 是 十分 紧密 的 。 VMM 是 一个 特殊 的 VxD ， VxD 以 DLL 的 形式 链入 Windows 操作系统 的 核心层 环 ， VxD 在 VMM 的 监控 下 运行 ， 两者 的 协作 使 VxD 具有 应用程序 所 不 具备 的 能力 ， 这些 特殊 的 能力 包括 不 受 任何 限制 地 访问 硬件 设备 ； 访问 任何 的 内存 区域 。 例如 ， 在 保护模式 下 访问 绝对 物理地址 是 个 很 麻烦 的 问题 ， 可 通过 编写 访问 物理地址 的 VxD 解决 此 问题 ； 任意 查看 操作系统 的 数据结构 ； 捕获 软件 中断 、 截取 硬件 中断 、 捕获 IO 端口 操作 。 VxD 的 功能 及 作用 　 　 在 一般 情况 下 ， VxD 的 作用 是 用来 支持 硬件 设备 管理 的 ， 是 虚拟化 的 某 一 具体 硬件 的 设备 驱动程序 。 其 功能 是 向 应用程序 提供 与 硬件 接口 的 环境 ， 用以 同步 和 协调 各 虚拟机 对 设备 的 访问 ， 并 可以 向 其它 的 VxD 提供 服务 ， 还 能 为实 模式 软件 提供 应用程序 编程 接口 。 而 VxD 的 作用 不仅仅 限于 此 ， 它 还 可 作为 设备 驱动程序 而 不是 虚拟化 设备 ， 还 有些 VxD 与 硬件 设备 并 没有 什么 关系 ， 它 仅 向 其它 的 VxD 或 应用程序 提供 服务 。 这样 软件 在 虚拟机 上 运行 时 并不认为 虚 设备 和 实 设备 有 什么 不同 ， 在 软件 一级 看来 它们 是 完全 一样 的 。 虚拟 设备 驱动程序 的 运行 环境 　 　 虚拟 设备 驱动程序 是 针对 Windowsx 以下 平台 的 ， 此种 将 设备 虚拟化 的 机制 使 各 提供商 能为 特定 的 硬件 设备 编写 驱动程序 ， 这样 不同 类型 的 设备 就 可用 一种 标准 方式 加以 处理 。 需要 注意 的 是 Windows 操作系统 的 多个 版本 所 采用 的 核心技术 是 不同 的 ， 而且 它们 的 体系结构 发生 了 众多 的 变化 ， 这样 不同 的 Windows 操作系统 编制 虚拟 设备 驱动程序 的 方法 是 不同 的 。 然而 各 Windows 版本 在 底层 结构 上 没有 太大 的 变化 ， 所以 为 Winx 编写 的 设备 驱动程序 基本 可不 加 修改 就 可 在 Win 或 Win 平台 下 工作 。 VxD 的 结构 与 运行 原理 结构 　 　 一个 标准 的 VxD 由 部分 组成 ， 这个 部分 分别 存放 在 个 不同 的 段 中 ： 　 　 VxDCODE 必须 段 保护模式 代码段 ， 包括 虚拟 设备 的 设备 控制 过程 DCP 、 回调 函数 、 服务例程 和 API 函数 。 设备 控制 过程 接收 VMM 的 消息 ， 并 决定 对 消息 的 反应 ； VxD 服务例程 是 一批 由 其它 VxD 可 使用 的 函数 ， 以 使 其它 VxD 可 访问 本 VxD 控制 的 资源 ； VxD 的 API 函数 是 一批 可以 由实 模式 和 保护 式 任务 调用 的 函数 ， 应用程序 可以 通过 INTFH 得到 API 的 入口 点 ， 并 调用 这些 API 函数 ， 以 实现 对 设备 的 访问 。 大多数 应用程序 是 通过 这种 方式 访问 设备 的 。 编程 时用 VxDCODESEG 和 VxDCODEEND 宏 定义 此 段 ， 这 一段 也 叫做 LTEXT 。 　 　 VxDDATA 必须 段 保护模式 数据 段 ， 包括 虚拟 设备 的 设备描述 块 DDB ， 由 各 服务例程 地址 构成 的 服务 表 以及 虚拟 设备 使用 的 全局 数据 。 DDBDeviceDescriptorBlock 保存 了 VxD 的 关键 信息 ， 包括 ： 设备 名 、 DCP 地址 、 版本号 、 初始化 顺序 以及 API 函数 的 地址 ， 这些 信息 对 VxD 、 VMM 及 VM 上 运行 的 任务 ， 都 是 至关重要 的 。 编程 时 ， 使用 VxDDATASEG 和 VxDDATAENDS 来 定义 。 这 一段 也 叫做 LDATA 。 　 　 VxDICODE 可 选段 保护模式 初始化 代码段 ， 通常 包括 仅 用于 虚拟 设备 初始化 阶段 的 过程 和 服务 。 在 这里 VxD 响应 VMM 在 三个 阶段 发送 的 三条 初始化 消息 ， 并 进行 响应 阶段 的 初始化 操作 。 VMM 在 发送 消息 InitComplete 后 丢弃 该段 。 编程 时 ， 使用 VxDICODESEG 和 VxDICODEENDS 来 定义 。 这 一段 也 叫做 ITEXT 　 　 VxDIDATA 可 选段 保护模式 初始化 数据 段 ， 通常 包括 虚拟 设备 在 初始化 过程 和 服务 中 使用 的 数据 。 VMM 在 发送 消息 InitComplete 后 丢弃 该段 。 编程 时 ， 使用 VxDIDATASEG 和 VxDIDATAENDS 来 定义 。 这 一段 也 叫做 IDATA 。 　 　 VxDREALINIT 可 选段 实 模式 初始化 段 ， 包括 虚拟 设备 初始化 过程 和 初始化 用到 的 数据 。 在 这个 段 中 一般 存放 运行 环境 检测 以及 资源 判断 等 语句 ， 并 进行 相应 阶段 的 初始化 操作 。 VMM 在 加载 虚拟 设备 的 其余 段 之前 调用 此 过程 ， 然后 在 过程 返回 后 丢弃 该段 。 编程 时 ， 使用 VxDREALINITSEG 和 VxDREALINITENDS 来 定义 。 这 一段 也 叫做 RTEXT 。 运行 原理 VxD 的 初始化 过程 　 　 每个 VxD 的 初始化 过程 是 不同 的 ， 而且 模式 不同 过程 也 不同 。 总的说来 ， 过程 大致 是 ： Windows 在 初始化 时 ， 每 一个 VxD 按照 设备描述 块 中 定义 的 初始化 顺序 进行 初始化 工作 。 一般说来 ， 应当 按照 优先级 顺序 或 装入 顺序 初始化 VxD 。 VxD 的 INITVxD 的 装载 与 初始化 是 由 VMM 来 完成 ， VMM 通过 调用 VxD 中 定义 的 实 模式 与 保护模式 初始化 过程 来 完成 VxD 的 初始化 。 VMM 按照 以下 步骤 进行 VxD 初始化 。 　 　 装入 VxD 实 模式 初始化 段 ， 调用 实 模式 初始化 过程 。 这个 过程 判断 VxD 是否 装入 ， Windows 是否 启动 ， 指定 虚拟 设备 所 需 的 实例 数据 ， 在 内存 中 选择 虚拟 设备 所 需 的 独占 使用 的 页 。 　 　 在位 单层 模型 的 保护模式 内存 中 装入 虚拟 设备 的 其余 段 ， 并 丢弃 实 模式 初始化 段 。 　 　 VMM 将 各 VxD 按 其 InitOrder 值 排序 ， 分别 进行 初始化 。 　 　 发送 SysCriticalInit 消息 给 设备 控制 过程 ， 此时 硬件 中断 被 禁止 。 　 　 发送 DeviceInit 消息 给 设备 控制 过程 ， 此时 可 允许 硬件 中断 。 因此 虚拟 设备 必须 管理 来自 硬件 的 中断 。 　 　 发送 InitComplete 消息 给 设备 控制 过程 。 　 　 丢弃 初始化 代码 和 数据 段 ， 释放 用于 其它 目的 的 内存 。 因此 虚拟 设备 在 处理 InitComplete 消息 后 不能 再 存取 这些 段 中 的 过程 和 数据 。 　 　 在 初始化 阶段 的 任何时刻 ， VxD 都 可 通过 设置 标志 位 告诉 VMM 终止 VxD 的 装入 。 VMM 完成 每个 VxD 的 初始化 后 ， 才 开始 对 Windows 其它 模块 GUI 等 的 装入 执行 。 VxD 提供 的 服务 与 API 函数 　 　 VxD 提供 的 服务 是 VMM 或 某 一 特定 的 VxD 提供 的 函数 。 这些 服务 可 由 其他 VxD 使用 。 在 VxD 的 DDB 中有 两个 字 段 指定 了 该 VxD 提供 的 服务 ， 一个 是 DDBServiceTablePtr ， 它 指向 服务 表 的 指针 ， 另 一个 是 DDBServiceTableSize ， 它 是 服务 入口 表 的 项数 。 VxD 提供 的 服务 函数 在 服务 表中 定义 ， 这些 服务 可 通过 VMMCall 或 VxDCALL 宏来 调用 。 VxD 提供 的 第一个 函数 应该 是 GetVercion 函数 ， 以供 调用者 确认 VxD 的 有效性 。 　 　 VxD 的 API 过程 地址 在 DDB 表中 定义 ， 通过 提供 API 函数 ， VxD 为实 模式 和 保护模式 下 运行 的 任务 提供 正确 访问 设备 的 手段 。 　 　 VxD 在 被 正确 初始化 载入 后 ， 一个 运行 在 虚拟机 上要 和 系统 软硬件 打交道 的 程序 对 设备 的 访问 过程 是 ： 此 程序 发出 访问 请求 ， 这个 请求 经过 各种渠道 最后 到达 虚拟机 管理器 。 VMM 将 请求 解释 后 传给 该 设备 的 VxD 。 VxD 对 请求 进行 理解 ， 协调 处理 当前 状态 后 将 请求 发送给 物理 设备 。 物理 设备 返回 的 数据 由 VxD 传给 VMM ， VMM 再 传递 给 虚拟机 上 的 程序 。 如何 编写 虚拟 设备 驱动程序 VxD 的 开发 步骤 　 　 以前 的 VxD 全部 是 用 Intel 汇编语言 编写 ， 目的 是 为了 提高 速度 。 现在 ， VxD 可用 C 类库 编写 ， 而且 各 软件 公司 都 提供 了 开发 VxD 的 工具包 ， 例如 ， VtoolsDforWin 开发 工具包 。 　 　 创建 虚拟 设备 可 有 两种 方法 ， 一种 是 直接 对样 例 设备 进行 修改 ， 另 一种 是 重新 编写 一个 虚拟 设备 。 　 　 创建 虚拟 设备 的 步骤 包括 ： 　 　 阅读 有关 硬件 设备 类型 所 合适 的 虚拟 设备 的 说明 文档 。 　 　 对 目标 设备 进行 虚拟化 设计 ， 以 决定 目标 VxD 的 专用 部分 设计 。 　 　 建立 总体 框架 ， 这部分 工作 包括 ： DDB ， DCP 、 ServiceTable 以及 空 API 过程 的 定义 ， 构造 VxD 的 个 段 ， 从而 建起 一个 VxD 的 框架 。 　 　 编写 初始化 代码 ： 设计 实 模式 和 保护模式 初始化 过程 代码 和 数据 。 　 　 编写 VxD 所 需 的 控制 模块 、 虚拟 设备 服务 和 API 函数 。 　 　 编写 模块化 定义 的 文件 ， 此 文件 包括 有 该 虚拟 设备 的 名称 和 设备 所 需 的 描述 块 。 　 　 编译 并 链接 设备 。 　 　 使用 Windows 环境 下 的 调试器 来 测试 虚拟 设备 ， 并 阅读 有关 如何 调试 虚拟 设备 的 文档 。 　 　 为 虚拟 设备 创建 安装文件 INF 和 相关 的 文件 。 将 VxD 载入 Windows ， 可 通过 在 注册表 中作 一些 项目 的 登记 ， 然后 把 文件 拷贝到 Windows 的 系统目录 或 相关 的 目录 下 。 实例 　 　 我 在 开发 局域网 共享 Modem 软件 ModemProxy 中 ， 用 DDK ， VC ， MASM 开发 了 基于 NDIS 的 协议 驱动程序 ZPacketvxd 。 该 协议 驱动程序 遵循 NDIS 规范 向 上层 应用 提供 设置 网卡 接收 模式 ， 收 、 发 以太 帧 等 服务 。 具体 的 结构 框架 如图所示 。 图 　 ModemProxy 结构图 　 　 说明 ： 　 　 ModemProxy 使用 CreateFile 系统 函数 将 ZPacketvxd 动态 装入 系统 。 　 　 将 ZPacketvxd 分别 绑定 于 网卡 和 拨号 网络适配器 。 　 　 将 网卡 的 接收 模式 设置 为 PROMISCUOUS 模式 ， 以 监听 以太网 上 的 所有 数据包 。 　 　 ModemProxy 通过 ZPacketvxd 获取 局域网 上 的 以太 帧 ， 进行 必要 的 协议 处理 后 ， 再 通过 ZPacketvxd 经 拨号网络 转发 至 Internet 。 　 　 ModemProxy 通过 ZPacketvxd 获取 Internet 的 数据包 ， 进行 必要 的 协议 处理 后 ， 再 通过 ZPacketvxd 经 网卡 转发 至 局域网 。 赫 江华 （ 武汉大学 数学 与 计算机科学 学院 武汉 ） 　 熊莺 （ 武汉大学 数学 与 计算机科学 学院 武汉 ） 　 韦峰 （ 武汉大学 数学 与 计算机科学 学院 武汉 ） 　 周一 勤 （ 武汉大学 数学 与 计算机科学 学院 武汉 ） 参考文献 ， 徐 志海 等 Win 下 利用 VxD 访问 物理地址 微 计算机 应用 VolNoMayl ， 魏晋 鹏 等 Windows 深入 剖析 棾 跏 蓟 北京 ： 清华大学出版社 ， 美 MattPietrek 著米东 王森 等 译 Windows 系统 编程 奥秘 北京 ： 电子 工业 出版社 年 月 收稿 日期 ： 年月日