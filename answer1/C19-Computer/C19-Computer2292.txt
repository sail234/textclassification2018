计算机 应用 研究 APPLICATIONRESEARCHOFCOMPUTERS 　 Vol 　 No 　 P 用 DELPHI 进行 非 PASCAL 语言 应用程序 的 界面设计 刘公致 　 郭裕顺 摘要 介绍 了 一种 用 DELPHI 为 非 PASCAL 语言 编写 的 应用 程序设计 界面 的 方法 ， 其中 包括 DELPHI 与 该种 语言 的 接口 、 相互之间 数据 的 传递 、 用 DELPHI 定时器 实现 应用程序 执行 过程 中间状态 的 动态显示 及 应用程序 线程 创建 的 方法 。 关键词 混合 语言 设计 界面设计 DELPHI 前言 　 　 目前 开发 应用程序 时为 其 做 一 界面 是 必不可少 的 。 做 界面 的 工具 很多 ， 如 VB 、 VC 、 DELPHI 等 。 相 比较而言 DELPHI 集 使用方便 ， 界面 美观 、 功能强大 、 编写程序 少 、 易于 维护 等 优点 于 一身 ， 因此 程序开发 人员 常 优先 选用 它 来 为 应用 程序设计 界面 。 　 　 DELPHI 中 的 语言 是 以 PASCAL 为 基础 的 ， 但 大量 已有 的 应用程序 并 不是 用 PASCAL 写 的 ， 如用 C 、 FORTRAN 等 ， 这 就 产生 了 一个 问题 ： 如何 在 DELPHI 环境 下 为 这些 应用程序 进行 界面 的 开发 ？ 这里 我们 介绍 用 DELPHI 为 一个 用 C语言 编写 的 应用 程序开发 界面 的 方法 。 这是 一个 用于 电路 优化 的 程序 ， 执行 时需 反复 迭代 计算 直到 误差 小到 一定 程度 时 停止 ， 执行 一次 需 数秒 至 数十分钟 不 等 的 时间 ， 要求 能 在 界面 上 实现 对 程序执行 过程 的 控制 启动 、 暂停 、 终止 ， 应用程序 某些 参数 的 设置 优化 方法 、 优化 参数 、 收敛 准则 等 ， 还要 动态显示 每次 迭代 中间 结果 并 将 结果 以 波形 画出 。 我们 通过 如下 一些 问题 的 解决 ， 完成 了 这 一 任务 。 　 　 利用 Windows 提供 的 动态链接库 及 DELPHI 支持 DLL 这一 特点 ， 将 C语言 编写 的 应用程序 做成 一 动态链接库 ， 供 DELPHI 调用 ， 实现 了 C语言 与 PASCAL 语言 的 混合 使用 ； 　 　 用 DELPHI 定时器 实现 应用程序 执行 过程 中间状态 的 动态显示 ； 　 　 为了 实现 对 应用程序 的 控制 和 计算机 在 执行 应用程序 的 同时 还 能 进行 其它 操作 ， 为 它 创建 了 一线 程 。 　 　 下面 我们 介绍 具体 解决 过程 。 C语言 与 DELPHI 的 接口 　 　 在 DELPHI 下 调用 非 PASCAL 语言 编写 的 应用程序 ， 首先 要 用 该种 语言 开发工具 将 其 做成 动态链接库 ， 因为 应用程序 用 C语言 编写 ， 所以 我们 用 VC 为 工具 。 先 在 源程序 中将 其 定义 为 可 被 外部 调用 的 函数 ， 然后 在 VC 中 选择 连成 DLL 文件 ， 即可 生成 DLL 库 。 对本 应用程序 ， 相关 的 源程序 代码 如下 ： declspecdllexportvoiddooptdeclspecdllexportvoidtransdatadoubledoubledoubleint 　 　 　 doublevoiddooptvoidtransdatadoubleptimdoublepspecdoublepspec 　 　 　 intpnumdoublepval 　 　 declspecdllexport 说明 所 定义 的 函数 可 被 外部 调用 。 此 动态链接库 中 除了 doopt 是 优化 程序 外 ， 另 一 函数 transdata 是 用于 传送 应用程序 执行 状态 的 信息 的 ， 在 定时器 中 调用 。 通过 这一 函数 的 不断 访问 ， DELPHI 能 及时 获得 应用程序 的 当前 状态 信息 ， 从而 在 界面 上 定时 刷新 ， 达到 动态显示 的 目的 。 上述 动态链接库 的 名字 为 delodll 。 　 　 其次 需在 DELPHI 主程序 中 说明 应用程序 为 库函数 ， 本 程序 相关 的 源程序 代码 如下 ： proceduretransdataptpointerpspointerpspointerpnpointer 　 　 pvpointercdeclexternaldelodllnametransdataproceduredooptcdeclexternaldelodllnamedoopt 　 　 关键字 cdecl 是 调用 规则 ， 说明 调用 的 是 C语言 函数 。 external 告诉 编译器 ， 应 把 源程序 代码 中 对 这个 函数 的 调用 处理 成在 这里 给出 名字 的 外部 DLL 模块 的 调用 ， 这里 是 把 对 transdata 和 doopt 调用 处理 成 对外部 delodll 模块 的 调用 。 动态显示 　 　 要 在 界面 上 实现 应用程序 执行 状态 的 信息 的 动态显示 ， 一般 的 方法 是 在 应用程序 每 循环 一次 时 调用 界面 更新 程序 一次 或 设法 向 Windows 发送 重画 消息 。 但 这里 应用程序 用 C语言 编写 。 在 DELPHI 环境 下 界面 更新 程序 只能 用 PASCAL 语言 编写 ， C 无法 直接 再 调用 DELPHI 中用 PASCAL 语言 编写 的 界面 更新 程序 ， 向 Windows 发送 重画 消息 再 触发 界面 更新 程序 也 较 难 实现 ， 因此 我们 选用 DELPHI 中 的 定时器 来 实现 动态显示 。 定时器 允许 在 指定 间隔 内 触发 事件 ， 在 定时器 定时 触发 事件 处理程序 中写 一段 代码 ， 该 代码段 首先 要 取得 应用程序 执行 状态 的 信息 。 在 这里 是 调用 上述 数据 传送 子程序 transdata ， 其次 是 刷新 界面 ， 这里 是 调用 界面 更新 程序 redraw 。 定时器 每隔 一段时间 触发 一次 ， 传送 一次 数据 ， 然后 通过 一 变量 fval 判断 数据 与 上次 相比 有无 变化 ， 若有 变化 ， 说明 迭代 了 一次 ， 需 更新 界面 ， 否则 界面 不变 。 相关 的 源程序 代码 如下 ： procedureTFormTimerTimerSenderTObject 　 begin 　 　 transdatapttpspsspnupv 　 　 iffval Λ pvthen 　 　 　 begin 　 　 　 　 redrawpttpspsspnupv 　 　 　 　 fval Λ pv 　 　 　 endend 　 　 TFormTimerTimer 是 定时器 触发 事件 处理程序 ， 由 定时器 定时 触发 。 需 指出 的 是 定时器 定时 间隔 要 设定 得 比 应用程序 迭代 一次 时间 短 。 为 应用程序 创建 一线 程 　 　 在 DELPHI 菜单中选择 FILE ― NEW ， 再 在 出现 的 ObjectRepository 对话框 中 选择 线程 对象 ， 接着 在 NEWTHREAD 对话框 中 键入 新 对象 名称 ， 就 可 生成 一个 包含 线程 对象 的 新 单元 ， 再 在 其中 添加 应用程序 。 我们 创建 的 线程 源程序 代码 如下 ： unitunitinterfaceuses 　 ClassesextctrlsSysUtilstype 　 TmythreadclassTThread 　 private 　 protected 　 　 　 public 　 　 end 　 implementationproceduredooptcdeclexternaldelodllnamedooptproceduretmythreadExecutebegin 　 dooptendend 　 　 线程 对象 名为 Tmythread ， 应用程序 doopt 添加 在线 程 对象 的 Execute 方法 中 ， 当 主程序 调用 线程 对象 的 Create 方法 时 ， 线程 对象 的 Execute 方法 会 自动 执行 ， 即 执行 该 应用程序 。 主程序 通过 调用 线程 对象 的 Suspend 、 Resume 、 Terminate 方法 还 可以 控制应用程序 的 暂停 、 继续 、 终止 。 程序框图 　 　 主程序 如图所示 ， 定时器 模块 如图所示 。 图 主程序 图 定时器 模块 　 　 主程序 中线 程 调用 部分 源程序 如下 ： unitunitinterfaceuses 　 　 WindowsMessagesSysUtilsClassesGraphicsControls ， 　 　 FormsDialogsStdCtrlsMenusExtCtrlsTeeProcsunit 　 　 TeEngineChartButtons 　 type 　 　 TFormclassTForm 　 　 　 MainMenuTMainMenu 　 　 　 ChartTChart 　 　 　 TimerTTimer 　 　 　 procedurerunClickSenderTObject 　 　 　 procedureFormCreateSenderTObject 　 　 　 procedureTimerTimerSenderTObject 　 　 　 　 private 　 　 　 procedurethreadendSenderTObject 　 　 　 　 public 　 　 fmythreadTmythread 　 　 end 　 var 　 　 FormTForm 　 implementation 　 usesUnit 　 procedureTFormrunClickSenderTObject 　 begin 　 fmythreadtmythreadcreatefalse 　 timerenabledtrue 　 fmythreadonterminatethreadend 　 end 　 procedureTFormlthreadendSenderTObject 　 begin 　 timerEnabledfalse 　 endend 　 　 当 界面 上 的 运行 按钮 按下 时 ， 按钮 的 onclick 事件 触发 ， 运行 这一 事件 处理程序 TFormrunClick ， 首先 调用 线程 对象 的 create 方法 启动 线程 ， 应用程序 开始 执行 ， 同时 用 timerenabledtrue 命令 打开 定时器 。 定时器 不停 传送 应用程序 执行 状态 信息 ， 更新 界面 ， 直到 应用程序 停止 执行 ， 线程 终止 ， 触发 线程 对象 的 onterminate 事件 ， 转向 处理 这一 事件 的 程序 TFormthreadend ， 即 通过 timerEnabledfalse 命令 关闭 定时器 ， 至此 整个 程序运行 结束 。 　 　 本 程序 在 DELPHI 环境 下 开发 成功 ， 且 运行 良好 。 刘公致 杭州 电子 工业 学院 CAE 研究所 杭州 郭裕顺 杭州 电子 工业 学院 CAE 研究所 杭州 参考文献 ， 美 PThurrottGBrentRBagdazianSTendon 著卢 庆龄 等 译 DELPHI 编程 参考手册 北京 清华大学出版社 ， 美 HaroldDavis 著宋 建云 等 译 DELPHIforWindowsPowerToolkit 北京 电子 工业 出版社 收稿 日期 ：