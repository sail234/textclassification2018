软件 学报 JOURNALOFSOFTWARE 年 第卷 第期 　 NoVol 基于 规则 面向 属性 的 数据库 归纳 的 无 回溯 算法 周生炳 　 张 　 钹 　 成 　 栋 　 　 摘要 　 该文 提出 了 基于 规则 的 面向 属性 知识 发现 方法 的 无 回溯 算法 把 背景 知识 理解 为 特殊 的 逻辑程序 并 把 它 的 子句 展开 为 完全 归结 子句 ， 然后 按照 用户 要求 定义 并 确定 每个 属性 的 恰当 层次 每个 属性 的 多个 值 归纳 为 恰当 层次 中 的 值 只 需 一遍 扫描 因此 无需 回溯 　 　 关键词 　 知识 发现 概念 层次 无 回溯 算法 　 　 中图法 分类号 　 TPTPANonbacktrackingAlgorithmfortheRuleBasedAttributeorientedDatabaseInductionApproachZHOUShengbing 　 ZHANGBo 　 CHENGDong （ AirForceTelecommunicationEngineeringInstituteXian ） （ DepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijing ） （ BusinessSchool 　 RenminUniversityofChina 　 Beijing 　 ） 　 　 Abstract 　 InthispaperanonbacktrackingalgorithmispresentedfortherulebasedattributeorienteddatabaseinductionapproachThebackgroundknowledgeisconsideredasalimitedlogicprogramandeveryclauseofitisexpandedasacompleteresolutionclauseThentheconceptofexactlevelforanattributeintheconcepthierarchiesisdefinedandspecifiedaccordingtoitsthresholdrequiredbytheusersThevaluesofeachattributeareinductedasonesinitsexactlevelbyonlyonepasswithoutbacktracking 　 　 Keywords 　 Knowledgediscoveryindatabasesconcepthierarchiesnonbacktrackingalgorithm 　 　 自从 第一本 有关 知识 发现 （ knowlegdediscoveryindatabases 简称 KDD ） 的 文集 ［ ］ 出版 以来 有关 KDD 或 数据 采掘 （ datamining ） 的 研究 得到 广泛 的 关注 ［ ～ ］ JHan 等 人 提出 了 面向 属性 （ attributeoriented 的 概念 提升 方法 简称 AO 方法 ） 其后 他们 围绕 AO 方法 进行 了 一系列 深入 的 工作 ［ ～ ］ 在 文献 ［ ］ 中 他们 将 AO 方法 推广 为 基于 规则 （ rulebased 的 AO 方法 简称 RBAO 方法 ） 其 主要 特点 是 根据 规则 对 数据库 进行 两遍 扫描 以 提升 概念 我们 提出 背景 知识 可 看成 是 特殊 的 逻辑程序 在 把 每个 规则 展开 为 完全 归结 后 可以 根据 用户 要求 确定 每个 属性 概念 提升 的 恰当 层次 从而 进行 一遍 扫描 即可 完成 概念 提升 避免 了 回溯 下面 首先 介绍 RBAO 方法 然后 讨论 它 的 无 回溯 算法 　 基于 规则 的 AO 方法 　 　 AO 方法 的 关键在于 用 概念 层次 表示 的 领域专家 提供 的 背景 知识 最 常用 的 概念 层次 是 概念 树 或 概念 格 ［ ］ 其中 概念 提升 是 无条件 的 但是 在 某些 情况 下 用户 可能 希望 表达 有 条件 的 概念 提升 即 除了 依赖 概念 本身 外 ， 还 依赖于 别的 概念 例如 在 城乡居民 经济 状况 调查 中元 的 月 收入 对 农民 是 高 收入 但 对 城市居民 则 是 中等 收入 对 某些 城市 的 居民 甚至 是 低收入 鉴于 此 WDCheung 等 人 把 AO 方法 推广 为 基于 规则 的 AO 方法 加强 了 AO 方法 的 表达 和 归纳 能力 ［ ］ 　 　 在 基于 规则 的 AO 方法 中 背景 知识 由 一组 泛化 规则 表示 泛化 规则 形 如 　 　 　 　 　 　 　 　 Cx ← AxBx 它 的 意思 是 对 元组 x 某个 属性 a 的 概念 （ 属性 值 ） A 可以 推广 到 概念 C （ 更 高级 的 属性 值 ） 如果 x 满足条件 BB 形如 BBnBi 是 不同于 属性 a 的 某个 属性 bi 的 概念 或 表示 算术 比较 关系 基于 规则 的 AO 方法 （ 简称 RBAO 方法 ） 分为 两步 进行 我们 以 一个 例子 来 说明 　 　 第步 从 初始 关系 到 主 关系 　 　 尽可能 地 按 属性 阈值 和 泛化 规则 提升 概念 合并 相同 的 元组 得到 的 广义 关系 叫做 主 关系 （ primerelation ） 图 　 　 例 ： 一个 大学 学生 数据库 由 模式 StudentNameStatusSexAgeBirthplaceGPA 组成 学习 任务 是 发现 计算机专业 学生 的 特征 规则 属性 GPA 的 概念图 如图所示 对应 的 泛化 规则 如下 生成 的 主 关系 见表 　 　 R 　 poor ← 　 　 R 　 poor ← graduate 　 　 R 　 average ← undergraduate 　 　 R 　 average ← 　 　 R 　 good ← 　 　 R 　 good ← graduate 　 　 R 　 excellent ← undergraduate 　 　 R 　 excellent ← 　 　 R 　 weak ← poor 　 　 R 　 weak ← averageseniorgraduate 　 　 R 　 strong ← averagefreshmansophomorejunior 　 　 R 　 strong ← good 　 　 R 　 strong ← excellent 　 　 　 　 表 StatusSexAgeBirthplaceGPAVoteUndergraduateM ～ CanadaAverageUndergraduateM ～ CanadaGoodUndergraduateF ～ CanadaExcellent … … … … … … GraduateM ～ CanadaPoorGraduateM ～ CanadaGoodGraduateF ～ CanadaExcellent 　 　 第步主 关系 中 某些 属性 应 进一步 泛化 直到 关系 的 规模 小于 泛化 关系 阈值 在 第步 泛化 后 可能 损失 一些 信息 例如 表中 第个 元组 是 按 R 提升 到 weak 还是 按 R 提升 到 strong 是 无法 确定 的 因为 身份 信息 （ freshmansophomorejuniorsenior ） 在 第步 泛化 中 丢失 了 事实上 合并 到 这个 元组 的 个 学生 中 可能 有 各个 年级 的 学生 因此 第步 应用 回溯 算法 恢复 丢失 的 信息 　 　 在 主 关系 中 一个 广义 元组 是 初始 关系 的 一个 元组 集合 合并 的 结果 该 元组 集 称为 广义 元级 的 源集 而 广义 元组 称为 覆盖 元组 回溯 算法 的 原理 如下 ： 　 　 把 主 关系 中 的 元组 回溯到 它们 的 源集 在 初始 关系 中 加入 一个 虚拟 属性 coveringtupleid （ 覆盖 元组 标识符 ） 来 记录 对应 的 覆盖 元组 　 　 对表中 的 主 关系 应用 这 一步 结果 见表 　 　 选择 某些 属性 提升 到 更 高级别 这 一步 在 表 所示 的 初始 关系 中 进行 　 　 　 　 表 NameStatusSexAgeBirthplaceGPACoveringtupleidjuniorMVancouver … … … … … … … sophomoreMCalgaryfreshmanMToronto … … … … … … … juniorMOttawaPhDMWaterloo 　 　 比较 合并 广义 元组 对 具有 相同 coveringtupleid 和 被 选 属性 值 的 元组 进行 比较 合并 其中 相同 的 元组 得到 的 结果 称为 加强 主 关系 enhancedprimerelation 本例 的 加强 主 关系 见表 　 　 　 　 表 CoveringtupleidGPAVoteStrongWeakStrong … … … Strong 　 　 合并 元组 映射 回主 关系 并 分裂 主 关系 中 的 元组 加强 主 关系 中 具有 相同 coveringtupleid 的 所有 元组 映射 为主 关系 中 对应 的 覆盖 元组 主 关系 中 的 元组 因此 分裂 为 若干个 元组 Vote 同时 被 调整 分裂 元组 中 某些 属性 泛化 为 加强 主 关系 中 的 对应 值 这 一步 的 结果 见表 　 　 　 　 表 StatusSexAgeBirthplaceGPAVoteUndergraduateM ～ CanadaStrongUndergraduateM ～ CanadaWeakUndergraduateF ～ CanadaStrong … … … … … … GraduateF ～ CanadaStrong 　 　 合并 分裂 主 关系 中 的 广义 元组 RBAO 方法 的 无 回溯 算法 　 　 无条件 概念 树 确定 了 属性 值 从 一般 到 特殊 的 依赖 关系 而 泛化 规则 还 确定 了 属性 之间 的 依赖 关系 例如 上例 GPA 依赖于 属性 StatusRBAO 方法 的 两 阶段 算法 没有 考虑 这 一点 因此 回溯 是 必需 的 下面 我们 用 类似 于 逻辑程序 的 某些 技术 对 泛化 规则 进行 变换 按 依赖 关系 对 属性 排序 按此 顺序 对 属性 进行 泛化 即可 避免 回溯 　 　 泛化 规则 重写 为 下述 形式 ： 　 　 　 　 axC ← axABxBnx ｜ B （ x ） Bnx 　 　 　 　 　 其中 axC 称为 规则 （ ） 的 头 axABxBnx 或 BxBnx 称为 规则 （ ） 的 体 ； Bix 形如 bixBi 或 bixBi 是 比较 运算符 abi 是 属性 名 这个 规则 的 意思 是 ： 对 元组 x 属性 a 的 值 A 提升 到 更 高级 值 C 如果 属性 bi 的 值 为 Bi 或 bi 的 值 与 Bi 满足 算术 关系 （ 小于 大于 等 ） 　 　 属性 a 依赖于 BBn 中 出现 的 属性 bi （ 如果 a ≠ bi ） 记为 abi 并 具有 传递性 ： abbc 则 ac 这里 我们 只 考虑 不同 属性 之间 的 依赖 关系 不 考虑 不同 层次 属性 值 之间 的 依赖 关系 如果 对 任何 属性 a 不 存在 属性 序列 bbn 使 abbbbnbnbna 则 称 泛化 规则 是 不 循环 的 　 　 对 规则 　 　 　 　 　 　 　 　 axC ← axABBn 　 　 　 　 　 　 　 　 　 　 　 　 　 　 如果 存在 下述 形式 的 规则 ： 　 　 　 　 　 　 　 　 axA ← axDEEm 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 或 　 　 　 　 　 　 　 　 bixEi ← bixFiHHk 　 　 　 　 　 　 　 　 　 　 　 　 　 　 那么 规则 　 　 　 　 　 　 　 　 axC ← axDEEmBBn 　 　 　 　 　 　 　 　 　 或 　 　 　 　 axC ← axABBibixFiHHkBiBn 　 　 称为 规则 （ ） 的 一个 归结 （ resolution ） 如果 规则 （ ） 不 存在 归结 则 称 这个 规则 是 一个 完全 归结 　 　 在 属性 a 的 规则 集合 中 概念 C 的 定义 是 以 axC 为头 的 所有 规则 的 集合 　 　 对于 关系 模式 Raan 中 的 所有 属性 如果 属性 a 不 依赖 其他 属性 （ 称为 独立 属性 ） 那么 不论 是否 存在 概念 层次 对 它 的 处理 都 与 AO 方法 相同 因此 不妨 设 aaan （ 称为 依赖 链 ） 　 　 无 回溯 算法 的 关键 是 以 关于 ai 的 规则 的 完全 归结 来 代替 初始 规则 并 按 aan 的 顺序 进行 概念 提升 为了 控制 泛化 过程 的 终止 需要 计算 各个 属性 的 概念图 中 每 一层 的 节点 个数 　 　 设 La 表示 属性 a 的 所有 规则 的 集合令 　 　 　 　 nodeaA ｜ axA 仅 在 La 的 规则 体中 出现 　 　 　 　 nodeaiC ｜ axC ← axABBn ∈ La 并且 A ∈ nodeai 　 　 　 　 maxaC ｜ axC 在 规则 头 中 出现 但 不 在 体中 出现 　 　 设 Tha 表示 属性 a 的 阈值 属性 a 的 恰当 层次 Sa 定义 如下 ： 　 　 如果 ｜ nodea ｜ ≤ Tha 则 Sanodea 　 　 如果 ｜ nodeak ∪ （ nodeai ） ∩ maxa ｜ Tha 并且 ｜ nodeak ∪ （ nodeai ） ∩ maxa ｜ ≤ Tha 则 Sanodeak ∪ （ nodeai ） ∩ maxa 　 　 因为 有些 概念 在 概念图 中 比较 低 的 层次 上 但 它 不能 再 提升 因此 恰当 层次 并 不 与 概念图 中 某 一层 的 节点 完全相同 还 得 考虑 这种 低层 概念 　 　 在 做 了 这些 准备 工作 之后 无 回溯 算法 就 很 简单 了 　 　 设 aaan 对 每个 属性 ai 指派 一个 阈值 Thai 从 a 开始 对 Sa 中 每个 概念 C 求 aC 的 定义 中 每个 规则 的 完全 归结 按照 这些 完全 归结 把 属性 a 的 值 提升 为 C 再 对 aan 重复 上述 过程 即 把 所有 属性 均 泛化 到 恰当 的 层次 然后 可以 去除 算术 比较 条件 中 属性 值较 多 而 不 存在 概念 层次 的 属性 　 　 把 无 回溯 算法 应用 于 前例 　 　 在 关系 Student 的 所有 属性 中 GPAstatus 其他 属性 都 是 独立 的 设 GPA 和 status 的 阈值 均 为 则 SGPAweakstrongSstatusundergraduategraduate 关于 weakstrong 的 完全 归结为 　 　 GPAweak ← GPA ∈ statussenior 　 　 GPAweak ← GPA ∈ statussenior 　 　 GPAweak ← GPA ∈ statusgraduate 　 　 GPAweak ← GPA ∈ statusgraduate 　 　 GPAweak ← GPA ∈ 　 　 GPAstrong ← GPA ∈ 　 　 GPAstrong ← GPA ∈ statusfreshman 　 　 GPAstrong ← GPA ∈ statussophomore 　 　 GPAstrong ← GPA ∈ statusjunior 　 　 GPAstrong ← GPA ∈ statusgraduate 　 　 GPAstrong ← GPA ∈ 　 　 GPAstrong ← GPA ∈ statusfreshman 　 　 GPAstrong ← GPA ∈ statussophomore 　 　 GPAstrong ← GPA ∈ statusjounior 　 　 GPAstrong ← GPA ∈ statussenior 　 　 首先 提升 属性 GPA 结果 见表 （ 属性 AgeBirthplace 的 泛化 与 AO 方法 一致 这里 假定 已经 完成 ） 　 　 　 　 表 StatusSexAgeBirthplaceGPAJuniorM ～ CanadastrongSophomoreF ～ Canadastrong … … … … … SeniorM ～ Canadaweak … … … … … 　 　 再 泛化 属性 Status 结果 见表 　 　 　 　 表 StatusSexAgeBirthplaceGAPUndergraduateM ～ CanadastrongUndergraduateF ～ Canadastrong … … … … … GraduateM ～ Canadaweak … … … … … 　 　 在 泛化 过程 中 相同 元组 随时 合并 记录 在 属性 Vote 中 　 　 算法 的 复杂性 分解 为 归纳 部分 和 演绎 部分 的 代价 归纳 部分 是 有效 的 见 文献 ［ ］ 由于 相对 于 数据库 的 规模 规则 集合 的 规模 要 小得多 而且 大多数 情况 下 是 简单 的 条件 规则 因此 这部分 复杂性 可以 忽略不计 　 　 HHuang 和 WCFu 提出 了 AO 方法 和 RBAO 方法 的 另 一种 有效 实现 ［ ］ 但 他们 的 算法 要求 概念图 是 平衡 的 即 每条 从 极小 节点 到 极大 节点 的 路径 的 长度 相等 另外 该 方法 不能 处理 算术 比较 条件 我们 的 无 回溯 算法 统一 处理 算术 比较 条件 因而 在 这 两 方面 优于 他们 的 算法 　 　 本文 研究 得到 国家自然科学基金 和 中国 博士后 科学基金 资助 作者 周生炳 年生 博士后 讲师 主要 研究 领域 为 人工智能 逻辑程序 知识 发现 张钹 年生 教授 ， 博士生 导师 ， 中国科学院 院士 主要 研究 领域 为 人工智能 神经 网络计算机 应用 成栋 年生 博士 副教授 主要 研究 领域 为 数据仓库 技术 在 营销 分析 中 的 应用 　 　 本文 通讯联系 人 ： 周生炳 西安 空军 电讯 工程学院 四系 计算机 室 　 　 作者 单位 ： 周生炳 （ 空军 电讯 工程学院 　 西安 　 ） ； 张 　 钹 （ 清华大学 计算机科学 与 技术 系 　 北京 　 ） ； 成 　 栋 （ 中国人民大学 工商管理 学院 　 北京 　 ） 参考文献 　 　 PiatetskyShapiroGFrawleyWJKnowledgeDiscoveryinDatabasesMenloParkCAAAAIMITPress 　 　 ChenMHanJYuPSDatamininganoverviewfromdatabaseperspectiveIEEETransactionsonKnowledgeandDataEngineering ～ 　 　 SilberschatzAStonebrakerMUllmanJDDatabaseresearchachievementsandopportunitiesintothestcenturySIGMODRecord ～ 　 　 ZiarkoWRoughSetsFuzzySetsandKnowledgeDiscoveryBerlinSpringerVerlag 　 　 CheungDWFuAWCHanJKnowledgediscoveryindatabasesarulebasedattributeorientedapproachInZbigniewRedMethodologiesforIntelligentsystemsthInternationalSymposiumBerlinSpringerVerlag ～ 　 　 HanJCaiYCerconeNDatadrivendiscoveryofquantitativerulesinrelationaldatabasesIEEETransactionsonKnowledgeandDataEngineering ～ 　 　 HanJTowardsefficientinductionmechanismsindatabasesystemsTheoreticalComputerScience ～ 　 　 HanJFuYDynamicgenerationandrefinementofconcepthierarchiesforknowledgediscoveryindatabasesInFayyadUMUthurusamyRedsProceedingsoftheKDDtheAAAIWorkshoponKnowledgeDiscoveryinDatabasesAAAITechnicalReportWSMenloParkCAAAAIPress ～ 　 　 HanJFuYExplorationofthepowerofattributeorientedinductionindataminingInFayyadUMetaledsAdvancesinKnowledgeDiscoveryandDataMiningMenloParkCAAAAIMITPress ～ 　 　 HanJHuangYCerconeNetalIntelligentqueryansweringbyknowledgediscoverytechniquesIEEETransactionsonKnowledgeandDataEngineering ～ 　 　 HuXCerconeNLearninginrelationaldatabasesaroughsetapproachComputationalIntelligence ～ 　 　 GodinRMissaouiRAnincrementalconceptformationapproachforlearningfromdatabasesTheoreticalComputerScience ～ 　 　 HuangYFuWCEfficientalgorithmsforattributeorientedinductionInFayyadUMUthurusamyRedsProceedingsofthestInternationalConferenceonKnowledgeDiscoveryandDataMiningMenloParkCAAAAIPress ～ 收到 原稿 　 收到 修改稿