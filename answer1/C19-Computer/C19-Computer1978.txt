微型机 与 应用 MICROCOMPUTERITSAPPLICATIONS 年 第卷 第期 VolNo 利用 WinInet 类 进行 TCPIP 通信 祝蔚莹 　 石 冰心 　 　 摘 　 要 ： Winsock 是 Windows 应用程序 间 TCPIP 通信 的 标准 。 以此 为 基础 的 VisualC 以上 版本 提供 的 API — WinInet ， 使 Internet 程序开发 变得 快捷 而 方便 。 本文 研究 探讨 了 如何 利用 WinInet 类 实现 TCPIP 通信 。 　 　 关键词 ： Internet 编程 　 Winsock 类 　 TCPIP 　 FTP 　 HTTP 　 Gopher 　 基于 Windows 操作系统 的 Internet 编程 　 　 Internet 早期 的 站点 是 UNIX 机器 ， 他们 实现 TCPIP 通信 的 标准 是 Berkeleysockets 协定 。 　 　 随着 Windows 操作系统 的 形成 与 发展 ， 借鉴 Berkeleysockets 的 思想 ， 创建 了 在 Windows 应用程序 之间 实现 TCPIP 通信 的 标准 — — WindowsSocketsWinsock 标准 。 　 　 在 此基础 之上 ， 又 开发 了 一些 便于 程序员 按照 客户服务 者 ClientServer 模式 进行 Internet 编程 的 API 。 因此 ， 程序员 可 根据 不同 需要 采用 不同 的 方法 实现 TCPIP 通信 ： 直接 使用 Winsock ； 使用 消息 APIMessageAPI ； 使用 Internet 服务者 APIISAPI ； 利用 VisualC 以上 版本 提供 的 Internet 类及 函数 — — WinInet 。 其中 ， Winsock 环境 WINSOCKDLL 、 WSOCK 等 的 接口 ， 它 保证 了 在 不同 的 Windows 环境 如 Windows 或 WindowsNT 下 ， 不论 动态 库 的 名称 与 实现 socket 功能 的 机制 如何 ， socket 接口 是 相同 的 。 Winsock 不仅 可 实现 TCPIP 通信 ， 还 可 支持 其它 协议 ， 如 IPXSPX 。 MAPI 服务 提供 利用 用户 已 安装 的 客户端 服务 软件 发送 传真 、 声音 邮件 、 电子邮件 等 信息 的 接口 API 。 ISPAI 用于 增强 、 扩展 HTTP 服务器 功能 ， 它 的 开发者 制造 extensions 与 filtersextensions 是 可 由 用户 从 Web 页面 上 调用 的 动态 库 ， 它 类似 于 CGI 应用程序 ； filters 是 由 服务器 启动 的 动态 库 ， 用于 监视 或 改变 出 、 入 服务器 的 数据 。 WinInet 提供 了 HTTP 、 FTP 、 Gopher 等 应用层 协议 的 客户端 接口 。 　 　 WinInet 使 Internet 程序开发 变得 快捷 而 方便 。 本文 将 对 WinInet 以及 如何 利用 WinInet 开发 Internet 通信 程序 进行 介绍 和 探讨 。 　 WinInet 　 什么 是 WinInet 　 　 WinInet 是 指 由 MicrosoftWin 提供 的 Internet 函数 ， 在 WININETDLL 动态 库中 所 包含 的 这些 函数 使得 程序员 能 方便 地 使用 HTTP 、 FTP 和 gopher 访问 Internet ， 再 稍加 变通 后 还 能 进行 Finger 查询 和 Whois 查询 。 VC 以上 版本 的 MFC 则 提供 了 WinInet 类 ， 这些 类 屏蔽 了 WinSock 和 TCPIP 协议 ， 程序员 只须 调用 这些 类 的 方法 ， 而 不用 了解 协议 的 具体内容 就 能 编制 客户端程序 访问 HTTP 、 FTP 、 gopher 等 站点 。 　 WinInet 类 及其 功能 　 　 MFC 共 提供 了 个 WinInet 类 ， 它们 实现 了 一系列 Internet 访问 功能 。 　 　 CInternetSession ： 创建 个 或 多个 Internet 通道 。 　 　 CInternetConnection 与 子类 ChttpConnection 、 CftpConnection 、 CGopherConnection 管理应用程序 与 Internet 服务器 Http 服务器 、 FTP 服务器 、 gopher 服务器 建立 的 连接 。 　 　 CInternetFile ： 与 子类 CHttpFile 、 CGopherFile 提供 了 访问 远程 服务器 Http 服务器 、 gopher 服务器 文件系统 的 方法 。 　 　 CFileFind 与 子类 CftpFileFind 、 CgopherFileFind 完成 在 本地 及 远程 Internet 站点 FTP 服务器 、 gopher 服务器 查找文件 的 功能 。 　 　 CGopherLocator 从 gopher 站点 获取 gopher 位标 locator ， 并 提供 给 CgopherFileFind 用来 定位 。 　 　 CInternetException 描述 与 Internet 操作 有关 的 例外情况 。 　 用 WinInet 编制 Internet 客户端程序 　 　 Internet 客户端 应用程序 指 基于 Internet 协议 如 gopher 、 FTP 、 HTTP 等 从 网络 数据 资源 服务器 获取信息 的 程序 。 程序员 可以 直接 调用 Win 函数 或 采用 MFC 的 WinInet 类 编写 WinInet 客户端 应用程序 。 　 　 作者 在 编制 Internet 客户端程序 的 过程 中 ， 用 WinInet 类 完成 了 HTTP 查询 、 FTP 查询 、 gopher 查询 、 Finger 查询 、 Whois 查询 等 功能模块 的 实现 。 查询 的 主要 功能 是 设法 与 服务器 建立 连接 ， 然后 从 服务器 直接 接受 回应 信息 或 获取 对 服务器 相关 文件系统 的 控制 句柄 。 下面 分别 阐述 不同 协议 查询方法 的 实现 。 　 　 WinInet 类 的 声明 在 头文件 afxineth 中 ， 在 使用 到 WinInet 类 的 应用程序 中要 有 语句 ： 　 　 includeafxineth 　 访问 WWW 服务器 　 　 做 一个 HTTP 连接 ， 最 简单 的 方法 是 创建 CInternetSession 对象 ， 以 某 一 有效 HTTP 站点 URL 为 参数 调用函数 OpenURL ， 它 返回 CInternetFile 文件 句柄 ， 其 内容 为 由此 URL 定位 的 web 页面 信息 ， 可以 像 处理 本地 文件 一样 对 其 进行 读 、 写 、 搜索 等 操作 ， 获取 必要 的 信息 。 有关 程序代码 如下 ： 　 　 CInternetSessionsession 　 　 CInternetFilefileNULL 　 　 try 　 　 　 fileCInternetFilesessionOpenURLURL 　 　 catchCInternetExceptionpEx 　 　 　 fileNULL 　 　 　 pExDelete 　 　 iffile 　 　 　 　 根据 需要 对 文件 读 、 写 、 搜索 … … ； 　 　 其中 try － catch 语句 捕捉 非法 URL 连接 而 引发 的 CInternetException 类 错误 ， 正常 处理 代码 放入 try … 中 ， 异常 处理 代码 放在 catch … 中 。 　 　 访问 WWW 站点 ， 还 可以 使用 ChttpConnection 类 。 具体方法 是 ， 以 http 服务器 域名 及其 执行 http 协议 端口 的 端口号 缺省 为 参数 ， 调用 CinternetSessionGetHttpConnection 函数 建立 与 某 站点 的 连接 ， 再用 CHttpConnectionSendRequest 函数 向 HTTP 服务器发送 服务 请求 ， 返回值 为 包含 应答 信息 的 CHttpFile 类型 的 文件 句柄 。 　 访问 FTP 站点 　 　 首先 调用函数 CInternetSessionGetFtpConnetion 建立 FTP 连接 ， 所 需要 的 参数 依次 为 ： FTP 站点 域名 、 用户名 、 用户 口令 、 ftp 服务 端口号 缺省值 为 、 访问 模式 被动 或 主动 ， 其中 用户名 若为 空 ， 则 表明 是 请求 匿名 FTP 服务 ， 用户 口令 为 用户 的 email 地址 。 通过 此 连接 用 CftpConnection 类 的 方法 操作 远程 FTP 服务器 的 文件系统 ， 如用 SetCurrentDirectoryGetCurrentDirectory 设置 获取 此 连接 的 当前 FTP 目录 ， 用 RemoveDirectoryCreateDirectory 删除 创建 目录 ， 用 Rename 、 Remove 、 PutFile 、 GetFile 及 OpenFile 等 对 文件 进行 更名 、 删除 、 移入 、 取出 及 打开 等 操作 ， 最后 必须 用 Close 方法 关闭 与 FTP 服务器 的 连接 。 因此 ， 可用 MFC 来 编制 提供 图形界面 的 FTP 客户端 应用程序 ： 用 MFC 提供 的 各种 控制器 如 statictext 、 editbox 、 Button 、 ListBox 、 Listcontrol 、 Treecontrol 等 编辑 对话框 界面 ， 提供 良好 的 命令 输入 及 信息 输出 用户界面 ； 用 MFCClassWizard 向 相关 类中 加入 响应 用户 命令 操作 的 消息 映射 宏及 处理函数 ； 建立 FTP 连接 ， 并 在 相应 的 消息 映射函数 中 加入 程序代码 ， 实现 对 FTP 站点 文件系统 的 操作 ， 并 将 结果 信息 显示 给 用户 。 　 　 建立 FTP 连接 及 远程 文件 操作 的 关键 代码 ： 　 　 CInternetSessionsession “ MyFTPSession ” 　 　 CFtpConnectionpConnNULL 　 　 pConnsessionGetFtpConnectionlpSNlpUNlpPWnP 　 　 例 ： lpSN “ ftpwhneteducn ” lpUNlpPW “ ” np 　 　 对 该 站点 匿名 ftp 访问 ； 　 　 … … 　 　 pConnGetFilepRFpLF 　 　 pRF — — 从 FTP 站点 取回 的 文件名 ， 　 　 pLF — — 本地 系统 创建 的 文件名 　 　 pConnGetCurrentDirectorystrCD 　 　 strCD 为 Cstring 对象 的 指针 　 　 … … 　 　 pConnClose 　 　 sessionClose 　 访问 Gopher 站点 　 　 首先 用 CInternetSessionGetGopherConnection 函数 与 某 合法 Gopher 站点 建立 连接 ， 参数 依次 为 Gopher 服务器 名 、 用户名 、 用户 口令 、 gopher 协议 端口号 确省值 为 ， 返回值 为 控制 此 连接 的 CGopherConnection 对象 的 指针 。 　 　 CGopherConnection 类 的 成员 函数 CreateLocator 用于 创建 CGopherLocator 对象 ， 它 的 个 参数 依次 为 目录 或 文件名 、 查找 关键字 、 类型 标志 位 ， 返回值 是 gopher 服务器 某一 文件 或 目录 的 定位器 locator ， 应用程序 将 此 定位器 看作 不 透明 的 记号 ， 用于 从 gopher 服务器 检索 信息 。 每个 gopher 定位器 都 有 特定 的 属性 来 确定 已 查找 到 的 文件 或 服务器 的 类型 ， CGopherLocator 类 的 成员 函数 GetLocatorType 可 获取 定位器 的 属性 。 　 　 应用程序 一般 用 gopher 定位器 ， 为 参数 调用 CGopherFileFind 类 的 成员 函数 FindFile 来 查找 一 gopher 文件 。 文件名 可 作为 函数 的 第个 参数 ， 返回 一 CGopherFile 文件 句柄 ， 利用 此 句柄 可 读 、 写 文件 ， 获取 所 需 信息 ； 接下来 还 可 调用 CGopherFileFind 类 的 另 一 成员 函数 FindNextFile ， 继续 查找 同名 文件 。 其中 CGopherFileFind 对象 的 创建 要 以此 gopher 连接 作 参数 。 　 　 查找 gopher 文件 ， 还 可 直接 使用 CGopherConnection 类 的 成员 函数 OpenFile ， 它 也 需要 gopher 定位器 作 参数 ， 返回 CGopherFile 文件 句柄 。 　 　 建立 gopher 连接 及 查找 相关 文件 的 关键 代码 如下 ： 　 　 CInternetSessionsession 　 CGopherConnectionconNULL 　 　 CGopherFilepgFNULL 　 　 consessionGetGopherConnectionhost 　 　 host 是 gopher 服务器 域名 　 　 CGopherFileFindpFnewCGopherFileFindcon 　 　 CGopherLocatorlcconCreateLocatorNULLNULLGOPHERTYPEDIRECTORY 　 　 pgFpFFindFilelcpFNpFN 为 文件名 字符串 　 　 … … 　 用 Gopher 传送 Finger 查询 　 　 Finger 是 一种 查询 某一 站点 的 所有 在线 用户 或 某 一 指定 用户 状况 的 古老 Internet 协议 。 在 MFC 类及 API 函数 名中 均 不 含有 finger 这一 单词 ， 但 可以 通过 指定 协议 端口 的 方式 ， 用 与 gopher 查询 相关 的 WinIntet 类 或 API 函数 实现 finger 查询 。 　 　 Internet 信息 交互 均 有 特定 主机 和 端口 与 之 对应 ， 域名 或 IP地址 确定 主机 ， 端口 port 确定 进程 。 著名 的 协议 采用 标准 端口号 。 例如 ， 当 应用程序 用 远程 主机 域名 、 端口号 、 gopher 类型 、 文件名 字符串 等 个 参数 创建 gopher 定位器 locator 时 ， gopher 客户端 将 此 字符串 发送给 用该 远程 主机 的 端口 ， 远程 主机 上 gopher 服务器 监听 端口 ， 在 收到 查询 字符串 后 按 gopher 协议 规定 回应 信息 。 Finger 协议 的 标准 端口 是 ， 远程 主机 上 的 Finger 服务器 ， 监听 此 端口 并 发送 Finger 应答 来 响应 由 客户端 发来 的 字符串 。 Finger 协议 规定 ： 若 字符串 是 “ ＼ r ＼ n ” ， 回应 信息 是 主机 上 所有 在线 用户 的 相关 信息 列表 ； 若 字符串 是 “ 用户名 ＼ r ＼ n ” ， 回应 信息 是 该 用户 的 相关 信息 。 　 　 因此 ， 进行 Finger 查询 ， 可以 调用 成员 函数 CinternetSessionGetGopherConnection ， 以 运行 Finger 服务器程序 的 远程 主机名 及 端口 作 参数 ， 建立 Finger 连接 。 在 调用 CGopherConnection 的 成员 函数 CreateLocator 创建 定位器 时 ， 以 客户端 发送 的 Finger 查询 字符串 作为 参数 II 查找 关键字 ， 即可 向 Finger 站点 发出 查询 信息 ， Finger 站点 的 应答 信息 则 置于 CGopherFile 文件 中 带回 。 　 　 建立 Finger 连接 并 进行 Finger 查询 的 关键 代码 如下 ： 　 　 CInternetSessionsession ； 　 CGopherConnectionconNULL 　 　 consessionGetGopherConnectionhostNameNULLNULL 　 　 CGopherLocatorlcconCreateLocatorNULLqstrGOPHERTYPETEXTFILE 　 　 qstr 是 “ ＼ r ＼ n 或 “ 用户名 ＼ r ＼ n 　 　 CGopherFilefileconOpenFilelc 　 　 … 　 　 读 文件 　 用 Gopher 传送 Whois 查询 　 　 Whois 协议 也 不 被 WinInet 类 直接 支持 。 类似 于 FingerWhois 对 发到 其 端口 的 字符串 作出 响应 ， Whois 的 标准 端口 是 。 Whois 服务 通常 由 Internet 上 的 DNS 服务 系统 提供 。 在 创建 定位器 时 ， 以待 查找 的 主机名 作为 查找 关键字 ， 即可 由 返回 的 CGopherFile 文件 带回 查询 结果 。 　 　 在 下面 的 Whois 查询 范例 中 ， “ rsinternicnet 是 提供 Whois 服务 的 主机 的 域名 ， “ wwwmicrosoftcom 是 被 查询 主机 的 域名 。 　 　 CInternetSessionse 　 CGopherConnectionconNULL 　 　 conseGetGopherConnection “ rsinternicnetNULLNULL 　 　 CGopherLocatorlcconCreateLocatorNULL “ wwwmicrosoftcom 　 　 CGopherFilefileconOpenFilelc 　 　 … 读 文件 ； 　 　 上述 利用 WinInet 类 编制 Internet 客户端程序 的 方法 ， 可以 方便 地 访问 HTTP 、 FTP 、 Gopher 、 Finger 、 Whois 等 站点 。 作者 单位 ： 武汉 华中理工大学 电子 与 信息工程 系 参考文献 　 JamsaK ， CopeKINTERNET 编程 北京 ： 电子 工业 出版社 ， 　 KruglinskiDJVisualC 技术 内幕 北京 ： 清华大学出版社 ， 收稿 日期 ：