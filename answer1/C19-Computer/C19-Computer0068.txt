计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNo 基于 进化 规划 求解 SteinerTree 问题 曲润涛 ， 席裕庚 ， 韩兵 摘要 ： 提出 基于 进化 规划 求解 SteinerTree 问题 的 新 方法 ， 通过 和 原有 启发式 算法 的 结合 提高 了 进货 算法 的 效率 ， 仿真 证明 了 进化 规划 算法 的 有效性 。 关键词 ： SteinerTree ； 进化 规划 ； NPcompleteSolveSteinerTreeProblemBasedonEvolutionaryProgrammingQuRuntaoXiYugengHanBingDeptofAutomationShanghaiJiaotongUniversityShanghai 【 Abstract 】 InthispaperanovelmethodbasedonevolutionaryprogrammingisproposedtosolvetheSteinerTreeProblemwecombinedwiththeheuristicalogoithmtoimprovetheefficientoftheevolutionaryalgorithmTheeffectiveofevolutionaryprogrammingalogrithmisgivenoutthroughsimulation 【 Keywords 】 SteinerTree ； Evolutionaryprogramming ； NPcomplete 　 　 SteinerTree 问题 ， 是 图论 中 的 一个 NPcomplete 问题 ， 由于 在 网络 中有 广泛 的 应用 而 受到 大量 的 重视 。 　 　 SteinerTree 问题 的 描述 如下 ： 　 　 一个 网络 可以 表示 为 无 向 图 G ＝ V ， E ， C ： 其中 V 是 顶点 的 集合 ， 包括 N 个 顶点 ； E 是 边 的 集合 ， 包括 L 条边 ； C 是 边 的 代价 ， cE → R ， cij 表示 顶点 i 和 j 之间 的 代价 。 SteinerTree 问题 就是 给定 一个 顶点 的 集合 DV 的 情况 下 ， 寻找 G 的 一棵 子树 SV ， E 包括 D 中 的 所有 顶点 ， VV ， EE ， 并且 使 CostS ∑ ce 最小 。 　 　 尽管 SteinerTree 的 描述 比较简单 ， 但 问题 的 求解 非常 困难 ， 在 图论 中 一般 通过 启发式 方法 解决 这一 问题 。 基于 启发式 的 解决方案 ， 在 优化 性能 上 有时 不能 满足要求 ， 因此 寻求 新 的 方法 来 解决 这一 问题 。 　 　 进化 算法 是 解决 NPcomplete 的 一种 有效 策略 ， 并且 在 很多 NPcomplete 问题 上 得到 应用 ， 其中 最为 典型 的 是 基于 遗传算法 解决 旅行 商 问题 。 目前 已经 有 文献 使用 遗传算法 求解 SteinerTree 问题 ， 但 完全 使用 遗传算法 进行 SteinerTree 问题 的 求解 效率 比较 低下 ， 因此 本文 试图 通过 进化 规划 算法 和 启发式 算法 结合 求解 SteinerTree 问题 。 Steiner 树 问题 的 启发式 算法 和 实质 　 　 目前 已经 有 很多 Steiner 树 问题 的 启发式 算法 ， 这些 算法 都 只能 得到 Steiner 树 问题 的 近似 解 ， 其中 最 常用 的 是 MST 启发式 算法 。 　 　 求解 Steiner 树 问题 的 MST 算法 通过 两步 实现 。 给定 一个 网络 GV ， E ， 和 一组 网络 节点 D ∈ V ， 首先 从 G 产生 一个 子图 G ， G 只 包含 D 中 的 节点 ， 在子 图中 节点 集合 D 中 的 节点 通过 其 最小 路径 连接 ； 然后 计算 G 的 最小 扩展 树 。 将 G 中 的 边 映射 回 G ， 即 得到 所求 的 Steiner 树 。 应该 指出 的 是 ， 通过 MST 求得 的 Steiner 树 不是 最优化 的 ， 有 研究 指出 在 最坏 情况 下 MST 算法 的 性能 是 最优 结果 的 一半 ， 但 在 平均 性能 上 非常 接近 最优 。 图是 一个 简单 的 网络 模型 ， 图是 使用 MST 算法 求解 SteinerTree 问题 的 解 ， 图是 最优 的 SteinerTree 问题 的 解 。 图 简单网络 模型 图 使用 MST 算法 求解 SteinerTree 问题 的 解图 最优 的 SteinerTree 问题 的 解 　 　 SteinerTree 问题 的 实质 是 寻找 网络 中 的 Steiner 点 ， 由于 Steiner 点 的 存在 ， 使 通过 Steiner 点 连接 目的 节点 的 代价 减小 。 在 网络 中 不 在 目的 节点 组中 的 节点 都 可能 成为 Steiner 点 。 不同 的 Steiner 点 组合 得到 不同 的 结果 。 假设 网络 节点 的 数目 ｜ V ｜ N ， 目的 节点 的 数目 为 ｜ D ｜ M ， 则 所有 组合 数目 为 CNMCNMCNMACNMNMNM ， 可见 SteinerTree 问题 的 求解 随着 N － M 的 增大 成 指数 增长 ， 因此 是 一 NP 问题 。 进化 规划 算法 　 　 进化 规划 是 由 美国 LJFogelAJOwens 和 MJWalsh 提出 ， 最近 又 由 DBFogel 进行 了 完善 的 一类 随机化 搜索算法 ， 它 模拟 生物界 中 的 自然选择 和 生物进化 机制 ， 通过 群体 搜索 策略 在 解 空间 中 进行 最 优点 的 搜索 。 进化 规划 算法 隐含 有 并行算法 机制 ， 所以 特别 适合 于 解决 传统 方法 难以解决 的 的 问题 。 其 基本 框架 为 ： 　 　 Step 生成 待 求解 问题 的 偶数 个 初始 群体 ； 　 　 Step 计算 群体 中 各 个体 的 性能指标 ， 并 排序 ； 　 　 Step 若 不 满足 迭代 停止 条件 ， 则 ： 　 　 选取 性能指标 排在 前 ％ 父代 个体 复制到 下一代 ； 　 　 对 选出 的 个体 按 一定 规则 变异 操作 ， 结果 存入 下一代 ； 　 　 合并 和 形成 新一代 群体 ， 返回 到 步骤 。 　 　 进化 规划 和 遗传算法 一样 有 较 好 的 全局性 能 ， 但 有 不同 的 侧重点 。 遗传算法 强调 遗传 操作符 ， 性能 的 改进 主要 通过 交换 ； 进化 规划 则 侧重于 群体 层次 的 进化 ， 性能 的 改进 主要 通过 变异 。 它们 之间 的 不同 决定 了 它们 的 适用范围 ， 一般 地 讲 遗传算法 的 优化 性能 较 好 ， 而 进化 规划 的 收敛 性能 较 好 。 由于 本文 的 主要 目的 是 验证 使用 进化 算法 求解 SteinerTree 问题 的 可行性 ， 而 不是 求取 SteinerTree 问题 的 最优 解 ， 因此 本文 使用 了 操作 相对 简单 的 进化 规划 算法 ， 同样 也 可 使用 遗传算法 采用 同样 的 方法论 求解 SteinerTree 问题 。 基于 进化 规划 和 启发式 算法 结合 求解 SteinerTree 问题 　 　 文献 采用 了 遗传算法 ， 通过 对 网络 的 扩展 树 进行 编码 ， 在 扩展 树 的 范围 内 对 优化 的 SteinerTree 树 进行 搜索 ， 但 该 方法 是 一种 纯粹 的 随机 方法 ， 算法 的 效率 很 低 。 由 上节 的 分析 可以 看出 ， SteinerTree 问题 的 本质 是 一个 组合 优化 问题 ， 问题 可分解 为 两步 实现 ： 首先 选择 Steiner 点 ， 然后 通过 启发式 算法 求解 在 该组 Steiner 点下 的 SteinerTree 。 因此 本文 考虑 将 进化 算法 和 启发式 算法 结合 求解 SteinerTree 问题 。 本文 进化 规划 算法 基于 MST 启发式 算法 ， 同样 的 思想 和 方法论 也 可 推广 到 其他 求解 Steiner 树 问题 的 启发式 算法 。 　 　 本文 首先 使用 进化 规划 算法 来 选择 Steiner 点 ， 然后 对于 选定 选择 Steiner 点 ， 使用 启发式 算法 求解 在 这些 选择 Steiner 点下 的 Steiner 树 。 由于 进化 规划 算法 中 的 每 一个 个体 对应 于 一棵 Steiner 树 ， 这样 可以 通过 进化 规划 算法 的 变异 和 选择 操作 使 个体 逐步 进化 ， 最终 求得 优化 的 SteinerTree 问题 的 解 。 　 　 算法 的 具体 细节 如下 ： 个体 描述 采用 MODEN 一维 数组 表示 个体 ， MODEi 或 ： 对于 D 中 的 点 MODEi ； 对于 不 在 D 中 的 点 ， MODEi ， 如果 选择 该点 作为 Steiner 点 ； 否则 MODEi 。 适应度 函数 的 确定 使用 启发式 算法 求解 各个 个体 的 Steiner 树 ， 其 代价 作为 适应度 函数 。 变异 操作 通过 随机 选择 个体 的 不 在 D 中 的 点 ， 对 其 MODEi 进行 取反 操作 ， 对 个体 进行 变异 。 变异 的 幅度 和 问题 的 规模 有关 ， 可以 在 进化 的 开始 使用 较大 的 变异 幅度 ， 在 进化 的 后期 采用 较 小 的 变异 幅度 。 选择 操作 可以 采用 一般 进化 规划 的 选择 策略 ， 为了 保持 个体 间 的 差异 ， 防止 群体 过早 收敛 于 局部 极小值 ， 本文 采用 了 对 相同 的 个体 保留 一个 的 策略 。 在 进化 的 每 一代 ， 设 Cmax 为 群体 中 的 最大值 ， 对于 相同 的 个体 ， 保留 一个 个体 ， 令 其他 个体 的 代价 修改 为 ： CiCiCmax 。 根据 进化 规划 的 选择 规则 ， 每 一代 从 好 到 坏 排列 ， 然后 选择 ％ 的 个体 遗传 到 下一代 ， 因此 相同 的 个体 在 下一代 不会 出现 ， 保持 了 种群 的 多样性 ， 避免 了 过早 收敛 。 结束 标志 的 选择 进化 算法 的 结束 标志 可以 有 两种 方式 ： 一种 是 个体 对应 的 目标 函数 值 已 达到 最优 值 ； 另 一种 是 使用 迭代 次数 进行 控制 。 由于 本文 算法 的 目的 是 验证 算法 的 有效性 ， 而 不是 求取 最优 解 ， 因此 本文 使用 迭代 次数 控制 进化 算法 的 结束 。 仿真 实例 　 　 为了 验证 仿真 的 结果 ， 使用 随机化 的 方法 产生 具有 实际 网络 特性 的 图 的 模型 ， N 个 网络 节点 在 一定 的 区域 内 随机 产生 ， 网络 节点 的 距离 使用 欧拉 距离 。 任意 两 节点 i 和 j 之间 的 边 ， 根据 节点 之间 的 距离 按照 一定 的 概率 产生 ， 边 产生 的 概率 按 下面 的 公式 决定 。 　 　 上式 中 ， dij 是 i 和 j 之间 的 距离 ， L 是 任意 两 节点 间 的 最大 距离 ， α 和 β 是 之间 的 参数 ； 当 β 增大 时 ， 网络 边 的 密度 增大 ， 当 α 减小 时 ， 网络 距离 小 的 边 相对 于 距离 大 的 边 的 密度 增大 ， 网络 边 的 代价 等于 网络 节点 间 的 距离 。 　 　 在 个 随机 产生 的 节点 的 网络 模型 上将 进化 规划 算法 求得 的 解 和 基本 的 启发式 算法 求解 的 结果 进行 了 对比 。 在 仿真 中 进化 规划 算法 运行 代 ， 群体 规模 选择 为 ， 变异 幅度 选择 为 到 。 图中 实线 给出 了 启发式 算法 和 进化 规划 算法 的 性能比 ， 虚线 给出 了 启发式 算法 和 优化 解 的 比 ， 仿真 结果 是 次 仿真 的 平均值 。 由图 可以 看出 使用 进化 规划 算法 求得 的 解 基本 接近 优化 Steiner 问题 的 解 。 更为重要 的 是 ， 用 启发式 算法 求得 的 解是 不 稳定 的 ， 文献 证明 了 在 最坏 的 情况 下 ， 使用 MST 启发式 算法 求得 的 解 的 性能 是 最优 解 的 一倍 。 而 使用 进化 规划 和 启发式 算法 结合 的 方法 求解 Steiner 问题 ， 可以 提高 启发式 算法 的 鲁棒性 ， 当然 这 是 在 付出 一定 计算 代价 的 前提 下 获得 的 。 图 仿真 结果 结论 　 　 本文 提出 了 使用 进化 规划 算法 和 启发式 方法 相结合 求解 SteinerTree 问题 的 新思路 ， 尽管 这种 方法 不能 保证 搜索 到 最优 的 解 ， 但是 能够 改善 启发式 算法 的 性能 ， 改善 启发式 的 鲁棒性 ， 仿真 表明 这种 方法 是 有效 的 。 作者 单位 ： 上海交通大学 自动化 研究所 ， 上海 参考文献 WinterPSteinerProbleminNetworksASurveyNetworks ： BernardMWRoutingofMultipointConnectionsIEEEJSAC ： JulstromBAAGeneticAlgorithmfortheRectilinearSteinerProblemProcofthethInternationalConferenceonGeneticAlgorithmsUniversityofIllinoisatUrbanaChampaignMorganKaufmannSanMateoCA ： 陈国良 遗传算法 及其 应用 北京 ： 人民邮电出版社 KouLMarkowskyGBermanLAfastAlgorithmforSteinerTreesActaInformatica ：