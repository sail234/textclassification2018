软件 学报 JOURNALOFSOFTWARE 年 第卷 第期 VolNo 基于 测试 执行 的 失效 数据 建模 研究 方菲 　 王立福 　 杨芙清 摘要 　 目前 ， 软件可靠性 研究 和 实践者 普遍 感到 ， 由于 缺乏 失效 数据 ， 严重 影响 了 工作 的 进展 该文 通过 研究 和 分析 软件测试 与 软件可靠性 度量 之间 的 关系 ， 提出 了 一种 基于 测试 执行 的 失效 数据模型 JBFDM （ JadeBirdfailuredatamodel ） ， 并 探讨 了 基于 此 模型 的 数据 收集 和 管理 技术 最后 ， 给出 了 基于 此 模型 的 失效 数据 收集 工具 JBFDCollector 关键词 　 软件 失效 ， 软件测试 ， 操作 概图 ， 软件可靠性 软件可靠性 模型 中图法 分类号 TPResearchontheTestExecutionBasedFailureDataModelingFANGFeiWANGLifuYANGFuqingDepartmentofComputerScienceandTechnologyBeijingUniversityBeijingAbstract 　 AtpresentsoftwarereliabilityresearchersandengineersaredesperatelyhinderedbythelackoffailuredataInthispapertheauthorspresentamodelwhichiscalledJBFDM （ JadeBirdfailuredatamodel ） forfailuredatabasedonthestudyandanalysisoftherelationshipbetweensoftwaretestingandreliabilityestimationFurthermorebasedonthemodelJBFDManapproachofcarryingoutfailuredatacollectionandmanagementisalsoproposedandadatacollectiontoolwhichiscalledJBFDCollectorispresentedKeywords 　 Softwarefailuresoftwaretestingoperationprofilesoftwarereliabilitysoftwarereliabilitymodel 　 　 通常 ， 软件可靠性 是 指 ： 在 规定 的 时间 内 和 规定 的 环境 下 ， 程序 无 失效 运行 的 概率 ［ ］ 正确 地 收集 和 分析 软件 失效 数据 ， 是 软件 质量 评价 系统 的 核心 工作 之一 在 实际 的 可靠性 工程 中 存在 着 ： 缺乏 标准 、 对 失效 数据 收集 的 低效 管理 ， 以及 支持 失效 数据分析 及 可靠性 度量 的 失效 数据 收集 工具 的 缺乏 等 问题 ， 这些 是 造成 软件可靠性 度量 的 研究 和 实践 失败 的 主要 原因 　 　 从 目前 的 发展趋势 来看 软件测试 作为 与 软件开发 的 相关 活动 已 成为 与 软件产品 和 过程 都 相关 的 质量保证 技术 软件测试 方法 、 测试 过程 、 测试 设计 、 测试工具 等 都 对 可靠性 度量 有着 重要 的 影响 　 　 通过 分析 和 研究 黑盒 软件测试 方法 对 软件可靠性 度量 的 影响 ， 并 结合 青鸟 工程 实践 ， 本文 提出 一种 基于 测试 执行 的 失效 数据模型 JBFDMJadeBirdfailuredatamodel 以及 基于 此 模型 的 失效 数据管理 技术 其 目的 是 ： 提供 一致 的 失效 数据 建模 、 收集 及 管理 的 可靠性 度量 过程 ， 从而 支持 可靠性 度量 ； 利用 测试 及 软件 现场 收集 的 数据 来 评价 测试计划 、 操作 概图 及 测试方法 的 有效性 最后 ， 本文 给出 基于 JBFDM 的 失效 数据测试 及 收集 工具 JBFDCollector 的 主要 设计 思想 软件测试 环境 软件可靠性 度量 与 操作 概图 　 　 软件可靠性 度量 就是 用 软件可靠性 模型 对 软件可靠性 进行 评价 和 预测 　 　 软件可靠性 度量 不 准确 的 根本原因 是 模型 的 假设 与 实际 软件 不符 为了 简化 模型 的 计算 ， 在 已 提出 的 可靠性 度量 模型 中常 假设 在 测试 时 ， 软件 按 预期 的 实际 运行 方式 进行 但 在 实际 测试 时 ， 软件 的 使用 方式 可能 与 现场 运行 时有 很大 的 不同 例如 ， 在 测试 期间 ， 对 不 常用 的 功能 （ 如 系统 失效 保护 ） 也 要 进行 大量 的 测试 ， 以 确保 软件 在 需要 时能 按 要求 正常 工作 因而 确定 基于 用户 的 操作 概图 ， 并 按 此 操作 概图 确定 测试计划 ， 对于 准确 评价 软件 在 实际 运行 中 的 可靠性 是 非常 重要 的 　 　 操作 概图 （ operationalprofile ） 是 关于 如何 使用 系统 的 一种 定量 特征描述 ， 它 通过 列举 程序 可能 的 输入 状态 和 它们 发生 的 概率 而 建立 　 　 一种 建立 操作 概图 的 方法 是 ， 将 程序 的 输入 空间 划分 成 多个 等价 类 ， 并 确定 每个 等价 类中 每个 类 的 发生 概率 测试 时 ， 可 从 每个 等价 类中 选择 一个 状态 运行 　 　 一个 实用 的 定义方法 是 ， 用 程序模块 序列 代替 输入 状态 ［ ］ ， 输入 状态 和 模块 序列 之间 是 多 对 一 的 关系 程序 操作 概图 ， 就是 所有 可能 的 模块 序列 集合 和 它们 发生 的 联合 概率 这种 定义方法 着重于 程序 的 结构特征 ， 通过 求 出 敏感 系数 ， 就 可 发现 哪些 模块 对 系统可靠性 的 影响 最为 关键 最 有效 的 测试 ， 应是 按 模块 关键 程度 递减 的 顺序 来 测试 所有 的 模块 　 　 操作 概图 的 获得 还 可 借助于 专门 的 统计分析 方法 ， 如 借助于 Markov 状态 转移 图 等 ， 本文 将 不 对此 进行 详细 讨论 ， 具体内容 可 参考文献 ［ ］ 　 　 可靠性 度量 基于 失效 数据 ， 而 失效 数据 只有 在 较 好 地 反映 了 用户 操作 概图 的 测试环境 下 进行 收集 ， 才能 保证 对 软件 在 实际 运行 中 可靠性 估计 的 准确性 　 　 因此 ， 一个 辅助 用户 定义 和 管理 其 操作 概图 并 进行 有效 的 系统 测试 的 测试环境 ， 是 保证 软件可靠性 度量 实施 的 关键 同时 ， 这 也 是 本文 要 介绍 的 青鸟 黑盒 软件测试 环境 所 具有 的 特征 青鸟 黑盒 软件测试 环境 青鸟 黑盒 软件测试 环境 模型 （ 如图所示 ） 图 　 青鸟 黑盒 软件测试 环境 示意图 　 　 JBTESTJadeBirdtestplatform 测试 平台 采用 录制 重 放 技术 ， 对 在 Windows 下 具有 图形用户界面 的 应用程序 进行 功能测试 JBTEST 的 主要 功能 是 ： 辅助 测试人员 按照 测试 规范 说明 制订 测试计划 ； 辅助 测试人员 捕获 并 编辑 测试用例 和 测试 脚本 ； 支持 测试 脚本 及 用例 的 自动 重 放 ； 当 测试 结束 时 给出 测试 结果 测试 管理 框架 软件测试 是 一个 有 规则 的 过程 ， 包括 测试计划 制定 、 测试用例 设计 、 测试 执行 以及 结果 比较 等 测试 活动 与 软件开发 过程 一样 ， 测试 本身 也 需要 设计 和 测试 测试 设计 的 好坏 ， 直接 影响 到 错误 的 发现 能力 和 测试 结果 评价 为此 ， 我们 提出 测试计划 树 概念 ， 以 管理 和 指导 测试 设计 ， 如图所示 对 被 测 程序 可以 建立 一个 或 多个 测试计划 ； 每个 测试计划 包括 对 被 测 程序 的 一项 或 几项 功能 进行 测试 的 规程 ； 针对 要 测试 的 每项 功能 定义 一个 测试 过程 ， 在 每个 测试 过程 中 可定义 多个 测试 脚本 ， 这些 测试 脚本 描述 测试 过程 中 的 每 一次 测试 ； 在 每个 测试 脚本 中 还 可以 定义 多个 测试用例 ， 描述 测试 过程 中 对 界面 对象 某种 状态 的 记录 和 比较 这样 一个 软件测试 计划 的 建立 过程 ， 最终 可 形成 软件 的 一棵 测试计划 树图 　 青鸟 软件测试 计划 树 失效 数据 建模 　 　 在 建立 失效 数据模型 中 ， 主要 涉及 以下 几个 问题 失效 数据模型 与 操作 概图 　 　 在 青鸟 黑盒 测试环境 及 测试计划 管理 框架 下 ， 操作 概图 的 定义 过程 可以 与 测试计划 树 的 建立 过程 相对 应 ， 这样 的 测试计划 既 反映 了 用户 的 实际操作 概图 ， 也 反映 了 系统 测试 的 主要 内容 而且 ， 将 操作 概图 以树型 层次 方式 管理 ， 用户 对 操作 概图 的 定义 则 可以 在 层次 框架 的 指导 下 有序 地 进行 　 　 在 测试 过程 中 ， 测试 脚本 信息 是 非常 重要 的 这 是因为 在 以 操作 概图 为 指导 的 测试计划 中 ， 测试 脚本 就是 对 程序 一次 操作 （ 即 运行 ） 的 定义 它 对 分析 操作 概图 的 精度 、 测试 的 充分 程度 、 操作 对 错误 的 发现 能力 以及 （ 对 可靠性 而言 ） 关键部件 的 识别 都 是 非常 重要 的 　 　 本文 所 提出 的 青鸟 软件 失效 数据模型 （ 以下 简称 JBFDM ） 包含 了 对 测试 脚本 的 建模 失效 数据模型 与 软件可靠性 　 　 大多数 软件可靠性 度量 模型 是 建立 在 这样 的 认识 上 ， 即 失效 的 发生 是 随机 的 虽然 已 提出 了 多个 可靠性 度量 模型 ， 但 从 基于 时间 的 失效 建模 的 角度 来看 ， 可以 将 它们 分为 基于 累积 失效 计数 的 度量 模型 和 基于 失效 间隔 计数 的 度量 模型 两类 图是 软件可靠性 度量 常用 的 两类 失效 数据 图 　 两类 常用 隔用 失效 数据模型 　 　 因此 ， 为了 支持 多种 可靠性 模型 的 度量 ， 建模 时 必须 包含 这种 时间 类型 的 数据 JBFDM 覆盖 了 这 两类 数据 　 　 经验 表明 时间 的 最佳 度量 单位 是 CPU 的 执行 时间 ［ ］ 但 CPU 时间 有 可能 难以 获取 ， 可 采用 其他 度量 ， 如 日历 时间 、 时钟 时间 、 服务 时间 、 逻辑 时间 和 结构 覆盖 域 （ 如 分支 覆盖 ） ［ ， ］ 　 　 考虑 到 度量 的 适当 性 、 数据 的 易 获取 性 、 度量 对 错误 的 敏感性 以及 时间 与 可靠性 度量 模型 的 相关性 ， JBFDM 支持 日历 时间 度量 另外 ， 为了 提供 对 测试 分析 的 支持 ， JBFDM 还 提供 了 逻辑 时间 度量 ， 以 测试 脚本 数 和 测试 脚本 覆盖率 软件 失效 与 软件 错误 　 　 软件 失效 failure 是 指 程序运行 的 外部 结果 偏离 了 需求 规范 所以 ， “ 失效 ” 是 动态 产生 的 ， 必须 通过 执行程序 才 会 发现 失效 　 　 软件 错误 （ fault ） 即 为 程序 中 的 缺陷 只有 在 某个 特定 的 环境 下 ， 某个 缺陷 才 会 导致 失效 可见 ， 软件 错误 是 失效 发生 的 必要条件 ， 但 不是 充分条件 为了 支持 对 失效 行为 以及 失效 行为 与 程序 内部 错误 之间 的 关系 的 分析 ， JBFDM 对 错误 分类 进行 了 建模 常用 的 错误 分类法 有 根据 错误 对 工作 功能 的 影响 程度 、 错误 的 起因 、 错误 征兆 、 程序开发 的 阶段 等 来 进行 分类 　 　 JBFDM 参照 美国 海军 标准 （ MILSTD ） ， 按照 对 工作 功能 的 影响 程度 ， 即 严酷 度 （ Severity ） 的 不同 ， 将 错误 分为 以 下级 　 　 一级 ： 不能 执行 正常 工作 功能 或 重要 功能 ； 或者 危及 人身安全 　 　 二级 ： 严重 地 影响 工作 功能 或 重要 功能 的 执行 ， 且 没有 办法 更正 ； 或者 干扰 操作者 ， 致使 工作 恶化 等 　 　 三级 ： 除了 有 适当 的 更正 方法 之外 ， 其他 的 与 二级 优先权 相同 　 　 四级 ： 使 操作者 不 方便 或 遇到 麻烦 ， 但 它 不 影响 执行 工作 功能 或 重要 功能 　 　 五级 ： 其他 错误 　 　 通常 ， 失效 描述 是 基于 文本 的 虽然 详尽 的 描述 有助于 错误 的 定位 ， 但 不能 进行 宏观 级 的 自动 错误 分类 和 分析 错误 按 严酷 度 级别 进行 分类 ， 便于 失效 数据 收集 的 自动化 和 失效 数据 的 标准化 　 　 另一方面 ， 错误 按 严酷 度 分类 ， 有助于 决定 测试 终止 时间 例如 ， 由于 时间 和 市场 的 要求 ， 可以 按 用户 对 程序 使用 频率 较 高 的 主要 功能 来 设计 操作 概图 并 进行 测试 ， 如果 所有 的 失效 均 在 四 、 五级 ， 那么 可以 决定 终止 测试 ， 进行 软件 发布 尽管如此 ， JBFDM 仍然 对 “ 失效 描述 ” 进行 了 建模 ， 以 支持 文本 失效 描述 失效 数据模型 粒度 　 　 在 收集 失效 数据 及其 他 数据 时应 注意 一个 问题 ： 可靠性 估计 预测值 的 有效 精度 总是 要 低于 数据 的 精度 如果 数据 以 月 为 单位 收集 ， 则 预报 一周 的 失效 数 就 没有 多大 意义 因此 ， 支持 多 粒度 的 数据 采集 是 很 重要 的 JBFDM 支持 年 、 月 、 日 、 时 、 分 、 秒 这种 粒度 数据 的 采集 　 　 综合 以上 分析 ， 本文 提出 青鸟 软件 失效 数据模型 JBFDM 它 包括 下面 的 两类 子 模型 　 　 子 模型 JBFDM ： 该 模型 覆盖 了 常用 的 累积 失效 计数 （ ） 失效 数据 收集者 （ ） 所属 项目组 （ ） 测试 区间 号 （ ） 累积 失效 数 （ ） 累积 测试 脚本 数 （ ） 测试 区间 长度 （ ） 严酷 度 Severity （ ） 失效 粒度 （ ） 失效 描述 （ ） 可能 原因 子 模型 JBFDM ： 该 模型 覆盖 了 常用 的 失效 时间 间隔 模型 （ ） 失效 数据 收集者 （ ） 所属 项目组 （ ） 失效 序号 （ ） 失效 间隔 （ ） 失效 时间 （ ） 测试 脚本 （ ） 严酷 度 Severity （ ） 失效 粒度 （ ） 失效 描述 （ ） 可能 原因 　 　 注 ： 表示 此项 数据 必须 收集 JBFDM 适用 于 系统 测试 期间 和 现场 运行 阶段 失效 数据管理 技术 　 　 失效 数据 收集 失败 的 主要 原因 是 失效 录入 手段 落后 以及 对 失效 数据 缺乏 有效 的 管理 目前 ， 在 许多 实施 软件可靠性 工程 的 企业 中 ， 失效 数据 的 收集 方式 主要 采用 手工 填写表格 方式 和 文件 记录 方式 　 　 对 以 这 两种 方式 收集 的 失效 数据 ， 很难 建立 和 维护 数据 之间 的 关系 ， 特别 是 对 分散 测试点 收集 的 数据 很难 维护 当 失效 数据 收集 格式 或 数据项 发生 改变 时 ， 以前 的 数据 则 可能 无效 ， 或者 需要 花费 很长 的 时间 进行 转换 对 数据 的 分类 或 统计 只能 以 手工 方式 进行 ， 既 困难 又 容易 出错 ， 非常 不利于 对 现场 测试数据 的 分析 ， 影响 错误 的 及时 排除 　 　 针对 上述 问题 ， 我们 提出 以下 几种 失效 数据管理 技术 　 　 （ ） 动态 生成 失效 数据 收集 模型 （ 如图所示 ） 当 用户 需要 按照 某 模型 建立 失效 数据 收集 库时 ， 系统 则 从 模型 属性 描述 库中 读取 模型 的 所有 信息 ， 动态 生成 数据库 这种 管理 技术 便于管理 失效 数据模型 的 自 扩展 和 系统 模型 的 扩充 图 　 动态 失效 模型 生成 示意图 　 　 （ ） 对 被 测 软件 、 失效 数据模型 和 基于 此 模型 的 失效 数据 集 ， 建立 用户 视图 这样 ， 不仅 可以 支持 数据 统计 及 分类 ， 还 有利于 对 可靠性 度量 过程 进行 管理 　 　 （ ） 命名 规范化 便于 将 失效 数据 与 系统 中 的 其他 数据 ， 如 失效 模型 数据 、 软件 基本 信息 数据 、 可靠性 度量 过程 数据 、 可靠性 模型 数据 等 区别 开来 ， 提高 管理 效能 青鸟 软件可靠性 失效 数据 收集 工具 JBFDCollector 　 　 青鸟 软件 失效 数据 收集 工具 JBFDCollector 有 以下 几个 主要 设计 思想 　 　 失效 数据 建模 是 开发 失效 数据 收集 工具 的 前提 ， 而 工具 本身 对 失效 建模 的 支持 也 会 使 其 具有 较 好 的 扩展性 JBFDCollector 应用 上 一节 所述 的 动态 生成 失效 数据 收集 模型 技术 ， 支持软件 失效 数据 建模 及 管理 ， 并 内嵌 了 青鸟 软件 失效 数据模型 JBFDM 　 　 为了 支持 多个 用户 对 同一 软件 在 同一 时刻 进行 评测 ， 工具 的 开发 与 应用 必须 基于 分布式 网络 环境 JBFDCollector 采用 分布式 数据库 技术 ， 支持 多个 用户 同时 对 失效 数据 进行 录入 及 异地 更新 　 　 在 一个 支持 整个 软件可靠性 度量 过程 的 环境 中 ， 失效 数据管理 与 软件 管理 是 紧密 相连 的 软件 管理 不仅 包含 了 对 软件测试 进度 及 资源 的 约束 ， 还 包含 了 该软件 的 可靠性 目标 JBFDCollector 是 青鸟 可靠性 工具集 JBRelKit 的 一部分 ， 在 进行 失效 数据 收集 前 ， 必须 保证 被 评测 软件 已 在 系统 中 进行 了 登记 　 　 为了 准确 记录 失效 发生 的 时刻 ， 以 保证 失效 数据 的 有效性 及 准确性 ， JBFDCollector 对 被 评测 软件 的 执行 进行 实时 监控 ， 即当 应用 程序运行 时 ， JBFDCollector 处于 运行 监控 态 ， 当 应用程序 由于 故障 终止 运行 时 ， 则 自动 启动 失效 数据 收集 　 　 为了 支持 多种 软件可靠性 评价 模型 对 同一 失效 数据 的 评价 ， 有 必要 提供 不同 数据类型 之间 的 转换 ， JBFDCollector 提供 累积 失效 计数 与 失效 间隔 数据 之间 的 转换 不仅如此 ， 本 工具 还 支持 对外部 数据 的 引入 ， 用户 可以 有效 地 利用 外来 的 或者 以前 已有 的 历史数据 进行 可靠性 评价 和 分析 　 　 青鸟 软件 失效 数据 收集 工具 JBFDCollector 的 开发 是 基于 ORACLE 数据库 管理系统 ， 在 Windows 环境 下 ， 采用 MicrosoftVC 编程 完成 其 主要 功能 包括 ： 失效 数据 建模 、 分布式 失效 数据 的 录入 和 修改 、 数据 类型转换 结束语 　 　 从 以上 的 讨论 可以 看出 ， 软件测试 对 软件可靠性 度量 有着 重要 的 影响 为了 使 软件可靠性 工程 得以 成功 地 进行 ， 失效 数据 建模 是 重要 的 前提 合理 的 失效 数据模型 是 保证数据 收集 成功 的 关键 　 　 将 软件可靠性 理论 应用 于 实践 是 软件可靠性 研究 的 最终 目的 在 实际 的 软件可靠性 工程 中 ， 不 恰当 的 可靠性 度量 过程 的 实施 、 可靠性 模型 的 滥用 等 ， 是 可靠性 度量 失效 的 根本原因 因此 ， 有 必要 进一步 研究 基于 测试 执行 的 软件可靠性 度量 过程 及 管理 技术 另外 ， 研究 实用 的 可靠性 度量 工具 ， 并 提供 失效 数据模型 与 软件可靠性 模型 的 自动 匹配 ， 也 是 保证 软件可靠性 能够 真正 走向 实用 的 关键 本文 研究 得到 国家 “ 九五 ” 重点 科技 攻关项目 基金 资助 作者简介 ： 方菲女 年生 博士生 主要 研究 领域 为 软件测试 ， 软件可靠性 　 　 　 　 　 王立 福年生 博士 ， 教授 ， 主要 研究 领域 为 软件工程 ， 信息安全 　 　 　 　 　 杨芙清 女 ， 年生 教授 ， 博士生 导师 ， 中国科学院 院士 ， 主要 研究 领域 为 软件 ， 软件工程 ， 系统软件 ， 软件 复用技术 本文 通讯联系 人方菲 ， 北京 北京大学 计算机科学 与 技术 系 作者 单位 ： 北京大学 计算机科学 与 技术 系 　 北京 　 Emailfayefnet 参考文献 　 ANSIIEEEStandardGlossaryofSoftwareEngineeringTerminologySTDANSIIEEECheungRCAuserorientedsoftwarereliabilitymodelIEEETransactionsonSoftwareEngineeringSE ～ MusaJDIanninoAOkumotoKSoftwareReliabilityMeasurementPredictionApplicationNewYorkMcGrawHillTianJLuPMeasuringandmodelingsoftwarereliabilitydatamodelstoolsandasupportenvironmentTechnicalReportTRIBMCanadaLaboratory 本文 收到 原稿 收到 修改稿