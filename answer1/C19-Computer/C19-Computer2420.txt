计算机 研究 与 发展 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 年 　 第卷 　 第期 　 Vol 　 No 　 在 分析 用户 访问 行为 基础 上 实现 代理 缓存 庄伟强 　 李 　 昶 　 王鼎兴 　 郑纬民 　 沈美明 摘 　 要 　 文中 提出 一个 描述 WWW 结构 的 网站 图 SiteGraph 模型 ， 在 此基础 上 进行 用户 访问 行为 分析 ， 从而 提出 了 一个 考虑 实际 访问 请求 模式 的 代理 缓存 系统 URAC 文中 详细描述 了 URAC 的 工作 原理 ， 对 代理 缓存 设计 时所要 解决 的 命中率 、 一致性 和 替换算法 等 主要 问题 进行 了 讨论 ， 并 给出 了 性能 分析 ， 得到 URAC 以 提高 命中率 和 降低 访问 延迟 为 目标 是 一个 更加 实用 的 代理 缓存 系统 的 结论 关键词 　 代理 缓存 ， 用户 访问 行为 分析 ， 网站 图 模型 ， 一致性 ， 替换算法 ， 有效 命中率 中图法 分类号 　 TPPROXYCACHEIMPLEMENTATIONBASEDONUSERREQUESTSANALYSISZHUANGWeiQiangLIChangWANGDingXingZHENGWeiMinandSHENMeiMingDepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijingAbstract 　 AsitegraphmodeltodescribethelogicstructureofWorldWideWebisintroducedinthispaperBasedonthismodelthebehaviorpatternofuserrequestsforhomepagesisdiscussedandthusaproxycachesystemURACuserrequestattentivecacheisimplementedTheworkingprinciplesofURACandtheissuesonhitratecachecoherenceandreplacementstrategyareaddressedindetailsFurthermoretheperformanceofURACispredictedthroughsimulationItisconcludedthatURACisapracticalproxycachesystemthatcanimprovevalidhitrateandreduceaccessdelayKeywords 　 proxycache ， userrequestanalysis ， sitegraphmodel ， cachecoherence ， replacementstrategy ， validhitrate 　 引 　 言 　 　 随着 Internet 的 日益 发展 ， WorldWideWeb 已经 成为 Internet 上 的 主要 应用 然而 大量 的 信息 访问 也 突出 了 Internet 目前 存在 的 问题 ， 网络带宽 不足 带来 的 阻塞 现象 使得 用户 访问 某个 网站 的 主页 信息 的 延迟时间 长得 不可 忍受 解决 这个 问题 的 一个 办法 是 缓存 用户 访问 过 的 主页 ， 缓存 的 主页 作为 一个 副本 存放 ， 在 下 次访问 时 ， 用户 不必 连接 到 该 主页 的 驻留 网站 ， 而是 由 上次 保留 的 副本 提供 ， 从而 降低 访问 延迟 ， 减轻 Web 服务器 负载 ， 同时 释放 了 本该 占用 的 网络带宽 ， 改善 网络 阻塞 现象 　 　 一般说来 ， 有种 缓存 实现 方式 ， 即 客户端 、 服务器端 以及 代理 服务器端 缓存 机制 ［ ］ 客户端 的 缓存 通常 是 捆绑 在 浏览器 上 的 ， 如 Netscape 公司 的 Navigator 和 Communicator 浏览器 、 Microsoft 公司 的 InternetExplorer 浏览器 都 提供 了 缓存 用户 一定 时期 内 访问 过 的 主页 信息 的 缓存 机制 这种 缓存 机制 的 主要 特点 是 缓存 的 每个 主页 信息 长度 有限 、 实现 的 一致性 策略 和 替换 策略 都 比较简单 ， 它 经常 提供 给 用户 的 是 一些 失效 了 的 陈旧 stale 信息 ， 因此 是 一种 不 大 可靠 的 缓存 机制 服务器端 的 缓存 机制 是 和 Web 服务器软件 捆绑 在 一起 的 ， 通常 在 服务器 上 实现 二级 或 三级 cache 作为 缓存 空间 ， 它 比 存放 主页 的 硬盘 具有 更 高 的 访问速度 当 服务器 响应 用户 对 某个 主页 的 访问 请求 后 ， 也 在 缓存 空间 保留 一个 副本 ， 下 一次 如果 有 相同 的 访问 请求 ， 就 直接 将 缓存 空间 保存 的 副本 提供 给 用户 这种 缓存 机制 能够 适当 地 降低 访问 延迟 ， 但是 对 服务器 的 要求 较 高 ， 增加 了 服务器软件 的 复杂度 最后 一种 缓存 方式 是 代理服务器 缓存 机制 ， 简称 为 代理 缓存 ［ ］ 用户 对 某个 网站 的 主页 访问 请求 到达 代理服务器 后 ， 一旦 服务器 存放 有 该 主页 的 副本 ， 服务器 直接 提供 给 用户 作为 响应 ； 如果 服务器 没有 该 主页 的 副本 ， 则 将 请求 重定向 到 驻留 网站 ， 获得 该 主页 给 用户 ， 并且 在 服务器 上 保存 一个 副本 这种 缓存 机制 的 工作 方式 如图所示 ， 它 具有 多个 用户 可以 共享 所有 主页 副本 的 特点 ， 降低 了 访问 延迟 和 费用 同时 ， 由 这些 代理服务器 提供 的 缓存 服务 还 可以 连接 在 一起 ， 构成 层次 型 缓存 模型 ， 在 Internet 缓存 协议 internetcacheprotocolICP ［ ］ 中 详细描述 了 这种 模型 的 规范 典型 的 代理 缓存 机制 有 Colorado 大学 实现 的 HarvestObjectCache ［ ］ 、 Netscape 公司 的 NetscapeProxyServer 以及 在 Harvest 基础 上 NLANR 开发 的 Squid 缓存 系统 等 图 　 代理服务器 缓存 机制 响应 方式 　 　 比较 种 缓存 方式 ， 代理 缓存 机制 是 解决 WorldWideWeb 访问 速度慢 、 服务器 负载 重 和 网络 阻塞 等 问题 的 最好 方法 它 具有 访问 延迟 低 的 优点 ， 因为 通常 代理服务器 都 是 和 客户机 在 同一个 局域网 内 ， 主页 信息 从 代理服务器 到达 客户机 的 延迟时间 可以 忽略不计 其次 ， 由于 缓存 由 专门 的 代理服务器 实现 和 维护 ， 缓存 机制 可以 占用 较大 的 磁盘空间 ， 有利于 存放 日益 增多 的 大容量 多媒体信息 第三 ， 缓存 的 一致性 维护 策略 和 替换 策略 可以 比较复杂 ， 从而 提高 命中率 和 减少 颠簸 最后 ， 由 所有 代理服务器 构成 的 层次 型 缓存 ， 可以 将 最 接近 用户 的 主页 副本 返回 给 用户 ， 增加 了 信息 的 本地化 locality ， 也 降低 了 访问 延迟 　 　 但是 ， 目前 的 一些 缓存 系统 都 是 基于 用户 对 某个 主页 的 访问 进行 缓存 的 ， 并 以此 来 计算 命中率 ， 不能 真正 反映 用户 的 访问 行为 ， 因此 性能 仍然 比较 低 ， 通常 命中率 只 在 左右 ［ ］ 我们 认为 一个 高效 、 实用 的 代理 缓存 机制 必须 记录 和 分析 用户 的 访问 行为 ， 在 提高 命中率 的 同时 也 要 考虑 降低 用户 对 主页 的 访问 延迟 在 分析 用户 访问 行为 的 基础 上 ， 我们 设计 了 一个 基于 网站 图 模型 的 代理 缓存 系统 URAC （ userrequestattentivecache ） 在 这 一 系统 中 ， 每个 网站 被 当成 一个 以 用户 访问 过 的 该 网站 主页 为 元素 的 向量 ， 缓存 的 一致性 维护 是 由 服务器 后台 进行 的 ， 而 缓存 的 替换算法 以 整个 向量 为 对象 进行 计算 同时 ， 对 某个 网站 的 主页 存放 目录 结构 按 命中率 进行 重新排列 ， 提供 用户 最短 访问 路径 获得 所 需 主页 　 　 本文 其他 各节 的 组织 如下 ： 第节 提出 网站 图 模型 ； 第节 对 用户 访问 行为 进行 分析 ， 提出 URAC 的 设计 思想 ； 第节 介绍 URAC 的 工作 原理 和 体系结构 ； 第节 将 对 URAC 进行 性能 评价 ； 最后 本文 给出 结论 　 网站 图 模型 SiteGraph 　 　 HTTP 协议 将 WWW 上 所有 的 信息 资源 以 一个 统一 的 资源 识别 符 表示 ， 即 URIuniformresourceidentifier ， 用户 的 每个 访问 请求 都 是 以 这个 URI 为 请求 地址 的 ， 一个 HTTP 请求 地址 可以 描述 如下 ： 　 　 httpURI “ http ： ” “ ” host ［ “ ： ” port ］ ［ abspath ］ 　 　 abspath “ ” relpath 　 　 relpath ［ path ］ ［ “ ； ” params ］ ［ “ ” query ］ 其中 host 是 某个 网站 的 域名 或者 IP地址 ； port 是 提供 HTTP 协议 服务 的 TCPIP 端口号 ， 缺省 时为 ； abspath 是 访问 请求 的 绝对路径 ， 绝对路径 由 “ ” 开头 ， 它 定位 到 某个 网站 维护 的 某个 主页 ； 相对路径 头部 没有 “ ” ， 它 描述 了 某个 网站 的 所有 主页 的 目录 结构 ， 同时 通过 引入 “ ； ” 和 “ ” 字符 ， 提供 HTTP 协议 中 GET 等 方法 处理 需要 的 参数 和 输入 串 　 　 已有 的 一些 缓存 系统 都 是 针对 用户 访问 的 某个 具体 的 主页 进行 缓存 ， 实际上 要求 用户 在 下 一次 访问 这个 主页 时 也 必须 清楚 该 主页 的 URI ， 这 将 影响 代理 缓存 系统 提供 资源共享 的 性能 由于 WWW 本身 具有 网络连接 特性 ， 尤其 是 在 主页 中 提供 的 超链接 （ hyperlink ） 可以 实现 主页 的 互相 引用 ， 使 用户 从 一个 URI 转到 另 一个 URI ， 这个 特性 有助于 用户 对 WWW 更 方便 地 访问 为此 ， 我们 提出 了 描述 WWW 的 网站 图 模型 SiteGraph ， 通过 模型 的 实现 可以 在 代理 缓存 服务器 上 仍然 保持 主页 在 原始 网站 的 相互 引用 关系 ， 并 指导 用户 更快 地 找到 需要 的 信息 　 　 一般说来 ， 由于 提供 HTTP 服务 的 软件 在 服务器 上 运行 时 需要 定义 一个 入口 主页 以及 主页 存放 的 路径 ， 如 CERNHTTPD 在 srmconf 配置文件 中 通过 DirectoryIndex 和 DocumentRoot 设置 入口 主页 ， 在 accessconf 配置文件 中 通过 〈 Directory 〉 〈 Directory 〉 设置 存放 路径 网站 的 所有 主页 信息 则 通过 HTML 定义 的 Anchor 标志 即 〈 A 〉 〈 A 〉 ， 〈 HREF 〉 ， 〈 SRC 〉 等 连接 在 一起 ， 这样 ， 一个 网站 就 可以 看成 一个 有向图 WnPE ， 它 的 顶点 pi ∈ Pi … s 是 存放 在 网站 上 的 任一 主页 ， 其中 p 是 入口 主页 有 向 边 eij ∈ Eij … s 表示 通过 主页 pi 可以 访问 到 主页 pj 一个 有个 可 访问 主页 的 网站 可以 如图 a 描述 由于 WWW 本身 是 一个 网 ， Wn 是 一个 网状 图 ， 根据 对 HTML 的 Anchor 标志 进行 分析 ， 任一 顶点 都 可能 存在 自身 回路 、 由该 顶点 引出 的 边 以及 到达 该 顶点 的 边 　 　 实际上 每个 网站 不是 独立 存在 的 ， 在 网站 地址 为 host 内 的 某个 主页 ， 可以 通过 httpURI 访问 到 网站 地址 为 host 的 某个 主页 ， 这样 就 存在 如图 b 所示 的 一条 从 Wn 的 顶点 p 到 Wm 某个 顶点 的 边 ， 我们 称 这种 网站 为外 连 网站 ， 与 之 相对 的 ， 只 在 网站 内部 互相 连接 的 就 称为 孤立 网站 在 本文 ， 我们 主要 讨论 孤立 网站 的 代理 缓存 系统 这里 我们 定义 pj 的 前 趋集 PVS 为 所有 以 pj 为 终点 的 有 向 边 的 源点 pi 的 集合 ， 定义 pj 的 后继 集 SVS 为 所有 以 pj 为 源点 的 有 向 边 的 终点 pi 的 集合 同时 定义 那些 在外 连 网站 中 可以 到达 相邻 网站 的 顶点 集为 外 连 顶点 集 这样 ， 对 一个 外连 网站 限制 在 同一个 网站 内部 进行 分析 时 ， 我们 用 PWn ＼ OWn 来 描述 其 网站 内 顶点 集图 　 一个 五 顶点 的 网站 图 进一步 ， 我们 用 一个 道路 矩阵 来 表示 网站 图 ， 其中 ： m 是 用来 唯一 表示 网站 图 Wm 的 整数 ， pj ∈ PWm 表示 pj 是 Wm 的 一个 顶点 即 ， 如果 存在 pi 到 pj 的 有 向 边 ， 就 将 aij 赋值 为 ， 否则 取其 最 短 路径 此外 ， 我们 为 每个 顶点 pi 定义 一个 访问 计数器 cpi ， 用于 后面 的 访问 行为 分析 和 替换 策略 设计 　 　 下面 描述 网站 图 的 生成 和 维护 算法 当 一个 用户 提交 请求 到 代理 缓存 服务器时 ， 如果 是 对 一个 新 的 网站 的 访问 ， 一个 新 的 网站 图 就 从此 建立 ， 否则 在 原来 的 网站 图上 进行 增加 顶点 的 操作 图 给出 了 一个 网站 图 的 生成 过程 和 道路 矩阵 的 增长 过程 图 　 网站 图 的 生成 过程 　 　 生成 与 插入 算法 ： 　 　 　 　 ifpjinVthencpj ； accesstimesincreases 　 　 　 　 elseanewpagecopyisaddedtothesitegraph 　 　 　 　 　 pjaddstoV ； 　 　 　 　 　 cpj ； 　 　 　 　 　 　 　 　 ifpipjnotinEthenanewedgecomesfromitoj 　 　 　 　 　 foranyneighborvertexplofpjinV 　 　 　 　 　 　 RECALCULATEaijandajl 　 　 同时 ， 如果 代理 缓存 进行 副本 替换 时 ， 一些 副本 将 被 换 出 ， 体现 在 网站 图上 为 某些 顶点 将 被 删除 ， 下面 给出 删除 算法 ： 　 　 　 　 ifsubsequentsetofpjisnullthenhasnopagefollowed 　 　 　 　 　 Removejcolumnandjrowfromthematrix 　 　 　 　 elseausefulpagehassomehyperlinks 　 　 　 　 　 foranyvertexplinsubsequentsetofpjinV 　 　 　 　 　 　 aijaddanedgefrompitopl 　 　 　 　 　 　 RECALCULATEallvertexvalueinthematrixrecursively 　 　 　 　 　 用户 访问 行为 分析 　 　 在 对 用户 访问 过 的 主页 进行 缓存 时 ， 通常 认为 用户 任意 一次 访问 请求 到达 的 主页 都 必须 缓存 实际上 ， 在 这种 情况 下 我们 做 了 一个 假设 ， 即 用户 很 清楚 他 所 访问 的 主页 ， 并且 提供 的 是 一个 精确 的 URI ， 这个 URI 从 服务器 的 域名 到 主页 存放 的 相对 位置 都 包含 了 例如 ， 假设 在 域名 为 wwwmywebeducn 的 网站 上 有 一个 html 的 主页 ， 存放 的 相对路径 是 selfishpaperhtml ， 那么 ， 为了 准确 缓存 用户 所 需 的 主页 ， 用户 所 提供 的 URI 就 应当 是 httpwwwmywebeducnselfishpaperhtml 然而 这种 假设 并 不 符合 用户 的 访问 行为 方式 实际 情况 是 ， 用户 通常 只是 知道 在 某个 网站 上 有 他 所 需要 的 信息 ， 他 的 第一个 访问 请求 是 httpwwwmywebeducn ， 而后 通过 入口 主页 的 连接 逐步 接近 他 所 需要 的 主页 如果 对 用户 访问 过 的 主页 都 进行 缓存 ， 就 会 有 许多 用户 并 不 关心 的 中间 主页 信息 占用 有限 的 缓存 空间 另 一个 方面 ， 一般 用 命中率 来 衡量 一个 缓存 系统 的 性能 ， 由于 这些 中间 主页 和 目标 主页 被 访问 的 次数 是 相等 的 ， 它们 无疑 地 增加 了 成倍 的 命中 次数 ， 从而 使 命中率 指标 变得 不可 信 对于 代理服务器 来说 ， 这个 问题 更加 严重 ， 因为 代理服务器 面向 大量 的 用户 提供 信息 服务 ， 这些 缓存 的 主页 可 被 共享 ， 以 降低 访问 延迟 ， 大量 的 重复 计算 会 使 该 服务器 的 缓存 命中率 很 高 而 实际上 ， 相等 的 一段时间 内 ， 用户 通过 缓存 获得 的 有效 信息 很少 　 　 产生 这样 结果 的 原因 是 一般 缓存 系统 针对 孤立 的 主页 进行 操作 ， 这些 主页 在 缓存 空间 是 互不 相关 地 存放 的 ， 缓存 策略 不能 自动 地 发现 哪些 信息 有用 ， 而 哪些 信息 可以 被 替换 出去 同样 ， 这种 互不 相关 的 存放 方式 不能 帮助 用户 以 最 短 的 访问 路径 获得 信息 ， 即使 用户 所 需 的 主页 已 被 缓存 ， 经过 多次 的 连接 调用 才能 得到 主页 副本 ， 并未 减少 访问 延迟时间 因此 ， 需要 记录 用户 的 访问 行为 并 进行 分析 ， 以此 指导 用户 最快 获得 目标 主页 考虑 到 用户 的 访问 具有 局部性 特点 ， 在 一次 连续 的 访问 过程 中 ， 访问 请求 通常 是 到达 同一个 网站 的 ， 以 网站 为 单位 分析 用户 访问 行为 可以 作为 缓存 系统 的 有效 辅助 信息 ， 这 也 是 我们 设计 的 代理 缓存 系统 的 基本 思想 　 　 　 　 借助于 上面 定义 的 网站 图 ， 可以 对 用户 的 访问 行为 进行 跟踪 记录 和 分析 每次 修改 道路 矩阵 实际上 是 对 用户 访问 行为 的 一次 记录 ， 通过 这种 方式 就 可以 逐步 建立 起 用户 对 某个 网站 的 访问 轨迹 图 我们 用 一个 序列 r ［ ］ r ［ ］ … r ［ n ］ 来 表示 用户 的 访问 过程 ， 在 某个 时间段 ， 这个 序列 是 定位 在 同一个 服务器 上 的 进一步 ， 我们 通过 比较 每个 顶点 的 pi 访问 计数器 cpj 来 判断 某个 主页 副本 是否 为 用户 访问 的 目标 假设 pj 在 pi 的 SVS 中 ， 如果 cpj 《 cpjkkSVS ， 那么 pj 不 值得 在 代理服务器 中 缓存 因此 ， 通过 对 用户 访问 行为 进行 跟踪 和 分析 ， 使得 代理服务器 中 保存 了 最 有 价值 的 主页 副本 ， 提高 了 空间 利用率 和 命中率 同时 ， 我们 在 分析 结果 的 基础 上 ， 代理服务器 在 对 某个 访问 请求 进行 响应 的 同时 ， 也 将 该 主页 顶点 pi 的 邻接 顶点 pkpk … pklpj 的 URI 以 命中 次数 为序 作为 辅助 信息 返回 到 用户 的 浏览器 上 ， 假设 用户 的 目标 主页 是 ， 他 就 可以 省去 对 pkpk … pkl 的 访问 ， 而 直接 选择 pj 的 URI 进入 ， 缩短 了 访问 过程 ， 从而 大大降低 了 访问 延迟 　 URAC 工作 原理 　 　 URAC 是 在 一个 可 扩展 的 Web 服务器 集群 系统 上 实现 的 ， 因此 我们 设计 的 缓存 空间 可以 相当 大 ， 用以 存放 大量 的 主页 内容 ， 包括 一些 多媒体信息 Web 服务器 集群 的 特点 是 每台 服务器 单独 可以 对外 提供 服务 ， 这样 一些 访问 请求 可能 在 不同 的 服务器上进行 处理 为了 在 服务器 集群 上 只 保存 一份 缓存 副本 ， 需要 将 所有 服务器 的 空间 进行 共享 在 服务器 集群 系统 上 建立 这样 一个 并行 文件系统 ， 它 提供 和 URI 定义 相同 的 目录 结构 ， 这样 的 文件系统 可以 加快 服务器 检索 缓存 副本 的 速度 ， 从而 提高 响应 时间 ； 另一方面 ， 使 服务器 平台 对 URAC 透明 ， 缓存 系统 在 访问 文件 时 不必 考虑 文件 实际 存放 在 哪台 服务器 上 图 给出 了 这个 缓存 系统 在 整个 服务器 集群 中 的 位置 本文 不 对 文件系统 进行 讨论 ， 下面 从 软件结构 、 一致性 策略 和 替换算法 方面 对 URAC 进行 介绍 图 　 URAC 在 Web 服务器 集群 的 位置 　 软件结构 　 　 在 HTTP 和 协议 中 规定 ， 只有 那些 GET 和 HEAD 的 访问 请求 可以 缓存 ， URAC 目前 的 实现 满足 这个 规定 ， 以后 将 增加 对 动态 主页 的 缓存 URAC 是 建立 在 网站 图 基础 上 的 ， 对应 于 某个 网站 图 Wn ， 动态分配 一个 整数 数组 Cn ， 数组 的 下标 对应 Wn 的 每个 顶点 piCn 的 长度 是 动态变化 的 ， 等于 增加 到 Wn 的 顶点 数 Cn ［ i ］ 初值 为 ， 代表 顶点 pi 第一次 增加 到 网站 图中 ； 以后 用户 pi 对 顶点 访问 一次 Cn ［ i ］ 就 执行 加一 计算 ， 作为 pi 的 命中 计数器 同时 ， 动态分配 一个 保存 每个 顶点 URI 的 字符串 数组 Un 代理 缓存 机制 在 对 访问 请求 进行 响应 后 ， 会 在 代理服务器 集群 上 保留 一个 响应 副本 ， 在上文 提到 的 并行 文件系统 上以 URI 的 类似 的 目录 结构 存放 ， 如图所示 这是 一个 目录 树 ， 叶子 节点 是 主页 内容 ， 从 根到 叶子 就是 一个 完整 的 httpURI 这样 的 目录 结构 有助于 缓存 系统 快速 获得 提供 响应 的 主页 副本 ， 降低 访问 延迟 图 　 副本 存放 目录 结构 　 　 在 分析 用户 访问 行为 时 ， 在 第一次 建立 起 网站 图时 ， 需要 判断 在 代理服务器 上 是否 已经 有 该 网站 的 缓存 内容 ， 这是 通过 访问 目录 树 实现 的 为了 加速 这个 检索 过程 ， 缓存 机制 对 根目录 下 的 一级 目录 ， 即 网站 按 域名 和 IP地址 建立 了 索引 Hindex ， 对 host 以 域名 提供 的 访问 请求 按 域名 从后 往前 匹配 ， 而 IP地址 从前 往后 匹配 Hindex 的 输出 是 对应 于 该 网站 的 唯一 整 数码 值 ， 即 Wn 的 下标 n 　 　 下面 给出 URAC 对 访问 请求 的 响应 流程 ： IFhttpREQUESTTHEN 开始 处理 访问 请求 　 httpREQUESThttphost ［ path ］ ［ file ］ 　 IFhostINHindexTHEN 　 在 代理服务器 集群 上 已经 有 这个 网站 的 某个 主页 副本 　 　 WHILEhttpREQUESTUn ［ i ］ i 　 　 IFiLENGTHUnTHEN 　 　 尚未 访问 过该 主页 ， 则 扩展 Un 和 Cn 　 　 　 LENGTHUn 　 　 　 Un ［ i ］ httpREQUEST 　 　 　 LENGTHCn 　 　 　 Cn ［ i ］ 　 　 　 ADDURITOHindex 更新 索引 　 　 　 由 代理服务器 将 请求 转发 到 驻留 服务器 ， 　 　 　 　 返回 响应 给 用户 　 　 　 httpRESPONSEproxyREQUESThttpREQUEST 　 　 　 存放 在 代理服务器 上 　 　 　 SAVERESPONSEhttpRESPONSE 　 　 　 　 ELSE 　 　 已经 有 这个 主页 的 副本 ， 命中 　 　 　 Cn ［ i ］ 　 　 　 从 代理服务器 上 取出 副本 ， 返回 响应 　 　 　 httpRESPONSELOADRESPONSEhttpREQUESE 　 　 　 　 　 　 ELSE 　 第一次 访问 该 网站 　 nLASTVALIDSITEIDENTIFIER 　 获得 入口 主页 　 FORK 　 后台 运行 　 　 LENGTHUn 　 　 Un ［ ］ httphost 　 　 LENGTHCn 　 　 Cn ［ ］ 　 　 ADDURITOHindex 更新 索引 　 　 proxyRESPONSEproxyREQUESThttphost 　 　 存放 在 代理服务器 上 　 　 SAVERESPONSEproxyRESPONSE 　 　 LENGTHUn 　 Un ［ i ］ httpREQUEST 　 LENGTHCn 　 Cn ［ i ］ 　 ADDURITOHindex 更新 索引 　 由 代理服务器 将 请求 转发 到 驻留 服务器 ， 返回 响应 给 用户 　 httpRESPONSEproxyREQUESThttpREQUEST 　 存放 在 代理服务器 上 　 SAVERESPONSEhttpRESPONSE 　 　 上面 的 流程 不 包括 缓存 的 时效 处理 和 替换 ， 下面 将 介绍 URAC 的 一致性 维护 策略 和 替换算法 　 缓存 一致性 策略 　 　 HTTP 协议 对 一个 主页 的 副本 生存期 timetoliveTTL 定义 为 ： 　 　 如果 响应 中有 “ CacheControlmaxage ” 通用 头 ， 那么 生存期 maxage 值 ； 　 　 否则 ， 如果 响应 中有 Expires 实体 头 ， 那么 生存期 Expires 值 — Date 值 ； 　 　 否则 ， Cache 可以 根据 某种 启发式 算法 给出 一个 生存期 但是 ， 若 在 这种 情况 下 给出 的 生存期 超过 小时 ， 而且 响应 的 年龄 虽 大于 小时 但 仍 小于 生存期 ， 从而 被 认定 是 新鲜 时 ， 必须 在 响应 中 增加 一个 警告 码为 的 Waring 响应 头 　 　 同时 还 提供 了 Age 响应 头 记录 某个 主页 副本 的 当前 年龄 参考 这些 规定 ， 在 URAC 中 对 缓存 副本 设定 当前 年龄 pCurrentAge 为 本次 访问 时间 HTTPdate 减去 该 主页 在 驻留 网站 创建 的 时间 Date 每个 缓存 副本 的 生存期 按 以上 的 规则 定义 ， 在 响应 中 没有 Expires 等 实体 头时 设定 生存期 pTTL 为 缓存 副本 当前 年龄 的 两倍 在 第一次 访问 时 设定 ， 以后 再 命中 时 不再 修改 这样 判断 一个 缓存 副本 是否 有效 ， 并 作为 响应 返回 给 客户 的 条件 是 pCurrentAgepTTL ， 即 一个 缓存 副本 变成 陈旧 ， 需要 从 驻留 网站 更新 以 维护 一致性 的 条件 是 pTTLpCurrentAge 　 　 然而 在 pTTLpCurrentAge 情况 下 ， 并不一定 要 强制 从 驻留 网站 下载 整个 主页 由于 在 驻留 网站 可用 LastModified 实体 头 指明 主页 的 最近 修改 时间 ， 由 代理服务器 发出 的 访问 请求 可以 增加 IfModifiedSince 头 ， 使 GET 成为 条件 取 ， 其 含义 是 当 GET 所 确定 的 资源 在 指定 的 时间 后 确实 改变 了 ， 就 完成 GET 的 功能 ； 否则 ， 返回 一个 （ 没有 改变 ） 响应 响应 是 不 含 实体 的 这样 当 主页 实际 没有 改变 时 ， 可以 节省 带宽 这时 修改 缓存 副本 的 生存期 pTTL 为 当前 年龄 pCurrentAge 的 倍 　 　 在 上节 描述 的 URAC 工作 流程 中 ， 当 缓存 机制 在 代理服务器 上 检索 到 对应 于 用户 访问 请求 的 主页 副本 时 ， 先 进行 缓存 的 一致性 判断 ， 如果 缓存 副本 仍然 有效 ， 则 直接 作为 响应 返回 ； 否则 ， 进行 条件 取 ， 必要 时 更新 代理服务器 上 的 缓存 副本 假设 网站 Wn 的 顶点 pi 是 一个 陈旧 副本 ， 如果 代理服务器 发出 条件 取 请求 到 驻留 网站 后 得到 的 是 响应 ， 那么 仍然 增加 pi 的 命中 计数 Cn ［ i ］ ； 如果 得到 的 响应 是 一个 更新 的 pi ， 在 代理服务器 上 保存 这个 新 的 主页 副本 ， 并 重置 Cn ［ i ］ 为 ； 如果 得到 的 是 响应 找 不到 ， 可能 该 主页 在 驻留 网站 上 已 被 删除 ， 此时 应 将 pi 从 网站 图上 删除 ， 即 在 Cn 数组 中 删除 Cn ［ i ］ ， 在 Un 数组 中 删除 Un ［ i ］ 　 缓存 替换算法 　 　 由于 代理服务器 上 的 缓存 空间 是 有限 的 ， 当 存放 了 一定 数量 的 主页 副本 后 ， 为了 保存 新 的 访问 请求 的 响应 副本 ， 只能 将 已经 保存 的 一些 副本 替换 出去 以 腾出 空间 常用 的 Cache 替换算法 有 根据 每个 缓存 副本 的 文件 长度 选择 合适 的 副本 进行 替换 的 SIZE 算法 、 记录 每个 缓存 副本 的 命中 时间 选择 最久 未 被 访问 的 副本 进行 替换 的 LRU 算法 以及 记录 每个 缓存 副本 的 命中 次数 选择 最少 命中 的 副本 进行 替换 的 LFU 算法 等 ［ ， ］ 这些 方法 各有 各 的 优缺点 ， 如 在 Harvest 缓存 系统 中 采用 了 LRU 算法 ， 通常 采用 模拟 的 方法 对 这些 算法 进行 性能 比较 ， 文献 ［ ］ 对此 进行 了 分析 比较 ， 并 得出结论 ， 对 具体 的 缓存 系统 应当 设计 相应 的 替换算法 　 　 在 网站 图 模型 中 ， 对 某个 主页 副本 是否 可以 在 代理服务器 上 保存 更 长时间 的 判断 提供 了 有效 的 信息 URAC 采用 的 替换算法 综合 考虑 了 副本 存放 的 期望值 、 利益 、 访问 频度 和 最近 访问 时间 这 几个 主要 的 因素 借助 道路 矩阵 ， 这些 参数 的 定义 如下 ： 　 　 pi 的 期望值 ： epiks φ pis 其中 ， lajiajipi ∈ PWnPOn 　 　 pi 的 利益 值 ： ppiks φ pis 其中 ， laijaijpi ∈ PWnPOn 　 　 pi 的 最近 访问 时间 参数 ： tpittmod τ τ 其中 τ 是 事先 设置 的 刷新 间隔 　 　 pi 的 被 访问 频度 ： 其中 ， pj ∈ PVSpikpjPVSpi 　 　 期望值 指 的 是 pi 被 引用 的 可能 ， 参与 计算 的 是 它 的 前 趋集 ； 利益 值指 的 是 通过 pi 可以 访问 的 信息量 ， 参与 计算 的 是 它 的 后继 集 ； 最近 访问 时间 体现 了 pi 在 缓存 空间 中未 被 命中 的 存活 时间 ； 而 访问 频度 正好 反映 了 pi 提供 有效 信息 的 概率 其中 ， 期望值 、 利益 值 以及 访问 频度 越大 ， 表明 该 副本 被 命中 的 可能性 越大 ， 因此 不该 被 替换 出去 相反 ， 最近 访问 时间 参数 越大 ， 表明 该 副本 已 没有 保存 的 价值 ， 可以 被 替换 出去 根据 这一 原则 ， 我们 定义 替换 函数 为 RReptf ， 对 每个 顶点 pi ， 它 的 替换 因子 为 　 　 某个 顶点 的 替换 因子 值越 大 ， 被 替换 的 可能性 也 就 越 大 　 性能 评价 　 　 我们 实现 了 一个 原型 系统 ， 并 对 URAC 进行 了 概率 模拟 ， 得出 的 命中率 结果 和 LRU 进行 了 比较 假设 每个 主页 的 长度 为 KB ， 缓存 空间 为 MB 可以 保存 个 网站 和 个 主页 副本 ， 模拟 请求 序列 长度 为 模拟 的 请求 序列 的 分布 状态 设计 为 高度集中 、 集中 以及 随机 种 类型 ， 得到 的 结果 如表 所示 这里 我们 采用 的 是 有效 命中率 参数 ， 考虑 到 传统 的 命中率 计算方法 将 大量 的 索引 性 主页 副本 的 命中 也 计算 在内 ， 而 我们 对 用户 访问 行为 的 分析 结果表明 ， 这种 命中 是 无效 命中 ， 而且 占用 了 代理服务器 的 空间 ， 并 增加 了 访问 延迟 ， 所以 我们 引进 有效 命中率 VHR （ validhitrate ） 参数 来 描述 代理 缓存 系统 的 性能 有效 命中 指 的 是 那些 命中 的 主页 副本 是 能够 提供 接近 用户 访问 目标 信息 的 命中 VHR 定义 为 有效 命中 和 所有 访问 请求 的 比值 　 　 这些 结果表明 ， URAC 具有 比 LRU 更好 的 性能 ， 在 每个 网站 少于 个 主页 ， 并且 只有 的 有效 信息 时 ， 我们 可以 得到 的 命中率 ， 同时 ， 空间 的 利用率 可 达 另一方面 ， 我们 也 看到 了 当 网站 数目 和 有效 信息 比率 增加 时 ， URAC 的 性能 降低 得 比 LRU 快 这 是因为 缓存 空间 的 有限 ， 造成 替换算法 将 整个 的 网站 替换 出去 ， 从而 引起 颠簸 解决 的 办法 是 在 每个 代理服务器 上 保存 有限 的 网站 的 缓存 副本 ， 并 实现 多个 代理服务器 的 代理 缓存 共享 ， 我们 将 在 其他 论文 中 给出 一个 共享 协议 的 设计 表 　 URAC 和 LRU 的 VHR 比较 提供 有效 信息 的 副本 占 所有 副本 的 比率 URACLRU 高度集中 集中 随机 高度集中 集中 随机 　 　 描述 代理 缓存 系统 性能 的 另 一个 参数 是 访问 延迟 ， URAC 的 访问 延迟 是 由 以下 几 方面 因素 保证 的 和 一般 的 代理 缓存 系统 相比 ， URAC 具有 这样 一些 特点 ， 使得 系统 的 访问 延迟 很 低 首先 ， 由于 服务器 集群 系统 的 每台 服务器 都 能 对 用户 的 访问 请求 进行 处理 ， 可 建立 的 连接 多 ， 可以 保证 用户 发出 的 访问 请求 即时 得到 处理 ， 不会 产生 等待 和 超时 等 现象 ； 其次 ， 通过 对 用户 访问 过程 进行 记录 ， 提供 邻接 顶点 信息 帮助 ， 可以 缩短 用户 获得 目标 主页 的 路径 ， 从而 降低 访问 延迟 ； 最后 ， 在 代理服务器 上 的 副本 是 以 URI 格式 存放 的 ， 代理服务器 对 文件 的 访问速度 快 ， 因而 也 降低 了 用户 获得 主页 的 访问 延迟 另外 ， 由于 缓存 替换 操作 是 在 服务器 维护 时期 进行 的 ， 由 服务器 缓存 系统 主动 发出 ， 而 不是 由于 处理 某个 访问 请求 时 发现 空间 不够 才 进行 ， 因此 不会 增加 额外 的 访问 延迟 　 　 虽然 由于 缓存 副本 是 分布 在 多台 服务器 上 存放 的 ， 某台 服务器 在 处理 访问 请求 时 可能 要 从 其他 服务器 上 获取数据 ， 带来 了 一些 延迟 但 因为 设计 了 并行 文件系统 ， 在 由 高速 网络连接 的 服务器 集群 系统 中 ， 这个 延迟 是 相当 小 的 ， 并且 在 文件系统 和 负载 分配 模块 的 设计 中 充分考虑 了 被 调度 的 服务器 最靠近 存放 缓存 副本 的 服务器 ， 以 降低 访问 延迟 　 结 　 论 　 　 在 设计 和 实现 URAC 代理服务器 缓存 系统 之前 ， 通过 对 很多 缓存 系统 进行 分析 ， 我们 认为 传统 的 缓存 系统 存在 着 大量 浪费 缓存 空间 的 现象 针对 这个 问题 ， 我们 提出 了 网站 图 模型 ， 进而 对 用户 访问 行为 进行 了 分析 ， 提出 了 一个 新 的 代理 缓存 系统 的 设计 ， 主要 改善 了 代理 缓存 的 替换 策略 同时 我们 定义 了 更 接近 反映 缓存 系统 性能 的 有效 命中率 参数 模拟 结果表明 ， URAC 和 目前 的 缓存 系统 相比 ， 命中率 提高 了 ， 而 访问 延迟 降低 了 ， 是 一个 有效 、 高性能 的 代理 缓存 系统 本 课题 得到 国家 “ 八 六三 ” 计划 项目编号 、 IBM 中国 研究 中心 以及 华为 科技 基金 赞助 作者简介 ： 庄伟强 ， 男 ， 年月生 ， 博士 研究生 ， 主要 研究 方向 为 分布 并行处理 和 智能 计算机 　 　 　 　 　 李昶 ， 女 ， 年月生 ， 硕士 研究生 ， 主要 研究 方向 为 分布 并行处理 和 智能 计算机 　 　 　 　 王鼎兴 ， 男 ， 年月生 ， 博士生 导师 ， 主要 研究 方向 为 分布 并行处理 和 智能 计算机 　 　 　 　 郑纬民 ， 男 ， 年月生 ， 博士生 导师 ， 主要 研究 方向 为 分布 并行处理 和 智能 计算机 　 　 　 　 沈美明 ， 女 ， 年月生 ， 博士生 导师 ， 主要 研究 方向 为 分布 并行处理 和 智能 计算机 作者 单位 ： 清华大学 计算机科学 与 技术 系 　 北京 　 参考文献 　 WoosterRPOptimizingresponsetimeratherthanhitratesofWWWproxycaches ［ masterdissertation ］ VirginiaPolytechnicInstituteandStateUniversity 　 AbramsMStandridgeCRetalCachingproxiesLimitationsandpotentialsInProcofthethWWWConferenceElsevierAmsterdam ～ 　 WesselsDClaffyKInternetCacheProtocolICPVersionTechRepRFC 　 ChankhunthodASchwartzMFetalAhierarchicalinternetobjectcacheComputerScienceDepartmentUniversityofSouthernCaliforniaLosAngelesCaliforniaTechRep 　 LorenzettiPRizzoLReplacementpoliciesforaproxycacheUniversitydiPisaTechRepLR 　 WilliamsSAbramsMRemovalpoliciesinnetworkcachesforWorldWideWebdocumentsSIGCOMM ～ 原稿 收到 日期 ： ； 修改稿 收到 日期 ：