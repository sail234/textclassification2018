微型机 与 应用 MICROCOMPUTERITSAPPLICATIONS 年 第卷 第期 VolNo 嵌入式 实时 数据库系统 及其 相关 问题 董荣胜 　 古 天龙 　 庞健雄 　 　 摘 　 要 ： 嵌入式 实时 数据库系统 ERTDBS 的 特性 、 与 传统 数据库系统 的 区别 ， 并 对 今后 值得 重视 和 研究 的 问题 进行 了 探讨 。 　 　 关键词 ： 嵌入式 实时 数据库系统 　 并发 控制 　 网络 　 　 计算机 作为 一个 系统 的 核心 或 关键部件 ， 同 系统 中 的 其它 部分 协同 作用 来 完成 整个 系统 的 任务 ， 即 计算机 镶嵌 在 系统 中 发挥 其 作用 ， 这 类 计算机系统 称为 嵌入式 计算机 应用 系统 ， 简称 嵌入式 系统 。 其中 ， 实时性 是 嵌入式 系统 所 要 满足 的 一个 极其重要 的 特性 ， 一些 专家 将 嵌入式 系统 称为 嵌入式 实时 系统 。 在 该 系统 中 ， 对 数据库 的 操作 具有 定时 限制 的 特性 ， 这里 把 应用 于 嵌入式 系统 的 数据库系统 称为 嵌入式 数据库系统 或 嵌入式 实时 数据库系统 ERTDBS ， 相对 强 Hard 实时 系统 和 弱 Soft 实时 系统 而言 ， ERTDBS 可 分为 强 ERTDBS 和 弱 ERTDBS 两类 ， ERTDBS 与 传统 数据库系统 有着 本质 的 区别 ： 它 具有 定时 限制 事务 的 特性 ， 系统 的 正确性 必须 满足 通常 用 截止 时间 表示 的 定时 限制 。 对于 强 实时 事务 ， 错过 截止 时间 可能 导致 灾难 ［ ］ 。 ERTDBS 是 嵌入式 系统 中 的 一个 重要 子课题 ， 本文 将 从 ERTDBS 的 基本 特性 入手 ， 对本 领域 今后 研究 工作 的 焦点 和 值得 重视 的 问题 进行 讨论 。 　 嵌入式 实时 数据库 与 传统 关系数据库 的 比较 　 　 与 传统 的 RDBS 相比 ， ERTDBS 首先 应 具有 定时 限制 的 特性 ， 并 应用 于 嵌入式 系统 中 ， 为此 ， ERTDBS 要求 在 无人 监控 条件 下 系统 运行 的 可靠性 、 RAM 和 DISK 最低 需求 的 可预见性 以及 对 IO 操作 的 低层 控制能力 。 同时 根据 嵌入式 系统 的 分布 特性 ， ERTDBS 还 应该 具备 分布式 的 特性 ， 除了 应用 的 特殊 环境 外 ， ERTDBS 与 分布式 实时 数据库系统 DRTDBS 的 研究 是 相似 的 ， 以下 就 ERTDBS 的 特性 作 简要 阐述 。 　 传统 RDBS 与 ERTDBS 的 事务 和 数据 特性 的 不同 　 　 目前 流行 的 RDBS 其 事务 具有 传统 的 ACIDAtomicity 、 Cosistency 、 Isolation 、 Durability 特性 ， 即 原子 性 、 一致性 、 隔离 性 和 永久性 。 事务 执行 的 原子 性 和 可 串行 性是 被 普遍 接受 的 正确性 和 一致性 标准 。 而 ERTDB 则 有 根本性 的 不同 ， 其 事务 和 数据 的 重要 特性 在于 事务 的 定时 性 和 可预测性 、 数据 和 事务 的 时态 特性 ［ ］ 。 需要 强调 的 是 ERTDBS 中 的 实时性 并不等于 快速性 ， 更 重要 的 在于 事务 随 时间 变化 的 可预测性 ［ ］ 。 ． 　 与 传统 数据库 并发 控制 性能 研究 的 区别 　 　 ERTDBS 需要 同时 满足 定时 限制 和 在 这 段时间 内 保持 数据库 的 一致性 的 要求 ， 这些 要求 使 问题 变得 更为 复杂 ， 这是 涉及 并发 控制 研究 的 一个 重要 问题 。 　 　 相对 ERTDBS 而言 ， 传统 的 非 实时 并发 控制 不 需要 在 数据库 中 确定 数据 调度 处理 的 优先级 。 因此 ， 有 可能 造成 个 低优先级 事务 阻塞 个 高 优先级 事务 ， 从而 导致 数据 冲突 ， 这种 情况 叫 优先级 倒置 ， 它会 影响 实时 调度 算法 。 如果 这种 情况 发生 在 ERTDBS 中 ， 由于 ERTDBS 中 的 数据 存放 在 不同 地点 ， 再 加上 分布式 事务管理 、 分布式 死锁 的 解决 和 复制 数据 等 需求 ， 这个 问题 就 变得 更加 复杂 和 严重 。 　 　 有关 ERTDBS 中 的 并发 控制 研究 得到 了 学术界 的 广泛 关注 ， 在 ERTDBS 中有 多种 实时 并发 控制协议 。 这里 列出 个 著名 的 协议 ： ① 高 优先级 两 阶段 锁 HPL 协议 。 在 这个 协议 中 ， 低优先级 处理 被 重新起动 ， 从而 解决 了 优先级 倒置 的 问题 ， 同时 ， 个 高 优先级 事务 请求 被 低优先级 事务 占用 的 锁 时 ， 低优先级 事务 重新启动 的 代价 又 是 HPL 的 个 问题 。 ② 解决 优先级 倒置 的 方法 是 优先级 继承 PI ［ ］ ， 当高 优先级 事务 请求 上锁 时 ， 低优先级 事务 锁 占有者 放弃 其 优先级 ， 并 继承 高 优先级 事务 的 优先级 ， 这样 中等 优先级 事务 便 不可 抢占 低优先级 事务 了 ， 从而 达到 限制 阻塞 时间 的 目的 ， 虽然 这种 方式 仍然 存在 优先级 倒置 ， 但 它 能 减少 高 优先级 事务 请求 锁 的 阻塞 时间 ， 使锁 占有者 是 正在 执行 的 个 高 优先级 事务 。 不过 ， 在 分布式 环境 和 分布式 死锁 问题 上 ， PI 事务 的 优先级 继承 问题 代价 又 较大 。 　 　 作为 未来 的 工作 ， 解决 优先级 倒置 问题 的 调度 还有 很大 的 发展 空间 ， 目标 将 是 能 最大 限度 地 减小 这种 调度 对 另 一些 事务 调度 性能 降低 的 影响 。 ． 　 来自 网络层 对 ERTDBS 并发 控制 的 影响 　 　 与 传统 数据库系统 相比 ， 在 ERTDBS 并发 控制协议 的 研究 中 ， 一个 重要 的 因素 是 支持 分布式 环境 的 网络层 ［ ］ 。 　 　 在 未来 ， 用户 将 采集 的 信息 存放 在 网络 上 的 不同 地点 的 数据库 中 必然 会 产生 更 多 的 通信量 ， 这些 信息 包括 传统 数据 、 视频 、 图像 、 语言 序列 等 。 越来越 多 的 多媒体信息 需要 高带宽 来 支持 。 ERTDBS 需求 高带宽 的 通信量 ， 而 网络 承担 这个 工作 的 能力 显然 超出 了 人们 的 期望 ， 同时 高速 网络 也 带来 了 在 设计 和 开发 ERTDBS 方面 的 重要 影响 。 因此 ， 高 负载 网络 上 的 ERTDBS 的 性能 研究 将 是 未来 的 一个 重要 方向 。 　 今后 研究 工作 的 焦点 及 值得 关注 的 几个 问题 　 　 传统 数据库 并发 协议 修改 后 在 一些 弱 实时 系统 中 实现 了 对 高 优先级 事务 的 优先 的 处理 。 ERTDBS 的 主要 目标 是 使 事务 错过 截止 时间 的 数量 减至 最少 ， 因此 在 弱 实时 系统 中应 选择 好 的 调度 协议 进行 设计 。 　 　 对强 截止 时间 和 该 事务 需求 的 应用 ， 系统 必须 保证 事务 在 截止 时间 内 完成 。 对 这样 的 事务 ， 必须 使用 新 的 数据库 协议 去 解决 资源分配 和 事务处理 的 需要 。 新 的 数据库 并行 调度 协议 要 保证 所有 事务 都 能 享受 资源 ， 并 能 处理 它们 的 截止 时间 。 在 一些 模拟实验 中 评价 了 扩展 的 调度 协议 ［ ］ ， 新 的 观点 已 被 提出 ， 在 定义数据 和 事务 的 时间 特性 方面 的 研究 已 取得 初步 的 进展 ［ ］ 。 　 　 对 ERTDBS 的 研究 ， 仍 处在 早期 阶段 ， 如 在 数据模型 、 可预测性 事务 执行 、 恢复 、 IO 管理 、 超载 处理 、 操作系统 支持 、 工具 支持 、 分布式系统 支持 等 方面 尚有 很多 需要 解决 的 问题 。 　 　 当前 ERTDBS 研究 的 焦点 集中 在 “ 浅 ” Flat 的 、 弱 实时 事务 的 读写操作 上 。 不久 的 将来 ， 需求 ERTDBS 的 应用 将 变得 巨大 、 复杂 和 分布 ， 事务 将 必须 在 高 动态 环境 中 操作 ， 这些 事务 的 执行 仍然 需要 可 预测 。 它们 要 存取 分布式 多媒体 目标 ， 还要 面对 以 几何级数 增加 的 数据 信息 。 　 　 解决 上述 问题 ， 将 依赖 以下 几 方面 的 工作 ， 这些 工作 将 成为 今后 研究 工作 的 焦点 ［ ］ 。 　 　 ． 依赖 实时 事务 和 具有 指定 时间 特性 并用 精确 方式 定义 的 时态 数据库 模型 技术 的 发展 ， 必须 清晰 地 指定 数据 存储 的 有效性 和 定时 限制 。 　 　 ． 依赖 有关 具有 时间 特性 事务 的 研究 方法学 的 发展 ， 给出 一个 应用 时间 特性 和 设置 时间 需求 的 断言 表示 ， 目标 是 有关 断言 时间 的 指定 。 如果 断言 是 通过 个用 时间 指定 的 定理 推导 的 ， 由于 事务处理 具有 准确 的 时间 指定 ， 那么 这个 系统 是 安全 的 。 否则 ， 由于 时间 特性 带来 的 断言 没有 遵循 定理 的 推导 ， 因此 这个 系统 具有 本质 的 不 安全性 。 　 　 ． 依赖 基于 调度 协议 和 并发 控制协议 的 时间 驱动 优先级 策略 的 发展 ， 需要 一个 动态 方式 集成 管理 资源 例如 ： 通信 资源 和 IO 设备 以及 实现 强制 优先 的 具有 定时 限制 的 复杂 事务 的 执行 。 　 　 ． 操作系统 和 数据管理 要求 高度 集成 和 协作 并 具有 很快 的 可 预测 能力 ， 因为 个 数据库系统 必须 操作 在 有效 的 操作系统 中 ， 正确 的 执行 和 数据库 的 时间 特性 分配 依赖于 操作系统 的 服务 。 　 　 ． 在 实时 数据管理 协议 中 ， 人工智能 和 主动 数据库 技术 的 集 成为 定时 限制 处理 提供 了 有关 推理 的 方法 ， 这些 方法 要 适应 系统 特征 的 动态变化 情况 。 一个 值得 考虑 的 问题 是 ： 当有 几个 不同 定时 限制 的 事务 请求 时 ， 主动 实时 数据管理 要 确定 最 有效 的 执行 次序 。 　 　 在 讨论 焦点 问题 的 同时 ， 在 嵌入式 领域 有个 新 的 动向 值得 关注 。 　 　 ． 基于 PC机 的 ERTDB 技术 研究 　 　 纵观 计算机 发展 的 历史 ， 展望 计算机 发展 的 未来 ， 可以 肯定 地说 ， 受 目前 嵌入式 计算机 的 物理 结构 例如 形态 、 体积 、 重量 等 和 能力 的 特殊 限制 而 产生 的 有关 问题 将 得到 解决 。 事实上 ， 现有 的 嵌入式 计算机 可以 成功 地 采用 经过 后天 加固 的 民用 PC机 ， 这一 事实 ， 引起 了 业界 广泛 的 关注 ， 不少 厂家 相继 推出 基于 X 的 嵌入式 实时 系统软件 和 应用软件 ， 这 对 推动 ERTDB 研究 有 十分 重要 的 意义 。 　 　 ． Java 在 嵌入式 系统 中 的 应用 研究 　 　 当前 ， 计算机 界 对 Java 应用 非常重视 ， 特别 是 在 计算机网络 上 的 应用 ， 已经 得到 了 全世界 的 一致 赞许 。 众所周知 ， Java 最初 是 为 嵌入式应用 而 设计 的 ， Java 重新 对 嵌入式应用 产生 吸引力 ， 不仅 是因为 Java 语言 简单 、 开发 周期短 、 具有 C语言 特征 等 优点 ， 还 在于 Java 语言 的 安全性 以及 将 嵌入式 实时 系统 中 的 时间 特性 封装 在 对象 中 的 能力 ， 它 不仅 使 嵌入式 用户 可以 放心 地 开发 自己 的 Java 应用程序 ， 而且 使 嵌入式 环境 连成 网络 成为 可能 ， 我们 认为 未来 的 ERTDB 将 普遍 采用 面向对象 数据库 或 对象 关系数据库 方式 实现 ， 在 这类 CS 结构 的 嵌入式 数据库 中 ， 用 Java 编制 客户程序 将 受到 越来越 多 的 关注 。 　 结束语 　 　 计算机技术 的 迅速 发展 ， 为 ERTDBS 的 研究 提供 了 很多 有利 的 条件 ， 在 ERTDBS 领域 还有 许多 挑战性 的 问题 有待于 研究 和 探讨 。 作者 单位 ： 桂林 电子 工业 学院 计算机 分院 　 本文 工作 为 广西 科学基金 和 广西 教委 跨世纪 人才 基金 资助 项目 ． 参考文献 　 　 ShinKGRealTimeComputingANewDisciplineofComputerScienceandEngineeringProceedingsofTheIEEE ， 　 　 古 天龙 ， 蔡国永 ， 庞健雄 嵌入式 实时 系统 及其 相关 问题 电子科技 导报 ， ； 　 　 SonSHRealTimeDatabaseSystemsPresentandFutureIEEEthInternationalWorkshoponRealtimeComputerSystemsandapplications 　 　 LeeVCSImpactofhighspeednetworkonperformanceofrealtimeconcurrencycontrolprotocolJournalofSystemsArchitecture ， ； 　 　 AbbottR ， GarciaMolinaHSchedulingRealTimetransactionsAPerformanceEvaluationACMTransonDatabaseSystems ， ； 　 　 ShaL ， RajkumarR ， LehoczkyJPriorityinhertanceprotocolsanapproachtorealtimesynchronizationIEEETransacrionsonComputers ， 收稿 日期 ：