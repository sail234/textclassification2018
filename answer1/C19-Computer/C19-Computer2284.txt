计算机 应用 研究 APPLICATIONRESEARCHOFCOMPUTERS 　 Vol 　 No 　 P 基于 Web 的 企业 内部 质量 审核 系统 设计 与 实现 武庄 　 刘友丹 摘要 通过 对 基于 Web 的 企业 内部 质量 审核 系统 的 设计 和 实现 ， 研究 基于 Web 的 应用 系统 开发 中 的 系统分析 方法 、 实现 环境 和 开发工具 等 。 关键词 Web 客户服务器 模型 质量 审核 引言 　 　 对 已经 或 正 准备 通过 ISO 质量体系 认证 的 企业 来说 ， 内部 质量体系 审核 已 成为 企业 日常 管理工作 的 一个 重要 组成部分 。 内部 质量体系 审核 工作 的 特点 是 信息量 大 ， 参与 审核 的 人员 多 ， 对 审核 结果 的 记录 、 跟踪 与 管理 的 要求 较 高 ， 并且 按照 ISO 标准 的 要求 ， 内部 质量体系 审核 工作 每年 都 要 覆盖 ISO 的 所有 要素 和 企业 的 所有 部门 ， 因此 我们 开发 了 企业 内部 质量 审核 系统 单机版 。 根据 用户 反馈 信息 得知 ， 审核 计划 、 审核 结果 依靠 磁盘 导入 导出 ， 易 引起 数据 丢失 尤其 是 跨地区 企业 ； 计划 的 制定 和 执行 异地 进行 ， 易 引起 数据 的 不 一致 ； 审核 管理者 、 审核员 共享 审核 信息 困难 。 　 　 InternetIntranet 的 飞速发展 给 计算机信息 系统 的 开发 带来 了 深刻 的 变化 ， Intranet 就是 在 传统 的 企业 局域网 基础 上 采用 Internet 技术 ， 以 TCPIP 协议 作为 基础 ， 以 Web 为 核心 应用 ， 构成 统一 和 便利 的 信息 交换 平台 。 基于 Web 计算 和 网络 技术 的 信息系统 建立 和 维护 方便 ， 容易 扩展 和 保证数据 的 一致性 ， 能 很 好 地 满足 企业 内部 质量 审核 的 要求 。 鉴于 已经 或 正 准备 通过 体系 认证 的 企业 的 硬件 设施 较 好 ， 绝大部分 企业 已经 按照 Internet 模式 建立 了 内部 网络 ， 因此 我们 对 企业 内部 质量 审核 系统 进行 重新 分析 设计 ， 将 企业 内部 质量 审核 系统 单机版 改造 成 基于 Web 的 企业 内部 质量 审核 系统 。 基于 Web 的 计算 模型 　 　 随着 应用 的 复杂化 ， CS 计算 模型 已 从 客户服务器 两层 模型 进化 为 客户 应用服务器 数据库 服务器 三层 模型 。 对于 三层 CS 模型 ， 如果 用 Web 浏览器 取代 专门 的 客户 界面 ， Web 服务器 作为 标准 的 应用服务器 ， 原来 的 应用逻辑 以 Web 应用 的 形式 存在 ， 开放式 协议 和 标准 如 HTTP ， HTML ， CGI 等 取代 专用 的 协议 ， 这 就 建立 了 以 平台 独立化 和 开放 标准化 为 特征 的 基于 Web 的 计算 模型 ， 如图所示 。 图 基于 Web 的 计算 模型 　 　 在 图 中 ， Web 浏览器 负责 接收 用户 数据 ， 进行 数据 合法性 检验 和 初步 处理 ， 远程 调用 Web 服务器 上 的 应用逻辑 ， 显示 输出 结果 ； Web 服务器 负责 接收 和 响应 Web 客户 的 请求 ， 进行 复杂 的 商业 规则 检查 ， 向 数据库 服务器发送 动态 SQL 或 调用 存储 过程 ， 将 查询 结果 转化 为 HTML 代码 ； 数据库 服务器 负责 执行 Web 服务器 送来 的 动态 SQL 语句 ， 执行 存储 过程 ， 通过 触发器 保证数据 的 完整性 ， 向 Web 服务器发送 SQL 语句 运行 结果 。 　 　 由此可见 ， 采用 基于 Web 的 计算 模型 具有 如下 优点 ： 由于 Web 浏览器 和 Web 服务器 的 平台 独立性 ， 增强 了 程序 的 可移植性 ； 应用 Web 体系 和 开放 协议 标准 ， 增强 了 系统 的 互操作性 ； 所有 维护 工作 均 集中 在 服务器端 ， 增强 了 系统 的 可维护性 和 数据 的 一致性 ； 能够 增加 服务器端 应用 和 相应 的 中间层 接口 软件 ， 增强 了 系统 的 可扩展性 。 　 　 我们 开发 的 企业 内部 质量 审核 系统 QEAUDIT 就是 采用 基于 Web 计算 模型 的 联机 事务处理 系统 。 管理者 可以 通过 浏览器 访问 远 端的 数据库 服务器 ， 对 企业 信息 一般 信息 、 组织 机构 、 体系 文件 、 审核员 等 进行 增删 改 、 定制 检查单 、 职能 分配 、 制定 审核 计划 年度计划 、 单次 计划 等 ； 审核员 可以 通过 浏览器 对 计划 单元 执行 审核 、 查询 计划 和 审核 信息 检查单 、 纠正 措施 报告 、 不 符合 项 等 。 下面 我们 就 对 基于 Web 的 QEAUDIT 系统 设计 与 实现 作较 系统 的 论述 。 基于 Web 的 QEAUDIT 系统 设计 　 　 与 基于 Web 计算 模型 的 三层 模型 相对 应 ， QEAUDIT 系统 也 分为 表示层 、 处理 层 和 数据 层 这 三层 ， 分别 有 界面 对象 、 控制 对象 和 实体 对象 组成 。 其中 ， 界面 对象 是 系统 和 使用者 之间 的 接口 ； 控制 对象 用于 协调 和 管理 界面 对象 和 实体 对象 之间 的 通信 ， 它 可 使 其它 对象 紧密结合 起来 ， 对外 呈现 一个 子系统 ； 实体 对象 的 全体 构成 数据库 。 界面 对象 必须 通过 控制 对象 才能 访问 实体 对象 ， 具体地说 ， 要 通过 Web 页面 访问 数据库 ， 必须 通过 远程 调用 Web 服务器 上 的 应用逻辑 。 所以 ， Web 页面 与 应用逻辑 之间 是 远程 调用 的 关系 ， Web 页面 间 则 是 一种 超链接 的 关系 ， 这 与 传统 应用 系统 模块 间 的 过程 调用 关系 有 很大 区别 。 因此 ， 设计 基于 Web 计算 模型 的 应用 系统 的 主要 工作 是 设计 一系列 的 Web 页面 和 应用逻辑 ， 即 界面 对象 和 控制 对象 ， 以及 Web 页面 和 应用逻辑 之间 的 RPC 关系 和 Web 页面 间 的 超链接 关系 。 　 　 我们 在 分析 和 设计 QEAUDIT 系统 时 ， 仍 沿用 传统 的 结构化分析 方法 。 在 需求 分析阶段 采用 数据流 图 DFD 和 数据 字典 DD 作为 主要 工具 ， 这是 考虑 到 数据流 图 描述 的 是 系统 的 逻辑 模型 ， 而 与 物理 体系结构 无关 。 在 总体设计 阶段 ， 我们 根据 基于 Web 计算 模型 的 特点 对 传统 的 面向 数据流 的 设计 方法 加以改进 ， 并 利用 改进 后 的 方法 把 数据流 图 映射 为 软件结构 。 下面 对 QEAUDIT 系统 设计 过程 中 的 关键步骤 说明 如下 ： 　 　 设计 QEAUDIT 系统 的 DFD 和 DD ， 其 部分 DFD 如图所示 。 图 QEAUDIT 系统 DFO 　 　 识别 使用 系统 的 角色 ， 并 为 每个 角色 安排 一个 用户界面 对象 ， 具体表现 为 一组 Web 页面 。 一般 每个 数据源 点 对应 一个 角色 。 QEAUDIT 系统 的 角色 主要 是 “ 管理者 ” 和 “ 审核员 ” ， 为此 我们 安排 了 管理者 界面 和 审核员 界面 。 　 　 把 各层 DFD 分别 映射 为 系统 的 软件 结构图 。 数据 存储 的 编号 不变 ， 软件 结构图 中 的 角色 编号 与 DFD 中 相应 的 数据源 编号 相同 。 页面 对象 、 控制 对象 和 子系统 模块 分别 用 PG 、 CN 和 SB 标识 ， 其它 编号 规则 和 DFD 编号 规则 相同 。 图中 的 DFD 所 对应 的 软件 结构图 如图所示 。 图中 所示 的 软件 结构图 呈现 三层 结构 ， 与 基于 Web 方式 计算 模型 的 三层 模式 一致 。 图 　 QEAUDIT 系统 的 软件 结构图 　 　 由 软件 结构图 可以 描述 各个 界面 对象 和 控制 对象 的 输入 、 输出 和 要 执行 的 操作 。 这些 描述 是 详细 设计 的 主要 依据 。 由 数据流 图 映射 得到 的 系统 的 结构 可以 看出 各个 角色 分别 能 进入 哪些 子系统 、 能 访问 哪些 页面 ， 这些 可 作为 设计 安全措施 的 依据 。 　 　 识别 数据流 图中 的 数据 存储 ， 进行 数据库 设计 ， 并 对 关系 表 进行 规范化 以 达到 NF 。 QEAUDIT 系统 有 管理者 表 、 审核员 表 、 年度 计划表 、 单次 计划表 、 检查单 表等 。 　 　 至于 软件 生命周期 的 其它 阶段 ， 基本上 和 结构化分析 方法 一致 ， 在 此 不再 叙述 。 QEAUDIT 系统 的 实现 环境 Web 数据库 访问 技术 　 　 Internet 应用 已经 从 最初 的 静态 页面 发布 发展 到 丰富 的 动态 交互 页面 ， 而 访问 Web 数据库 则 是 通过 动态 交互技术 来 实现 的 。 最初 的 动态 交互 是 通过 CGI 通用 网关 接口 来 实现 的 ， 但 CGI 程序 每次 响应 均 要 启动 一个 进程 ， 效率 较 低 。 后来 出现 了 多线程 编程 接口 ， 如 Microsoft 的 ISAPI 和 Netscape 的 NSAPI 技术 ， 以及 需要 下载 到 客户端 浏览器 执行 的 JavaApplet 、 ActiveX 和 Plugin 浏览器 插件 。 表是 这 几种 技术 的 比较 。 表 Web 数据库 访问 技术 比较 　 实现 方式 运行 方式 效率 主要 支持 的 WebServerCGIPerl 等 服务器 脚本 C语言 等 多 进程 单线程 低 MicrosoftIISNetscapeWebServerWebSiteISAPINSAPI C语言 等 单 进程 多线程 驻留 内存 高 MicrosoftIISNetscapeWebServerJavaAppletActiveXPluginJava C语言 等 单 进程 多线程 高 MicrosoftIISNetscapeWebServer 　 　 选用 Web 数据库 访问 技术 应 主要 考虑 三 方面 因素 ： 能否 保证 Web 服务器 的 高性能 ； Web 服务器端 代码 是否 具有 可移植性 ； 客户端 除了 浏览器 外 ， 是否 需要 其它 软件 。 由于 QEAUDIT 系统 是 基于 Intranet 的 ， 服务器端 代码 基本上 不 需要 移动 ， 而且 应用 编程 接口 方法 能 保证 服务器 的 高性能 ， 因此 ， 我们 在 设计 QEAUDIT 系统 时 就 采用 了 应用 编程 接口 的 方法 。 客户端 　 　 在 客户端 ， 目前 最 流行 的 浏览器 为 InternetExplorer 和 Netscape 它们 均 支持 扩展 的 HTML 标准 ， 支持 Javascript 和 JavaApplet 。 标准 HTML 可以 提供数据 输入输出 界面 。 在 QEAUDIT 系统 中 ， 我们 使用 Javascript 作 数据 合法性 检验 和 初步 处理 ； Javascript 还 能 加强 页面 的 动态性 ， 如 用户 输入 非法 数据 时弹 出 提示 窗口 ， 用户 按下 删除 记录 时弹 出 确认 窗口 。 使用 Java 可以 弥补 应用 编程 接口 方法 的 一些 缺陷 。 如要 用 折线图 显示 企业 内部 质量 审核 的 历史 情况 ， 可以 设计 一个 嵌 在 HTML 中画 折线图 的 JavaApplet ， 程序 中设 一个 存放 作图 数据 的 参数 区 。 当 控制 对象 统计 出 各次 审核 的 统计数据 后 ， 将 数据 填入 参数 区 ， 然后 将 Applet 程序 传回 客户端 运行 。 Web 服务器端 　 　 在 Web 服务器端 ， 我们 采用 NT 中文版 作为 操作系统 ， MicrosoftIIS 作为 WWW 服务 软件 ， 它 提供 了 IDCInternet 直接 数据 连接 和 ASP 接口 作为 IIS 到 SQLServer 的 接口 。 控制 对象 分 两类 ： 处理 客户 请求 和 向 数据库 服务器发送 动态 SQL 的 控制 对象 ， 将 数据库 查询 结果 转换 为 HTML 代码 的 控制 对象 。 对于 第一种 控制 对象 ， IDC 方法 实际上 设计 一系列 送往 SQLServer 的 TransactSQL 语句 ， 缺乏 在 Web 服务器端 执行 的 代码 ， 不 具备 复杂 的 商业 规则 检查 能力 ； ASP 方法 则 是 设计 一系列 嵌 在 ASP 文件 中 的 类 VB 代码 ， 这些 代码 既 可以 通过 ODBC 建立 与 SQLServer 连接 ， 又 可以 执行 复杂 的 商业 规则 检查 ， 这是 一种 较 好 的 选择 。 对于 第二种 控制 对象 ， 这 两种 方法 都 采用 扩展 HTML 模板 文件 的 方法 ， 在 HTML 代码 中 加入 控制 语句 ， 控制 数据库 查询 结果 转化 为 按 一定 格式 显示 的 标准 HTML 代码 。 数据库 服务器端 　 　 在 数据库 服务器端 ， 我们 配置 了 NT 中文版 、 SQLServer 和 ODBC 。 这里 主要 的 开发 工作 是 设计 通用 的 存储 过程 、 触发器 和 完整性检查 规则 。 使用 存储 过程 可 提高 服务器 性能 ， 减轻 网络 压力 ， 增强 数据 的 安全性 和 完整性 。 但 在 QEAUDIT 系统 中 ， 对于 各个 表 的 INSERT 、 DELETE 和 UPDATE 操作 设计 通用 存储 过程 ； 而 SELECT 操作 使用 频率 高 ， 且 查询 条件 各异 ， 难以 设计 通用 的 存储 过程 ， 一般 用 动态 SQL 语句 实现 。 安全措施 　 　 为 QEAUDIT 系统配置 必要 的 安全措施 十分 关键 。 应用 系统 的 安全 机制 一般 分为 网络 级 、 操作系统 级 和 应用程序 级 三个 层次 。 根据 QEAUDIT 系统 实现 环境 ， 我们 一方面 采用 操作系统 的 安全 机制 ， 对于 Web 服务器 上 的 Web 页面 和 应用逻辑 代码 ， 用 NT 的 NTFS 文件系统 分配 这些 文件 的 权限 ， 并 设置 用户 帐号 和 密码 ， 任何 进入 QEAUDIT 系统 均 要 核查 帐号 和 密码 ； 另一方面 通过 应用程序 加以控制 ， 例如 对于 进入 该 系统 的 合法 审核员 ， 限制 该 审核员 只能 存取 所在 部门 的 审核 计划 和 审核 结果 等 。 结束语 　 　 本文 对 基于 Web 的 企业 内部 质量 审核 系统 的 分析 和 设计 、 实现 环境 和 开发工具 进行 了 详细 的 论述 对 其它 基于 Web 的 应用 系统 开发 具有 借鉴 意义 。 使用 基于 Web 计算 模型 开发 的 事务处理 系统 逻辑 结构 清晰 ， 分工 明确 ， 运行 效率 较 高 ， 为 客户服务器 应用 提供 了 新 的 开发 途径 。 武庄 北京航空航天大学 北京 刘友丹 北京 中航 科创 质量 技术开发 中心 北京 参考文献 ， M 斯旺克 D 基特尔 WorldWideWeb 数据库 开发人员 指南 北京 机械 工业 出版社 ， RonSoukupMicrosoftSqlServer 技术 内幕 北京 清华大学出版社 ， 万健 数据库 Web 发布 技术 及 Internet 信息 咨询 系统 的 设计 计算机 应用 研究 ～ ， 姚卿 达 李子 坚 基于 网络 中心 计算 模型 的 应用 系统 开发方法 计算机科学 ～ 收稿 日期 ：