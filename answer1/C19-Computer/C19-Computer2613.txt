软件 学报 JOURNALOFSOFTWARE 年 第期 第卷 VolNo 分布 实现 完全 LOTOS 规范 的 转换方法 谢冰 　 陈 火旺 　 王兵山 　 　 摘要 　 基于 LOTOS 规范 语言 文章 从 系统 功能 规范 出发 结合实际 系统 的 分布 特性 推导 出 符合实际 系统结构 的 模块化 规范 的 转换方法 用 标注 的 完全 LOTOS 语言 规范 表达 复杂 的 系统 分布 特性 研究 了 使用 广播 通信 方式 进行 协同 的 、 直接 处理 多 模块 划分 的 规范 分解 算法 　 　 关键词 　 分布式系统 进程 代数 LOTOS 规范 语言 规范 分解 　 　 中图法 分类号 　 TP 　 DecompositionTransformationfortheDistributedImplementationofFullLOTOSSpecificationXIEBing 　 CHENHuowang 　 WANGBingshanDepartmentofComputerScienceChangshaInstituteofTechnologyChangsha 　 　 Abstract 　 InthispaperbasedontheLOTOSspecificationlanguagetheauthorspresentthetransformationwhichstartsfromthefunctionalspecificationandthedistributedpropertiesoftargetsystemtothecorrespondingmodularspecificationTheauthorspresentthetaggedspecificationtorepresentthecomplexdistributedpropertiesofthefullLOTOSspecificationsandstudythedecompositiontransformationoffullLOTOSspecificationwhichusingthebroadcastingcommunicationgatesinthesystemsinternalcoordinatingcommunicationsanddirectlydecomposingthemultiplesubsets 　 　 Keywords 　 DistributedsystemprocessalgebraLOTOSspecificationspecificationdecomposition 　 　 系统 功能 规范 是 与 实现 细节 无关 的 在 分布式系统 中 实现 时 设计 人员 需要 设计 出 各个 模块 的 功能 规范 这些 模块 执行 其上 所 分担 的 系统 功能 通过 模块 间 的 通信 ， 协同 实现 系统 功能 规范 本文 研究 了 一种 设计 算法 使得 设计 人员 在 确定 目标 系统 的 分布 特性 后 即可 直接 推导 出 模块化 规范 这种 规范 转换方法 可 表示 为 “ 系统 功能 规范 实际 系统 分布 特性 系统 模块化 规范 ” 被 称为 规范 分解 方法 相应 于 分布 系统 的 层次性 在子 模块 规范 基础 上 可以 分解 出 更 下 一层 的 分布 模块 规范 重复使用 规范 分解 方法 最终 可 得到 完全符合 目标 系统结构 的 模块 规范 从而 完成 系统 的 结构设计 过程 　 　 LOTOS ［ ］ 是 ISO 组织 为了 描述 开放 的 分布式系统 而 制定 的 一种 规范 语言 其 基本点 在于 ， 一个 系统 可 通过 从 外部环境 观察 到 的 交互 操作 时序 关系 来 定义 对 LOTOS 规范 的 分布 实现 问题 已有 不少 的 研究 结果 ［ ］ 但 都 针对 不 包含 数据 部分 的 基本 LOTOS 规范 、 研究 行为 表达式 的 分解 方法 并且 基本 都 是 研究 一分为二 的 分解 方法 本文 则 针对 完全 LOTOS 语言 规范 研究 了 复杂 的 系统 分布 特性 及其 抽象 表征 并 给出 了 使用 广播 通信 方式 进行 协同 的 多 模块 直接 分解 转换 算法 系统 的 分布 实现 模型 　 　 分布 系统 由 分布 的 处理 模块 组成 每个 模块 都 能 独立 处理 其 自身 行为 模块 间 通过 一定 的 通信 结构 进行 协同 本文 的 研究 基于 如下 分布 系统 抽象 模型 （ ） 系统 支持 广播 通信 方式 ； （ ） 需要 协同 的 模块 之间 都 有 直达 的 通信 信道 ； （ ） 通信 信道 是 可靠 的 即 具有 保持 消息 顺序 、 无 丢失 、 无 拥塞 等 性质 　 　 定义 分布 系统 DS 是 一个二元 组 DS 〈 MBG 〉 其中 　 　 Mmmn 是 系统 的 分布 模块 集 ； 　 　 BG 是 模块 间通信 门径 集对 任意 的 gijk ∈ BG 定义 为 gmimjmk 　 　 本文 使用 syncijk 作为 模块 mimjmk 间 协同 门径 的 特定 命名 设 模块 mi 上 的 行为 用 进程 Pi 表示 则 可用 模块 进程 集合 PPPn 表达 模块 集合 M 对 定义 中 的 门径 集合 BG 若 SSP 则 SGSSsyncijk ｜ 有 tt ∈ ijk 满足 Pt ∈ S 且 Pt ∈ S 表示 S 中 模块 与 S 中 模块 间 的 所有 通信 门径 集合 　 　 定义 分布 系统 规范 是 所有 组件 通过 内部 通信 协同 的 规范 其中 的 内部 通信 行为 对 外界 隐藏 一个 分布 系统 DS 的 模块化 规范 SPECDS 定义 如下 　 　 SPECDShideBGinP ｜ ［ SGPPPn ］ ｜ P ｜ ［ SGPPPn ］ ｜ P ｜ ［ SGPnPn ］ ｜ Pn 　 系统 的 分布 特性 及 标注 规范 　 　 完全 LOTOS 语言 描述 的 系统 中 包含 行为 部分 和 数据 部分 对应 于 系统 的 分布 实现 类 基本 的 规范 元素 （ 即 数据 、 数据 操作 和 行为 ） 都 可能 分布 在 不同 模块 上 我们 在 这些 规范 元素 上均 标注 相应 的 分布 模块 形成 了 标注 规范 以此 表达 系统 的 实际 分布 特性 　 　 本文 以 一个 简化 的 银行 自动 取款机 （ ATM 机 ） 作为 例子 ATM 机有 下述 门径 Incard 是 卡片 插入 口 从 卡上 读出 用户 帐号 In 是 用于 接收 用户 口令 和 取款 数目 的 键盘 Out 向 用户 付款 Display 是 显示器 输出 Com 是 通信 口 用于 同 银行 的 服务器 通信 规范 中 的 moneybox 是 ATM 机中 储存 的 货币 数 ATM 机 分为 个 模块 用户 接口 部分 userpart 为 P 通信 机 communicator 为 P 钱 匣 box 为 P 反映 实际 系统 分布 特性 的 标注 规范 如下 ProcATM ［ IncardPInPOutPDisplayPComP ］ moneyboxPMoneytypenoexit 　 　 IncardPAccountnoInPGETPASSWORDpasswordComPAccountnopassword 　 　 　 ComPPASSOK 　 　 　 　 InPGETMONEYmMoneyComPGETMONEYm 　 　 　 　 　 ComPOKOutPmDisplayPSUCCESSComPSUCCESS ＞ ＞ 　 　 　 　 　 　 ATM ［ IncardPInPOutPDisplayPComP ］ newmoneyPDecMoneyPmoneyboxm 　 　 　 　 　 ［ ］ ComPNOTENOUGHDisplayPERROR 　 　 　 　 　 　 　 ATM ［ IncardPInPOutPDisplayPComP ］ moneyboxP 　 　 　 　 ［ ］ ComPPASSINVALIDATM ［ IncardPInPOutPDisplayPComP ］ moneyboxPendproc 　 　 系统 分布 特性 的 另一方面 是 数据 变元 的 相关 模块 集 可以 从 标注 规范 中 分析 得到 本文 用 refx 表示 ATM 机中 数据 变元 的 相关 模块 集合 如下 refmoneyboxPrefmPPPrefmoneyboxPrefAccountnoPPrefpasswordPP 规范 分解 转换 算法 　 　 分布 模块 是 自主 运行 的 模块 间 的 行为 是 并发 的 因此 分布 的 模块 间 必须 通过 通信 协调 来 实现 系统对 系统 行为 间 的 顺序 关系 若 前后 行为 分布 在 不同 模块 上 需要 加入 同步 事件 以 保持 其间 的 顺序 关系 另一方面 分布 的 模块 间 可能 具有 数据 相关性 需要 通过 模块 间 的 传值 通信 协同 来 保证 共享 数据 变元 的 全局 实时 一致性 可见 系统 内部 有纯 同步 通信 和 传值 通信 两种 协同 分解 转换 算法 研究 使用 通信 进行 协同 的 方法 系统 内部 协同 事件 　 　 本文 研究 包含 并行 行为 表达式 的 规范 分解 需要 区分 可能 并发 出现 的 协同 事件 可以 在 协同 事件 中 加入 规范 结构 信息 来 命名 不同 的 同步 事件 　 　 结构 信息 是 规范 结构 的 表达 有 如下 几种 形式 对于 原 规范 进程 P 分布 在 模块 Pk 中 的 相应 进程 中 使用 的 内部 协同 事件 均 应 带有 “ P ” 形式 的 结构 信息 对 选择 行为 B ［ ］ ［ ］ Bn 其 第 i 个 分支 Bi 所 对应 的 各个 模块 上 的 相应 行为 TkBi 中 的 内部 协同 事件 均 应 带有 “ ci ” 形式 的 结构 信息 对 并行 行为 B ｜ ［ ］ ｜ Bn 其 第 i 个 分支 Bi 所 对应 的 各个 模块 上 的 相应 行为 TkBi 中 的 内部 协同 事件 均 应 带有 “ pi ” 形式 的 结构 信息 　 　 按 LOTOS 语言 的 语法 、 语义 定义 我们 将 系统 内部 协同 事件 定义 为 syncijkddn 形式 的 行为 其中 syncijk 是 系统 中 的 内部 通信 信道 di ≤ i ≤ n 为 结构 信息 或 传值 门径 操作 分解 转换 算法 　 　 规范 分解 转换 算法 根据 规范 元素 的 分布 划分 研究 模块 规范 的 产生 我们 按 操作 分解 、 原子 行为 分解 、 行为 表达式 分解 和 进程 引用 、 定义 分解 个 层次 分别 研究 规范 分解 转换 算法 在 每个 层次 中 针对 所有 可能 的 分布 情况 均 给出 转换规则 限于 篇幅 本文 主要 讨论 数据 操作 分解 与 行为 表达式 分解 　 　 对 任意 模块 PiTi “ 标注 规范 Pi 模块 规范 ” 为 其 转换 函数 由于 分解 中 产生 的 内部 协同 事件 需要 使用 规范 结构 信息 定义 顺序 行为 分解 又 与 后继 行为 的 分布 模块 有关 所以 可 将 Ti 函数 定义 为 “ 标注 规范 × 结构 信息 × 后继 模块 信息 Pi 模块 规范 ” 在 后文 的 转换 算法 中 明确 定义 了 结构 信息 及 后继 模块 信息 的 产生 与 使用 　 　 在 本文 的 算法 中为 表达 方便 设对任 给 的 i 均 有 synciid ε ε 为 空串 数据 操作 分解 算法 　 　 在 原 规范 中 ， 一个 数据 操作 的 自变 元 可能 是 一个 分布 在 其他 模块 上 执行 的 操作 结果 需要 首先 计算 该值 并 传送 结果 另一方面 一个 操作 的 值 变元 可能 是 多个 模块 的 共享 变元该 操作 执行 完毕 后 应该 扩散 这个 值 变元 的 实时 值 由此 一个 操作 t 的 分布 实现 包括 个 顺序 执行 部分 前向 行为 Tift 产生 t 操作 执行 前 的 协同 行为 变换 Timt 转换 出 t 操作 分解 后 的 形式 定义 后 向 行为 Tibt 则 产生 t 操作 执行 后 的 相应 协同 行为 在 数据 操作 分解 中 通过 模块 间 的 传值 通信 协同 确保 共享 数据 变元 的 实时 一致性 　 　 保持 多 模块 间 共享 的 数据 变元 在 系统 中 全局 映像 一致 的 机制 可以 简述 为 在 每个 共享 变元 x 的 相关 模块 上 均 有 一个 x 的 局部 映像 模块 上 引用 x 的 局部 映像 而 在 x 值 更改 时使 所有 相关 模块 同步 更新 其上 的 映像 值 通过 广播 方式 进行 同步 传送 若 refx 为 PiPjPk 则 广播 门径 设定 为 syncijk 下文 中 使用 syncrefx 表示 该 门径 　 　 不妨 设 t 项 分布 在 模块 Pi 中 规范 分解 的 结构 信息 为 dx 则 对 任意 的 模块 Pk 有 TktidxTkftidxTkmtidxTkbtidx 其中 i 为 t 项 分布 的 模块号 “ ” 为 分割 符 表达 行为 间 的 顺序 关系 　 　 区分 t 项 的 不同 情况 可以 给出 转换 算法 如下 　 　 操作 本身 的 变换 　 　 　 　 操作 执行 前 的 协同 行为 　 　 　 　 操作 执行 后 的 协同 行为 　 　 原子 行为 分解 算法 　 　 原子 行为 分解 中 行为 根据 其 模块 划分 进行 投影 行为 中 的 数据 操作 可能 需要 使用 操作 分解 算法 确定 同 其他 模块 的 协同 对于 行为 中 的 变元 赋值 “ x ” 还 需 考虑 x 的 共享性 ， 以 决定 是否 进行 x 变元 实时 值 的 传送 我们 针对 完全 LOTOS 语言 规范 中 原子 行为 的 不同 组成 形式 以及 其中 涉及 的 共享 数据 和 数据 操作 的 分布 位置 ， 分别 给出 相应 的 转换规则 例如 对 gPix 的 分解 算法 如下 　 　 行为 表达式 分解 算法 　 　 行为 表达式 分解 算法 解决 行为 间 时序 关系 的 分布 实现 问题 我们 对 几种 基本 行为 表达式 分别 进行 讨论 其他 行为 算子 的 表达式 分解 可以 依此类推 　 　 行为 前缀 表达式 分解 方法 对于 行为 的 顺序 关系 ， 可 根据 该 行为 以及 其后 可能 执行 的 所有 行为 所属 的 模块 ， 确定 所 需要 的 同步 通信 　 　 定义 对 一个 行为 表达式 B 它 的 可能 行为 集 PosActB 递归 定义 如下 　 　 对 行为 前缀 行为 表达式 BaB ′ PosActBa 　 　 对 选择 行为 表达式 　 　 对 并行 行为 表达式 　 　 对 进程 实例 proc 且 procB ′ 则 PosActBPosActprocPosActB ′ 　 　 定义 若 Moda 为 行为 a 所属 的 划分 模块 则 行为 B 的 可能 行为 模块 集 定义 为 PAMSBModa ｜ a ∈ PosActB 　 　 根据上述 定义 对 行为 前缀 表达式 BatagaB ′ tag 任意 模块 Pj 的 分解 转换 算法 为 　 　 TjBdxpamsTjatagadxTsyncjPidxPAMSB ′ tagTjB ′ tagdxpams 其中 TsyncPidxPAMSB ′ 为 所 需 的 内部 协同 行为 定义 如下 　 　 　 　 在 上式 中 TsyncjPidxPAMSB ′ tag 是 需要 的 模块 间 纯 同步 协同 而 a 行为 的 后 向 协同 行为 以及 PosActB ′ 中 行为 的 前 向 协同 行为 也 起到 了 系统 行为 间 的 同步 关系 因而 最终 生成 的 纯 同步 事件 可以 由此 化简 　 　 顺序 行为 表达式 分解 方法 对 顺序 行为 表达式 BBB 分解 算法 为 　 　 TiBdxpamsTiBdxPAMSBTiBdxpams 　 　 选择 行为 表达式 分解 方法 本文 对于 选择 行为 分解 限制 为 所有 选项 均 为 互斥 出现 在 这个 前提 下若 选择 行为 表达式 为 BaB ［ ］ aB ［ ］ ［ ］ amBm 则 分解 转换方法 为 　 　 TiBdxpamsTifadxTifadxTifamdx 　 　 　 TimadxTibadxcTsyncitagadxcPAMSBTiBdxcpams 　 　 　 ［ ］ TimadxTibadxcTsyncitagadxcPAMSBTiBdxcpams 　 　 　 ［ ］ TimamdxTibamdxcmTsyncitagamdxcmPAMSBmTiBmdxcmpams 　 　 并行 行为 表达式 分解 方法 设 BB ｜ ［ gtagggntaggn ］ ｜ B 则 分解 算法 为 　 　 TiBdxpamsTiBdxppams ｜ ［ PJigtagggntaggn ］ ｜ TiBdxppams 其中 PJi 是 门径 在 模块 Pi 上 的 投影 分解 实例 　 　 对 本文 中 ATM 机 的 标注 规范 分解 的 结果 规范 如下 显见 模块 间 通过 协同通信 、 分布 实现 了 原 功能 规范 ProcATM ［ IncardInOutDisplayCom ］ moneyboxMoneytypenoexithidesyncsyncsyncinUSERPART ［ IncardInDisplay ］ ｜ ［ syncsync ］ ｜ 　 　 　 　 COMMUNICATOR ［ Com ］ ｜ ［ syncsync ］ ｜ BOX ［ Out ］ moneyboxwhereProcUSERPART ［ IncardInDisplay ］ noexit 　 IncardAccountnosyncAccountnoInGETPASSWORDpasswordsyncpassword 　 　 syncc 　 　 InGETMONEYmMoneysyncm 　 　 syncccDisplaySUCCESSsyncccpUSERPART ［ IncardInDisplay ］ 　 　 　 ［ ］ syncccDisplayERRORUSERPART ［ IncardInDisplay ］ 　 　 ［ ］ synccUSERPART ［ IncardInDisplay ］ 　 　 endprocProcCOMMUNICATOR ［ Com ］ noexitsyncAccountnosyncpasswordComAccountnopassword 　 ComPASSOKsyncc 　 　 syncmComGETMONEYm 　 　 ComOKsyncccsyncccComSUCCESSsyncccp 　 　 　 　 　 COMMUNICATOR ［ Com ］ 　 　 　 ［ ］ ComNOTENOUGHsyncccCOMMUNICATOR ［ Com ］ 　 　 ［ ］ ComPASSINVALIDsynccCOMMUNICATOR ［ Com ］ 　 　 endprocProcBOX ［ Out ］ moneyboxMoneytypenoexit 　 syncm 　 　 syncccOutmsyncccBOX ［ Out ］ newmoneyDecMoneymoneyboxm 　 　 　 　 ［ ］ BOX ［ Out ］ moneybox 　 　 　 ［ ］ BOX ［ Out ］ moneybox 　 　 endprocendproc 结束语 　 　 本文 提出 了 标注 规范 的 方法 以 表达 复杂 的 系统 分布 特性 在 此基础 上 研究 了 将 完全 LOTOS 语言 规范 按 实现 环境 的 分布 要求 分解成 多个 协同 组件 的 规范 转换方法 该 方法 可能 将 一个 原 规范 行为 分解 为 一个 内部 协同 的 行为 序列 因而 分解 是 受 一定 条件 限制 的 在 条件 满足 情况 下 可以 基于 进程 代数 理论 形式化 地 证明 通过 内部 通信 协同 分解 的 结果 规范 与 原始 规范 保持 观察 等价 性 由此 保证 了 系统 设计 的 正确性 　 　 与 已有 的 工作 相比 本文 针对 完全 LOTOS 语言 规范 研究 了 数据分布 的 抽象 表征 以及 分布 实现 问题 本文 提出 的 方法 直接 处理 多 划分 集 的 情况 使 这种 功能 分解 的 方法 更 适用 于 实际 问题 今后 的 工作 主要 是 ， 针对 数据项 本身 的 分解 进行 研究 需从 两个 方面 研究 一方面 是 基于 代数 规范 语言 讨论 数据项 的 划分 子 模块 表达形式 另一方面 则 是 在 子 模块 规范 中 操作 与 在 原始 规范 中 操作 的 相关性 研究 行为 表达式 与 操作 的 分解 转换 算法 　 本文 研究 得到 国家自然科学基金 和 国家 高科技 项目 基金 资助 作者简介 　 谢冰年生 ， 博士 主要 研究 领域 为 分布式系统 ， 软件工程 　 　 　 　 　 陈 火旺 年生 教授 博士生 导师 中国工程院 院士 主要 研究 领域 为 软件 生产 自动化 计算机科学 理论 　 　 　 　 　 王兵 山年生 教授 主要 研究 领域 为 计算机科学 理论 软件 本文 通讯联系 人谢 冰 北京 北京大学 计算机科学 与 技术 系 CASE 室 作者 单位 ： 长沙 工学院 计算机科学 系 长沙 参考文献 　 　 ISOLOTOSaformaldescriptiontechniquebasedonthetemporalorderingofobservationalbehaviorISOIS 　 　 　 BolognesiTBrinksmaEIntroductiontotheISOspecificationlanguageLOTOSComputerNetworkandISDNSystems ～ 　 　 RomLangerakTransformationandsemanticsforLOTOS ［ PhDThesis ］ UniversityofTwenteNetherlands 　 　 MariaHultstromStructuraldecompositionProtocolSpecificationTestingandVerificationXV ～ 本文 收到 原稿 收到 修改稿