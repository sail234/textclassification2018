计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNoOracle 基于 ClientServer 的 性能 调整 张冬 　 王鸿 　 姚耀 文摘 要 ： 通过 探讨 和 研究 Oracle 服务器 和 ClientServer 的 特点 和 原理 ， 阐述 了 提高 、 调整 Oracle 应用 系统 性能 的 一些 原则 和 方法 。 关键词 ： Oracle ； 客户服务器 ； 系统 全程 区 ； 网络 IO ； 回滚段 OraclePerformanceTunignBasedonClientServerZhangDongWangHongYaoYaowenDepofComputerSciencesandEngineeringSouthChinaUniversityofTechnologyGuangzhouDeptofInformaticsGuangzhouSchoolofFinauceGuangzhou 【 Abstract 】 InthispaperdiscusesandstudiesthecharacteristicofOracleserviceandtheoryaboutOracleservicebasedonClientServerItalsogivesthewaytoimproveandturetheperformanceofOraclebasedonClientServer 【 Keywords 】 OracleCclientServerSGANetworkIORollbackSegment 　 　 Oracle 数据库 广泛应用 在 社会 的 各个领域 ， 特别 是 在 ClientServer 模式 的 应用 ， 但是 应用 开发者 往往 碰到 整个 系统 的 性能 随着 数据量 的 增大 显著 下降 的 问题 ， 为了 解决 这个 问题 ， 从 以下 几个 方面 ： 数据库 服务器 、 网络 IO 、 应用程序 等 对 整个 系统 加以 调整 ， 充分发挥 Oracle 的 效能 ， 提高 整个 系统 的 性能 。 调整 数据库 服务器 的 性能 　 　 Oracle 数据库 服务器 是 整个 系统 的 核心 ， 它 的 性能 高低 直接 影响 整个 系统 的 性能 ， 为了 调整 Oracle 数据库 服务器 的 性能 ， 主要 从 以下 几个 方面 考虑 ： 调整 操作系统 以 适合 Oracle 数据库 服务器 运行 　 　 Oracle 数据库 服务器 很大 程度 上 依赖于 运行 服务器 的 操作系统 ， 如果 操作系统 不能 提供 最好 性能 ， 那么 无论如何 调整 ， Oracle 数据库 服务器 也 无法 发挥 其 应有 的 性能 。 为 Oracle 数据库 服务器 规划 系统资源 　 　 据 已有 计算机 可用 资源 规划 分配 给 Oracle 服务器资源 原则 是 ： 尽可能 使 Oracle 服务器 使用 资源 最大化 特别 在 ClientServer 中 尽量 让 服务器 上 所有 资源 都 来 运行 Oracle 服务 。 调整 计算机系统 中 的 内存 配置 　 　 多数 操作系统 都 用 虚 存来 模拟 计算机 上 更 大 的 内存 ， 它 实际上 是 硬盘 上 的 一定 的 磁盘空间 。 当 实际 的 内存空间 不能 满足 应用软件 的 要求 时 ， 操作系统 就 将 用 这部分 的 磁盘空间 对 内存 中 的 信息 进行 页面 替换 ， 这 将 引起 大量 的 磁盘 IO 操作 ， 使 整个 服务器 的 性能 下降 。 为了 避免 过多地 使用 虚存 ， 应 加大 计算机 的 内存 。 为 Oracle 数据库 服务器 设置 操作系统 进程 优先级 　 　 不要 在 操作系统 中 调整 Oracle 进程 的 优先级 ， 因为 在 Oracle 数据库系统 中 ， 所有 的 后台 和 前台 数据库 服务器 进程 执行 的 是 同等 重要 的 工作 ， 需要 同等 的 优先级 。 所以 在 安装 时 ， 让 所有 的 数据库 服务器 进程 都 使用 缺省 的 优先级 运行 。 调整 内存 分配 　 　 Oracle 数据库 服务器 保留 个 基本 的 内存 高速缓存 ， 分别 对应 种 不同 类型 的 数据 ： 库 高速缓存 ， 字典 高速缓存 和 缓冲区 高速缓存 。 库 高速缓存 和 字典 高速缓存 一起 构成 共享 池 ， 共享 池再 加上 缓冲区 高速缓存 便 构成 了 系统 全程 区 SGA 。 SGA 是 对 数据库 数据 进行 快速访问 的 一个 系统 全程 区 ， 若 SGA 本身 需要 频繁 地 进行 释放 、 分配 ， 则 不能 达到 快速访问 数据 的 目的 ， 因此 应 把 SGA 放在 主存 中 ， 不要 放在 虚拟内存 中 。 内存 的 调整 主要 是 指 调整 组成 SGA 的 内存 结构 的 大小 来 提高 系统 性能 ， 由于 Oracle 数据库 服务器 的 内存 结构 需求 与 应用 密切相关 ， 所以 内存 结构 的 调整 应 在 磁盘 IO 调整 之前 进行 。 库 缓冲区 的 调整 　 　 库 缓冲区 中 包含 私用 和 共享 SQL 和 PLSQL 区 ， 通过 比较 库 缓冲区 的 命中率 决定 它 的 大小 。 要 调整 库 缓冲区 ， 必须 首先 了解 该库 缓冲区 的 活动 情况 ， 库 缓冲区 的 活动 统计 信息 保留 在 动态 性能 表 vlibrarycache 数据 字典 中 ， 可 通过 查询 该表来 了解 其 活动 情况 ， 以 决定 如何 调整 。 　 　 Selectsumpinssumreloadsfromvlibrarycache 　 　 Pins 列 给出 SQL 语句 ， PLSQL 块 及 被 访问 对象 定义 的 总 次数 ； Reloads 列 给出 SQL 和 PLSQL 块 的 隐式 分析 或 对象 定义 重 装载 时 在 库 程序 缓冲区 中 发生 的 错误 。 如果 sumpinssumreloads ≈ ， 则 库 缓冲区 的 命中率 合适 ； 若 sumpinssumreloads 则 需 调整 初始化 参数 sharedpoolsize 来 重新 调整 分配 给 共享 池 的 内存 量 。 数据 字典 缓冲区 的 调整 　 　 数据 字典 缓冲区 包含 了 有关 数据库 的 结构 、 用户 、 实体 信息 。 数据 字典 的 命中率 ， 对系统 性能 影响 极大 。 数据 字典 缓冲区 的 使用 情况 记录 在 动态 性能 表 vlibrarycache 中 ， 可 通过 查询 该表来 了解 其 活动 情况 ， 以 决定 如何 调整 。 　 　 Selectsumgetssumgetmissesfromvrowcache 　 　 Gets 列是 对 相应 项 请求 次数 的 统计 ； Getmisses 列是 引起 缓冲区 出错 的 数据 的 请求 次数 。 对于 频繁 访问 的 数据 字典 缓冲区 ， sumgetmissessumgets ～ 。 若 大于 此 百分数 ， 则 应 考虑 增加 数据 字典 缓冲区 的 容量 ， 即 需 调整 初始化 参数 sharedpoolsize 来 重新 调整 分配 给 共享 池 的 内存 量 。 缓冲区 高速缓存 的 调整 　 　 用户 进程 所 存取 的 所有 数据 都 是 经过 缓冲区 高速缓存 来 存取 ， 所以 该 部分 的 命中率 ， 对 性能 至关重要 。 缓冲区 高速缓存 的 使用 情况 记录 在 动态 性能 表 vsysstat 中 ， 可 通过 查询 该表来 了解 其 活动 情况 ， 以 决定 如何 调整 。 　 　 Selectnamevaluefromvsysstatwherenameindbblockgetsconsistentgetsphysicalreads 　 　 dbblockgets 和 consistentgets 的 值 是 请求 数据 缓冲区 中读 的 总 次数 。 physicalreads 的 值 是 请求 数据 时 引起 从 盘中 读 文件 的 次数 。 从 缓冲区 高速缓存 中读 的 可能性 的 高低 称为 缓冲区 的 命中率 ， 计算公式 ： 　 　 HitRatiophysicalredsdbblockgetsconsistentgets 　 　 如果 HitRatio ～ ， 则 应 增大 dbblockbuffers 的 参数值 。 dbblockbuffers 可以 调整 分配 给 缓冲区 高速缓存 的 内存 量 ， 即 dbblockbuffers 可 设置 分配 缓冲区 高速缓存 的 数据 块 的 个数 。 缓冲区 高速缓存 的 总 字节数 dbblockbuffers 的 值 dbblocksize 的 值 。 dbblocksize 的 值 表示 数据 块 大小 的 字节数 ， 可 查询 vparameter 表 ： 　 　 selectnamevaluefromvparameterwherenamedbblocksize 　 　 在 修改 了 上述 数据库 的 初始化 参数 以后 ， 必须 先 关闭 数据库 ， 在 重新启动 数据库 后 才能 使 新 的 设置 起 作用 。 调整 磁盘 IO 　 　 磁盘 的 IO 速度 对 整个 系统 性能 有 重要 影响 。 解决 好 磁盘 IO 问题 ， 可 显著 提高 性能 。 影响 磁盘 IO 的 性能 的 主要 原因 有 磁盘 竞争 、 IO 次数 过多 和 数据 块 空间 的 分配 管理 。 　 　 为 Oracle 数据库 服务器 创建 新 文件 时 ， 不论是 表 空间 所用 的 数据文件 还是 数据 事务 登录 所用 的 日志 文件 ， 都 应 仔细 考虑 数据库 服务器 上 的 可用 磁盘 资源 。 如果 服务器 上 有 多个 磁盘 ， 则 可 将 文件 分散 存储 到 各个 可用 磁盘 上 ， 减少 对 数据库 的 数据文件 及 事务 日志 文件 的 竞争 ， 从而 有效 地 改善 服务器 的 性能 。 对于 不同 的 应用 系统 都 有 各自 的 数据 集 ， 应当 创见 不同 的 表 空间 分别 存储 各自 应用 系统 的 数据 ， 并且 尽可能 的 把 表 空间 对应 的 数据文件 存放 在 不同 的 磁盘 上 ， 这种 从 物理 上 把 每个 应用 系统 的 表 空间 分散 存放 的 方法 ， 可以 排除 两个 应用 系统 竞争 磁盘 的 可能性 。 数据文件 、 事务 日志 文件 分别 存放 在 不同 的 磁盘 上 ， 这样 事务处理 执行 的 磁盘 访问 不 妨碍 对 相应 的 事物 日志 登记 的 磁盘 访问 。 如果 有 多个 磁盘 可用 ， 将 两个 事物 日志 成员 放在 不同 的 磁盘驱动器 上 ， 就 可以 消除 日志 文件 可能 产生 的 磁盘 竞争 。 应 把 一个 应用 的 表 数据 和 索引 数据 分散 存放 不同 表 空间 上 ， 并且 尽量 把 不同 类型 的 表 空间 存放 在 不同 磁盘 上 ， 这样 就 消除 了 表 数据 和 索引 数据 的 磁盘 竞争 。 调整 数据库 服务器 的 回滚段 　 　 回滚 段 是 一个 存储 区域 ， 数据库 使用 该 存储 区域 存放 曾经 由 一个 事务 更新 或 删除 的 行 的 原始数据 值 。 如果 用户 要 回滚 一个 事务所 做 的 改变 ， 那么 数据库 就 从 回滚段 中读 回 改变 前 的 数据 并 使 该 事务 影响 的 行 改变 为 它们 的 原 状态 。 回滚段 控制 着 数据库 处理事务 的 能力 ， 因而 在 数据库 成功 中起 着 关键性 的 作用 ， 不管 数据库 的 其它 部分 设计 得 多 好 ， 如果 它 设计 得 不合理 ， 将会 严重 影响 系统 的 性能 。 建立 和 调整 回滚 段 的 原则 如下 。 分离 回滚段 　 　 分离 回滚 段 是 指 单独 为 回滚段 创建 一个 以上 的 表 空间 ， 使回 滚段 与 数据 字典 、 用户 数据 、 索引 等 分离 开来 。 由于 回滚 段 的 写入 与 数据 和 索引 的 写入 是 并行 进行 的 ， 因此 将 它 分离出来 可以 减少 IO 争用 。 如果 回滚 段 与 数据 不 分离 ， 倘若 要 某个 表 空间 脱机 或 撤消 ， 那么 在 该表 空间 中 的 各个 回滚段 没有 全部 脱机 之前 ， 不能 将 这个 表 空间 脱机 或 撤消 。 而 一旦 该表 空间 不可 用 ， 则 该表 空间 中 的 所有 回滚 段 也 不能 使用 ， 这 将 浪费 所有 分配 的 磁盘空间 。 所以 ， 独立 回滚 段 可 使 数据库 管理 变得 容易 。 回滚 段 的 经常性 收缩 ， 使得 表 空间 的 自由 块 更 容易 形成 碎片 。 分离 回滚段 可以 减少 数据库 表 空间 的 碎片 产生 。 创建 不同 大小 的 回滚 段 群 　 　 对于 一些 联机 事物 处理 ， 他们 一般 是 频繁 地 对 少量 数据 进行 修改 ， 创建 许多 小 的 回滚 段 对 之 有利 。 每 一个 事物 的 入口 项 只能 限于 一个 回滚段 ， 回滚段 应该 充分 大以 容纳 一个 完整 的 事物 处理 ， 因此 对 一些 较大型 事物 ， 需要 较大型 的 回滚段 。 极个别 脱机 处理 事物 会 产生 大量 的 回滚 信息 ， 这时 需要 一个 特大号 的 回滚 段 来 处理 。 根据 这些 理论 ， 在 Oracle 数据库 服务器 中 针对 上述 种 事物 处理 创建 三组 ： 小 事物 组 、 较大 事物 组 、 特大 事物 组等 大小 不同 的 回滚 段 群 ， 并且 将 之 分散 到 个 不同 的 表 空间 上 ， 群内 大小 相同 ， 应 能 满足 该组 事物 处理 的 最大 要求 。 创建 数量 适当 的 回滚段 　 　 一般 回滚段 数量 与 并发 事物 个数 有关 ， 以下 给出 由于 并发 事物 个数 而应 建立 回滚 段 的 参考 数 ： 并发 事物 （ n ） 　 　 　 回滚 段数 n 　 　 　 　 　 　 　 　 ≤ n 　 　 　 　 　 n ≥ 　 　 　 　 　 　 n 调整 ClientServer 模式 下 的 网络 IO 　 　 ClientServer 环境 中 的 应用 处理 是 分布 在 客户 应用程序 和 数据库 服务程序 之间 的 。 在 ClientServer 环境 中 Client 与 Server 之间 的 网络 IO 是 整个 系统 性能 提高 的 瓶颈 ， 一个 客户 应用程序 引起 的 网络 IO 越少 ， 应用 及 整个 系统 的 性能 越 好 。 减少 网络 IO 的 最 重要 的 一条 原则 ： 将 应用逻辑 集中 在 数据库 服务器 中 。 使用 Oracle 数据库 的 完整 约束性 　 　 当为 应用 建表时 ， 应当 为 一些 有 特殊要求 的 数据 加上 适当 的 完整性 约束 ， 这样 就 能 实现 由 数据库 本身 而 不是 应用程序 来 约束 数据 符合 一定 的 条件 。 数据库 服务器端 的 完整 约束 的 执行 操作 是 在 比 SQL 语句 级别 更 低 的 系统 机制 上 优化 ， 它 与 客户端 无关 ， 只 在 服务器 中 运行 ， 不需 在 Client 端 和 Server 端 之间 传递 SQL 语句 ， 有效 地 减轻 网络 IO 负担 。 使用 数据库 触发器 　 　 完整 约束性 只能 实现 一些 较 简单 的 数据 约束条件 ， 对 一些 较 复杂 的 事物 处理 规则 就 无能为力 ， 这时 最好 不要 在 应用程序 中 实施 复杂 的 程序控制 ， 而是 应当 采用 数据库 触发器 来 实施 复杂 的 事物 规则 。 数据库 触发器 能 实现 由 数据库 本身 ， 而 不是 应用程序 ， 来 约束 数据 符合 复杂 的 事物 处理 规则 ， 并且 容易 创建 ， 便于管理 ， 避免 大量 的 网络 IO 。 　 　 例如 ： 将 当前 表 A 中 成为 历史 的 记录 从 A 表中 转储 到 历史 表 B 中 ， 表示 为 Lsbs 。 在 应用程序 中 实现 ： 　 　 　 　 　 　 　 用 数据库 触发器 实现 ： Beign 　 　 　 　 　 　 　 　 　 　 　 　 　 　 Createtriggerdelete 　 UpdateAsetlsbsT 　 　 　 　 　 　 　 AfterupdateoflsbsonA 　 InsertintoB 　 　 　 　 　 　 　 　 　 　 　 Foreachrow 　 SelectfromAwherelsbsT 　 　 　 InsertintoB 　 DeleteAwherelsbsT 　 　 　 　 　 　 selectfromAwherenewlsbsTEnd 　 　 　 　 　 　 　 　 　 　 　 　 　 　 DeleteAwherenewlsbsT 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 Enddelete 　 　 在 应用程序 中 实现 时 ， 所有 的 SQL 命令 请求 传送 的 数据 都 要 通过 网络 在 Client 端 和 Server 端 进行 交换 ， 而 不 像 数据库 触发器 一样 ， SQL 本身 在 Server 端 ， 不 需要 通过 网络 传输数据 。 当 进行 操作 的 数据量 相当 大时 ， 并且 多个 用户 同时 操作 时 ， 通过 在 应用程序 中 实现 复杂 的 控制 ， 必将 增大 网络 IO 的 负荷 ， 使 整个 系统 的 性能 降低 ， 而用 数据库 触发器 能 完全避免 这种 情况 发生 。 使用 存储 过程 、 存储 函数 和 包 　 　 Oracle 的 存储 过程 和 存储 函数 是 命名 的 能 完成 一定 功能 并且 存储 在 Server 端的 PLSQL 的 集合 。 包是 一种 把 有关 的 过程 和 函数 组织 封装 成 一个 数据库 程序 单元 的 方法 。 它们 相对 于 应用程序 的 过程 、 函数 而言 ， 把 SQL 命令 存储 在 Server 端 。 使用 存储 过程 和 存储 函数 ， 应用程序 不必 再 包含 多个 网络 操作 的 SQL 语句 去 执行 数据库 服务器 操作 ， 而是 简单 调用 存储 过程 和 存储 函数 ， 在 网络 上 传输 的 只是 调用 过程 的 名字 和 输出 结果 ， 这样 就 可 减少 大量 的 网络 IO 。 　 　 例如 ： 基表 A 、 B 的 定义 ： namechar ； detailchar ； A 表万 记录 ， 应用程序 将 从 基表 A 中 检索 detail 列 符合 给出 条件 的 记录 ， 并 将 之 插入 基表 B 。 　 　 Declare 　 　 CursorcursorisselectfromApoincursortype ； 　 　 　 　 　 connumberrescharabcd 　 　 Begin 　 InsertintoBvaluespoinnamepoindetailendif 　 　 Forpoinincursorloop 　 　 　 EndloopEndloop 　 　 Forconinloop 　 　 　 　 Commit 　 　 　 IfsubstrpoindetailconresthenEnd 　 　 如果 在 DeveloperFrom 中 按钮 触发器 直接 用 PLSQL 实现 和 把 它 改写 为 一个 Oracle 存储 过程 ， 然后 在 From 中 调用 此 过程 实现 比较 ， 后者 性能 显著 提高 。 　 　 在 考虑 使用 上述 种 方法 时 ： 首先 考虑 使用 完整 约束性 。 对于 数据库 触发器 和 存储 过程 ， 如果 需要 所有 访问 数据库 的 程序 自动 实施 一定 规则 或 检查 ， 那么 使用 数据库 触发器 ； 如果 只 需 对 少数 的 程序实施 一定 的 规则 或 检查 ， 则 可 创建 一个 过程 ， 让 有关 程序 调用 这个 过程 。 应用程序 的 调整 SQL 语句 的 优化 　 　 SQL 语句 的 执行 速度 ， 可以 受 很多 因素 的 影响 而 变化 。 但 主要 的 影响 因素 是 ： 驱动 表 、 执行 操作 的 先后顺序 和 索引 的 运用 。 可以 由 很多 不同 的 方法 间接 地 改变 这些 因素 ， 以 达到 最优 的 执行 速度 。 这里 主要 探讨 当对 多个 表 进行 连接 查询 时应 遵循 的 优化 原则 ： 　 　 用于 连接 的 子句 的 列应 被 索引 、 在 Where 子句 中应 尽量 利用 索引 ， 而 不是 避开 索引 。 　 　 连接 操作 应从 返回 较少行 上 驱动 。 　 　 如果 所 连接 的 表 A 和 B ， A 表 长度 远远 大于 B 表 ， 建议 从 较大 的 A 表上 驱动 。 　 　 如果 Where 子句 中 含有 选择性 条件 WhereNo ， 将 最 具有 选择性 部分 放在 表达式 最后 。 　 　 如果 只有 一个 表有 索引 ， 另 一表 无 索引 ， 无 索引 的 表 通常 作为 驱动 表 。 如 A 表 的 No 列以 被 索引 ， 而 B 表 的 No 列 没 被 索引 ， 则 应当 B 表 作为 驱动 表 ， A 表 作为 被 驱动 表 。 　 　 若 用于 连接 的 列 和 Where 子句 中 其他 选择 条件 列均 有 索引 ， 则 按 各个 索引 对 查询 的 有效性 和 选择性 分别 定出 级别 ， 结合 表中 具体 数据 构成 情况 ， 从中 选出 优化 路径 ， 一般 需要 考虑 ： 子句 中 哪些 列 可以 使用 索引 、 哪些 索引 具有 唯一性 及 被 查询 表行 数目 等 。 建立 和 使用 视图 、 索引 　 　 利用 视图 可以 将 基表中 的 列 或行 进行 裁减 、 隐藏 一部分 数据 ， 并且 能够 将 涉及 到 多个 表 的 复杂 查询 以 视图 的 方式 给出 ， 使 应用 程序开发 简洁 快速 。 利用 索引 可以 提高 查询 性能 ， 减少 磁盘 IO ， 优化 对 数据表 的 查询 ， 加速 SQL 语句 的 执行 。 但 任何 时候 建立 索引 都 能 提高 性能 ， 何时 建立 索引 应当 遵循 以下 原则 ： 该表 常用 来 在 索引 列 上 查询 ， 该表不常 更新 、 插入 、 删除 等 操作 ， 查询 出来 的 结果 记录 数应 控制 在 原表 的 ～ 。 使用 Oracle 的 数组 接口 　 　 当 一个 客户 应用程序 插入 一行 或用 一个 查询 来 向 服务器 请求 某 行时 ， 不是 发送 具有 单个 行 的 网络 包 ， 而是 采用 数组 处理 ， 即 把 要 插入 的 多个 行 或 检索 出 的 多个 行 缓冲 在 数组 中 ， 然后 通过 很少 的 几个 包 就 可 在 网上 传送 这些 数组 。 例如 ， 一个 给定 的 Select 语句 返回 行 数据 ， 每行 平均 大小 为个 字节 ， 数据包 的 大小 为 kB ， 而 数组 大小 参数 arraysize 设置 为 ， 则 需 从 服务器发送 个 数据包 到 客户机 。 如果 简单 地 把 arraysize 设置 为 ， 那么 同样 的 操作 只 需要 传送 个 数据包 。 这样 就 减少 了 网络 的 传输 量 ， 提高 了 所有 应用 的 性能 。 总结 　 　 我们 在 开发 应用程序 时 ， 遵循 上述 的 方法 和 原则 ， 对系统 进行 调整 ， 收到 了 令人满意 的 效果 。 但是 应当 指出 ， 由于 客户机 、 网络 、 服务器 这个 相互依存 的 组成部分 都 必须 调整 和 同步 才能 产生 最佳 的 性能 ， 因此 还应 根据 系统 的 具体情况 ， 具体分析 和 调整 。 作者简介 ： 张冬 （ ～ ） ， 男 ， 研究生 ， 主研 方向 ： 数据库 作者 单位 ： 张冬 　 姚耀文 （ 华南 理式 大学 计算机 工程 与 科学系 ， 广州 ） 　 　 　 　 　 王鸿 （ 广州 金融 高等 专科学校 信息 系 ， 广州市 ） 参考文献 BobrowskiSMMasteringOracleClientServerComputing 北京 ： 电子 工业 出版社 孙宏昌 Oracle 数据库管理员 教程 北京 ： 电子 工业 出版社 ， 北方交通大学 自动化 系统 研究所 Oracle 使用 技巧 北京 ： 科学出版社 ， 收稿 日期 ：