计算机 研究 与 发展 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 　 Vol 　 No 　 P 部分 三维 算法 的 最优 线性 阵列 设计 杨超峰 　 胡铭 曾 摘 　 要 ： 自 年代 末 ， 处理器 阵列 研究 的 一个 新 方向 是 设计 线性 阵列 在 这方面 ， Lee 和 Kedem 作出 了 开创性 的 工作 ， 他们 提出 了 一个 线性 阵列 设计 框架 但是 ， 目前 还 没有 一个 有效 的 设计 方法 在 文中 ， 提出 了 一个 线性 阵列 的 设计 方法 ， 基于 它 ， 线性 阵列 的 设计者 通过 分析 算法 对应 的 数据 依赖图 （ DG ） 的 最长 路径 ， 就 可以 获得 可行 的 设计 该法 适用 于 所有 三维 算法 ， 对于 满足 特定条件 的 算法 ， 能 设计 出 运算 时间 最优 的 阵列 最后 ， 以 矩阵 乘 和 传递 闭包 为例 ， 文中 演示 了 该法 的 应用 关键词 ： Systolic 阵列 ， VLSI ， 处理器 阵列 ， 线性 处理器 阵列 分类号 ： TP ； TPSYNTHESIZINGCOMPUTATIONTIMEOPTIMALLINEARPROCESSORARRAYSFORSOMETHREEDIMENSIONALALGORITHMSYANGChaoFeng ， HUMingZengDepartmentofComputerScienceandEngineeringHarbinInstituteofTechnologyHarbinAbstract 　 SincethelatesonetrendofresearchonprocessorarraysistodesignlinearprocessorarraysLeeandKedemdidthepioneersworkinthisfieldastheyproposedaframeworkfordesigninglineararraysTheirframeworkconsistsofthreepartsthefirstpartisalineararraymodelthesecondpartusespairsHSwhereHandSarevectorstodenotedesignsandthethirdpartisagroupofnecessaryandsufficientconditionsforpairsHSThusfartherearenopracticaldesignmethodologiesproposedintheliteratureInthepaperhereadesignmethodologyispresentedforthreedimensionalalgorithmsThismethodologyisbasedontwoobservationsfirstgivenathreedimensionalalgorithmdesignerscandirectlydetermineseveralfeasiblepairsHSbyanalyzingthelongestpathofthedependencegraphDGofthealgorithmssecondifthelongestpathsatisfiesacertainconditiononeofthesepairsHSiscomputationtimeoptimalInsummarythismethodologycanproducecomputationtimeoptimaldesignforsomethreedimensionalalgorithmsFinallythematrixmultiplicationandthetransitiveclosureproblemaretakenasexamplestoillustratetheapplicationofthemethodologyKeywords ： systolicarrayVLSIprocessorarraylinearprocessorarray ▲ 　 引 　 　 言 　 　 对于 大 运算量 的 问题 ， 如 信号处理 、 图像处理 等 ， 处理器 阵列 是 很 好 的 解决方案 ［ ］ 一直 以来 ， 人们 设计 的 是 二维 阵列 ， 到 年代 末 ， 出现 了 一个 新 趋势 ， 那 就是 设计 线性 阵列 ［ ］ ， 所谓 线性 阵列 ， 并 不仅仅 是 一些 处理单元 连成 一维 结构 ， 还 要求 仅 在 阵列 两端 有 IO 端口 它 有 两个 突出 的 优点 ： ① 仅 在 阵列 两端 有 IO 端口 ， 其 复杂性 低 ， 易于 与 通用 处理器 或 其它 部件 集成 ； ② 没有 时钟 扭斜 clockskew 问题 ， 时钟 同步 容易 实际上 ， 二维 阵列 和 线性 阵列 只是 形象 的 叫法 ， 严格 地说 ， 二维 阵列 是 三维 算法 到 二维 阵列 的 映射 ， 线性 阵列 是 三维 或 三维 以上 算法 到 一维 阵列 的 映射 线性 阵列 看起来 是 二维 阵列 的 简单 扩展 ， 实际上 ， 线性 阵列 的 设计 要 困难 地多 ， 人工 设计 几乎 不 可能 ， 因为 需 将 算法 作 超低 维 的 映射 ， 人工 难以 保证 映射 的 正确性 ， 更 不要 说 最优化 设计 了 　 　 Lee 和 Kedem 在 系统化 设计 方面 作出 了 开创性 的 工作 ［ ］ ， 他们 提出 了 一个 线性 阵列 的 设计 框架 ， 包括 一个 线性 阵列 的 结构 模型 以及 一组 正确 设计 应 满足 的 条件 但是 ， 至今 还 没有 一个 有效 的 系统化 设计 方法 　 　 本文 提出 了 一个 设计 方法 ， 对于 一类 满足 特定条件 的 三维 算法 ， 它 能 设计 出 运算 时间 最优 的 阵列 在 后文 ， 首先 简要地 论述 Lee 和 Kedem 的 设计 框架 ， 然后 论述 本文 的 方法 ， 最后 是 两个 设计 示例 　 线性 阵列 的 设计 框架 　 　 专用 运算 阵列 求解 的 对象 是 P 重 循环 的 算法 ， 提取 算法 的 所有 迭代 间 数据 依赖 向量 ［ ］ ， 构成 依赖 矩阵 D 如下 从而 ， 算法 可以 用 迭代 空间 J 、 依赖 矩阵 D 、 每个 迭代 的 运算 F 来 刻画 Ddd … dk 　 　 VV … Vk 　 　 di 是 依赖 向量 ， Vi 是 对应 di 的 变量 注意 ： k 个 Vi 及 di 可以 重复 因为 一个 变量 可以 有 多个 依赖 向量 ， 不同 变量 可以 有 相同 的 依赖 向量 　 　 Lee 和 Kedem 提出 了 一个 线性 阵列 模型 ［ ］ 图 ， 该 模型 没有 通常 线性 计算 系统 所 具有 的 局部 存储器 、 高速 数据链 路 等 机制 ， 避免 了 预装 入 数据 、 排出 结果 、 存储器 寻址 、 链路 控制 所 需 的 复杂 的 控制 逻辑 ， 从而 ， 易于 VLSI 实现 其 主要 特点 是 ： 对应 D 中 的 每个 di ， 阵列 上 都 有 一个 数据链 路 Ai ， 供 Vi 输入 并 在 阵列 中 传输 图中 只 画出 了 两个 链路 应该 有 k 个 ， 其它 的 与 它们 之一 相同 ， 或者 从左到右 ， 或者 从右到左 bi 对应 的 方框 是 移位 寄存器 组 bi 是 其 长度 图 　 线性 阵列 模型 　 　 Lee 和 Kedem 将 线性 阵列 的 设计 归结为 寻找 两个 行向量 H 和 S ， 由 它们 将 算法 映射 到 阵列 上 ， 具体 地 ， 迭代 点 I ∈ J 将 在 HI 时刻 在 处理单元 SI 上 运算 举例来说 ， 在 图 中 ， H ， S ， 迭代 点 IT 将 在 时刻 HI 在 处理单元 SI 上 运算 　 以 N 为例 ， 此时 HS 　 　 　 　 　 　 　 　 　 　 　 　 　 　 图 　 传递 闭包 的 时空 映射 图 　 　 对于 一个 算法 ， 确定 了 H 和 S 后 ， 其 相应 的 线性 阵列 就 确定 了 ： 　 　 ① PE 个数 ： MmaxSII ∈ JminSII ∈ J 　 　 ② 链路 Ai ： 设其 对应 依赖 向量 di ， 则 移位 寄存器 组 长度 biHdiSdi 若 Sdi 则 方向 从左到右 ， 否则 ， 从右到左 　 　 ③ 运算 时间 TmaxHII ∈ JminHII ∈ J 后文 忽略 常数 实际上 ， 它 是 块 流水 时间 即 连续 两个 任务 的 运算 时间 间隔 ， 因为 专用 运算 阵列 通常 应用 于 连续 任务 流 的 场合 ， 此时 运算 时间 等于 块 流水 时间 　 　 Lee 和 Kedem 证明 了 H 和 S 应 满足 ： ik 　 　 　 Hdi 　 　 　 　 　 　 不 存在 两个 迭代 点 II 满足 　 　 HdISdi 为 大于 的 整数 　 　 　 　 若 II ） ≠ mdim 是 整数 则 HIISdi ≠ SIIHdi 　 　 　 　 条件 式 要求 若 I 依赖于 I ， I 要 比 I 后 计算 ， 这是 正确 计算所 必需 的 条件 式 要求 没有 两个 迭代 点 在 同一 时刻 映射 到 同一 处理单元 ， 因为 一个 处理单元 一个 时刻 仅能 处理 一个 运算 对应 一个 变量 仅 有 一个 链路 ， 若该 变量 的 两个 数据 要 同时 输入 阵列 ， 则 出现 了 输入 冲突 ， 满足条件 式 保证 了 不会 出现 这种 情况 　 　 　 　 　 文献 ［ ］ 提出 了 GPMgeneralparametermethod ， 该 方法 使用 一组 不同 的 参数 ， 不过 ， 它们 与 H 和 S 是 等价 的 　 　 设计 线性 阵列 的 基本 过程 是 ： 按照 一定 的 策略 枚举 二元 组 HS ， 对 每 一 HS ， 用 条件 ～ 式 判定 是否 可行 ， 从而 获得 最优 解 但是 ， 整个 过程 的 计算 复杂性 很 高 ， 其 原因 是 判断 是否 满足条件 、 式 的 计算 量 极大 ， 因为 要 枚举 任意 两个 迭代 点 因而 ， 至今 文献 中 还 没有 有效 的 设计 方法 在 本文 ， 将 提出 一个 设计 方法 ， 它 针对 于 三维 算法 ， 对于 满足 特定条件 的 算法 ， 能 设计 出 运算 时间 最优 的 阵列 　 H 和 S 的 确定 　 　 定理 条件 式 被 条件 、 式 蕴涵 　 　 证明 用 反证法 假设 条件 式 不 满足 ， 那么 ， 存在 两个 迭代 点 II ， 满足 HII 且 SII 设 Sdi ≠ ， 若 IImdi ， 则 HIImHdiHdi ， 条件 式 不 满足 ； 否则 ， II ≠ mdi ， 而 HII 且 SIIHIISdi 且 SIIHdiHIISdiSIIHdi ， 则 条件 式 不 满足 因此 假设 错误 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 证毕 　 　 根据 该 定理 ， 判定 H 和 S 的 正确性 仅 需 条件 、 、 式 　 　 本文 的 方法 针对 于 三维 算法 实际上 ， 限于 三维 算法 的 约束 并 不 严格 ， 因为 三维 以上 算法 很少 ， 况且 可以 将 它们 分割 为 一系列 三维 的 子 任务 来 求解 对于 三维 算法 ， 可以 得到 一个 基 向量 组有 个 向量 ， 设为 ddd ， 算法 的 所有 依赖 向量 能 用 它们 正整 系数 线性组合 ［ ］ ， 从而 ， 可以 将 有 个 以上 不同 依赖 向量 的 算法 规整 化为 仅 有 个 不同 的 依赖 向量 这样一来 ， 就 简化 了 H 和 S 应 满足 的 条件 ， 特别 是 条件 式 ， 仅 剩下 个 不等式 分别 对应 ddd 　 　 下文 ， 首先 在 定理 中 提出 确定 H 和 S 的 方法 ， 然后 证明 对于 满足 一定 条件 的 算法 ， 由 该法 确定 的 H 和 S 是 运算 时间 最优 的 　 　 算法 可用 数据 依赖图 DG 等价 表示 ［ ］ ， 它 是 一个 有向图 ， 其 节点 集是 J ， 边 是 依赖 向量 ， 若 I 以 依赖 向量 di 依赖于 I ， 则 II 间 有 一条 对应 di 的 边 算法 的 运算 时间 决定 于 DG 的 最长 路径 ， 设 最长 路径 为 NdNdNd 那么 运算 时间 TmaxHII ∈ JminHII ∈ JNHdNHdNHd 注意 ： 最长 路径 应是 加权 最长 路径 ， 因为 不同 边 的 运算 时间 不同 ， 即权 不同 对应 依赖 向量 di 的 边 ， 其权 为 Hdi 确定 加权 最长 路径 的 方法 为 ： 若 NmaxC 所有 DG 的 路径 CdCdCd ， 同理 ， N 对应 C ， N 对应 C ， 则 NdNdNd 是 加权 最长 路径 后文 出现 的 NNN 含义 与 此 相同 　 　 定理 设 NmaxNNN 那么 映射 HS 是 正确 的 ， 其中 HDNSD 　 　 证明 条件 、 式 显然 满足 下面 证明 满足条件 式 ， 对于 DG 中 的 任意 两个 迭代 点 I ， I ， II 可以 表示 为 CdCdCdCCC 是 整数 由 NNN 的 定义 可知 CCC ≤ N 　 　 对于 d 其中 ， CC 不 同时 为 不然 IImd 要 满足 　 　 　 　 因为 C ≤ N ， 不等号 显然 成立 同理 ， 对于 d 有 C ≠ （ NC ； 对于 d 有 C ≠ NCC 该 两式 的 不等号 成立 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 证毕 　 　 因为 个 依赖 向量 可以 任意 排列 来 构成 D ， 即 D 有 P 种 选择 设 iNNN 中 最小值 的 下标 jNNN 中 最大值 的 下标 ， kNNN 中间 值 的 下标 ， 取 Ddjdkdi ， 那么 ， 按照 此 D 和 定理 确定 的 H 和 S ， 运算 时间 TNiHdiNjHdjNkHdkNiNjNjNk ≤ NLNSNL 其中 NLmaxNNNNSminNNN 　 　 下面 证明 ： 若 NNN 中 某 两个 相等 且 它们 比 另 一个 大 ， 即 NjNkNLNSNi 那么 ， 上面 的 运算 时间 是 最优 的 定理 满足 该 条件 的 算法 有 矩阵 乘 、 传递 闭包 、 矩阵 逆 、 最短 路径 等 一系列 涉及 矩阵 运算 的 算法 　 　 引理 HS 与 HS 是 时空 复杂性 等价 的 　 　 证明 这 只不过 将 所有 数据链 路 的 方向 颠倒 ， 详细 证明 过程 略 　 　 推论 Sd ， Sd ， Sd 的 符号 只有 两种 情况 ， 全正 或 两正 一负 　 　 设 HdSdkHdSdkHdSdk ， 关于 kkk 有 下面 的 结论 　 　 引理 k ， k ， k 两 两 不 相等 　 　 证明 用 反证法 ， 不妨 设 kk ， 即 HdSdHdSdHdSdHdSd 取 两个 迭代 点 I ， I 满足 IImd ， 那么 II ≠ md 但是 HIISdHmdSdmHdSdSmdHdSIIHd ， 因而 条件 式 不 满足 ， 假设 错误 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 证毕 　 　 定理 运算 时间 T ≥ NNN 的 两者 之积 再 加上 它们 之 和 　 　 证明 运算 时间 TNHdNHdNHdNkSdNkSdNkSd 　 　 由 条件 式 可得 下面 个 不等式 　 　 对于 d ， 其中 CC 不 同时 为 ： 　 　 　 同理 ， 对于 dCC 不 同时 为 ： CkkSd ≠ CkkSd 　 　 　 　 对于 dCC 不 同时 为 ： CkkSd ≠ CkkSd 　 　 　 　 由 推论 ， SdSdSd 的 符号 只有 两种 情况 ， 全正 或 两正 一负 ： 　 　 若 全正 ， 不妨 设 kminkkk ， 由 引理 kkkk 考虑 式 ， kkSdN 或 kkSdN 否则 ， 根据 NNN 的 定义 ， 可取 CkkSdCkkSd 使得 式 不 成立 不妨 设 kkSdN ， 由于 kkSd 则 kkSdN ， 则 kSdNkSd ， 那么 T ≥ NkSdNNkSdNkSd ≥ NNNNN 　 　 若有 一个 为 负 ， 不妨 设为 Sd 即 k 又 不妨 设 kk 由 引理 知 k ≠ k 考虑 式 kkSdN 或 kkSdN ， 分 情况 讨论 ： 　 　 当 kkSdN 时 ， 与 全正时 相同 　 　 当 kkSdN ， 由于 kkSd 则 kkSdNkSdNkSd 那么 T ≥ NkSdNkSdNNkSdNkSdNkSdNNNkSdN 注意 NkSd 　 　 若 NSdNSd ≥ NSd 则 NkSdNkSd ≥ NkSdNkSd ≥ kNSdNSdNSd ≥ kNSdN 因而 T ≥ NNNN 　 　 若 NSdNSdNSd 由式 kkSdN 或 kkSdN 不妨 设 kkSdN 由于 kkSd （ kkSdNkSdNkSd 那么 T ≥ NNkSdNkSdNkSdNNNNkSdkNSdNSd 由于 kNSdNSdkNSd ≥ N 因此 TNNNNkSdN ≥ NNNN 　 　 综上所述 ， 证得 该 定理 　 　 由 定理 ， 若 NNN 满足 某 两个 相等 且 它们 比 另 一个 大 ， 则 运算 时间 T ≥ NLNSNLNS 而 定理 的 运算 时间 T ≤ NLNSNL 偏差 小于 NL 通常 NS 与 问题 的 大小 有关 ， 远大于 事实上 ， 定理 仅 是 一个 下限 ， 不 一定 能取 到 ， 例如 ， 当 NNN 时 ， 定理 的 设计 是 绝对 最优 的 因而 ， 可 认为 定理 的 设计 是 运算 时间 最优 的 　 　 综上所述 ， H 和 S 的 确定 归纳 为 ： 计算 所有 依赖 向量 ， 找到 它们 的 基 向量 组 ddd ； 获得 DG 的 加权 最长 路径 ， 设 iNNN 中 最小值 的 下标 jNNN 中 最大值 的 下标 ， kNNN 中间 值 的 下标 ， 取 Ddjdkdi ， 再 确定 HNjDSD 　 设计 示例 　 　 矩阵 乘 N × N 矩阵 　 　 矩阵 乘是 最 规整 的 算法 ， 其 DG 是 一个 立方体 ， 其个 依赖 向量 为 dTdTdT 最长 路径 为 NdNdNd ， 取 Dddd ， 则 D 为 单位矩阵 ， HNDN ， SD 运算 时间 TNNN × NNN 该 设计 已 由 文献 ［ ］ 提出 ， 不过 它 没能 证明 它 是 最优 的 　 　 N × N 矩阵 的 传递 闭包 　 　 传递 闭包 较 复杂 ， 几乎 所有 处理器 阵列 的 系统化 设计 方法 都 以 它 为 演示 示例 ， 其 串行 算法 WarshallFloyd 算法 如下 ： 　 　 forkijtoN 　 　 　 　 C ［ ij ］ C ［ ij ］ ∨ C ［ ik ］ ∧ C ［ kj ］ 　 　 endfor 　 　 直接 由 上面 的 算法 得到 的 DG 很 不 规整 ， 文献 ［ ］ 将 其 规整 化 ， 如图 a 和 图 b ， 图 a 是 其 每 一个 ij 平面 的 结构 ， 图 b 是 两个 相邻 ij 平面 间 的 结构 由此可见 ， 共有 个 依赖 向量 ： dTdTdTdTdT 图 　 传递 闭包 的 DG 设计 过程 如下 ： 　 　 ① 因为 dddddd 可以 进一步 改造 DG ， 如图 c ， 在 除 最后 一个 kN 外 的 所有 ij 平面 上 增加 一些 迭代 点 阴影 内 ， 它们 的 作用 是 将 dd 分别 用 dd 和 dd 替代 ， 从而 依赖 向量 仅剩 ddd 　 　 ② 最长 路径 为 T → NT → NNT → NT → NNT → NNNT ， 其 长度 为 NdNdNd ， 则 NNNNNN 那么 ijk 　 　 H ［ N ］ DN ， SD 　 　 运算 时间 TN × NN × NNN 　 　 ③ PE 结构 ： 如图 ， 有个 数据链 路 AAA 分别 对应 ddd 其中 ， 链路 AbHdSd ， 从左到右 ； 链路 AbHdSd ， 从左到右 ； 链路 AbHdSdN ， 从右到左 另外 ， PE 内 还 应有 一个 控制器 ， 图是 时空 映射 图 ， 它 集中体现 了 各 PE 在 各个 时刻 要 完成 的 操作 ， 是 控制器 的 设计 基础 至于 设计 细节 ， 本文 不再 赘述 图 　 传递 闭包 的 PE 结构 　 总 　 　 结 　 　 本文 提出 了 一个 针对 于 三维 算法 的 线性 阵列 的 设计 方法 对于 满足 一定 条件 的 算法 ， 该 方法 设计 出 的 阵列 是 运算 时间 最优 的 最后 ， 以 矩阵 乘 和 传递 闭包 为例 演示 了 本文 方法 的 使用 ■ 基金项目 ： 本 课题 得到 国家 “ 八 六三 ” 计划 基金 资助 项目编号 作者简介 ： 杨超峰 ， 男 ， 年生 ， 博士 研究生 ， 主要 研究 方向 为 高性能 计算 、 高性能 体系 结 　 　 　 　 　 　 构等 　 　 　 　 　 胡铭 曾 ， 男 ， 年月生 ， 教授 ， 博士生 导师 ， 主要 研究 方向 为 高性能 计算 、 高 　 　 　 　 　 　 性能 体系结构 、 网络 计算 等 作者 单位 ： 杨超峰 （ 哈尔滨工业大学 计算机科学 与 工程系 　 哈尔滨 　 ） 　 　 　 　 　 胡铭 曾 （ 哈尔滨工业大学 计算机科学 与 工程系 　 哈尔滨 　 ） 参考文献 ： ［ ］ KungHTWhysystolicarchitectureComputer ～ ［ ］ DarteARissetTRobertYSynthesizingsystolicarraysSomerecentdevelopmentsInIntlConfonApplicationSpecificArrayProcessorsIEEECSPress ～ ［ ］ LeePKedemZMSynthesizinglineararrayalgorithmsfromnestedforloopalgorithmsIEEETransonComputers ～ ［ ］ BanerjeeUAnintroductiontoaformaltheoryofdependenceanalysisJournalofSupercomputing ～ ［ ］ GanapathyKWahBWOptimalsynthesisofalgorithmspecificlowerdimensionalprocessorarraysIEEETransonParallelandDistributedSystems ～ ［ ］ TzenTHNiMDependenceuniformizationAloopparallelizationtechniqueIEEETransonParallelandDistributedSystems ～ ［ ］ ShangWChenZOnuniformizationofaffinedependencealgorithmsIEEETransonComputers ～ ［ ］ KungSYVLSIArrayProcessorsEnglewoodCliffsNJPrenticeHall ～ ［ ］ KungSYLoSCLewisPSOptimalsystolicdesignforthetransitiveclosureandtheshortestpathproblemsIEEETransonComputersC ～ 收稿 日期 ： 修稿 日期 ：