计算机 应用 ComputerApplications 年 第卷 　 第期 Vol 　 NoWeb 查询 的 关系数据库 模型 李绍华 　 　 摘 　 要 　 本文 提出 了 一种 对 Web 查询 计算 的 新 模型 ， 基于 这一 模型 ， 可以 设计 出 类似 数据库 SQL 语言 的 Web 查询语言 ， 从而 可 针对 Web 的 结构 和 内容 加以 查询 。 文中 同时 比较 了 Web 数据 查询 与 标准 数据库系统 查询 的 区别 。 　 　 关键词 　 万维网 ， 关系数据库 ， 查询 ， URLTHERATIONALDATABASEMODELFORWEBQUERIESLiShaohuaComputerCenterofGuangdongBusinessCollegeGuangdong ． Guangzhou 　 　 Abstract 　 ThispaperproposedanewmodelforWebqueryandcomputationWebSQLlikequerylanguagecanbedesignedbasedonthismodelThedifferencesbetweenWebqueryandstandarddatabasequeryarealsodiscussed 　 　 Keywords 　 WorldwidewebRationaldatabaseQueryURL 　 Web 查询 的 问题 　 　 万维网 （ WWW ） 是 一个 巨大 的 、 分布式 异构 文档 信息库 ， 这些 文档 通过 超文本 链接 （ hypertextlink ） 建立 起 联系 。 从 万维网 中 快速 检索 信息 的 工具 与 技术 发展 甚快 ， 但 绝大多数 均 将 万维网 看作 一个 传统 的 数据库 ， 以便 采用 诸如 SQL 、 Datalog 之类 的 查询语言 ， 目的 是 方便 用户 的 查询 。 然而 ， Web 并 不是 一个 数据库 ， 对 它 的 查询 与 标准 的 数据库 本质 上 是 极其 不同 的 。 Web 与 标准 数据库 之间 的 区别 主要 表现 在 以下 几个 方面 ［ ］ ： 　 　 缺乏 并发 控制 ； 　 　 数据 存取 能力 有限 ； 　 　 高度 自治 ； 　 　 异构 性 ； 　 　 缺乏 结构性 。 　 　 Web 处理 并发 控制 的 能力 非常 弱 。 当 设计者 要 对 某 一 文档 进行 修改 操作 时 ， 修改 期间 应能 对 文档 加锁 以 防止 他人 来 访问 ， 而 这 几乎 无法 实现 ； 同时 ， Web 也 没有 事务处理 机制 ， 这 就 在 原理 上 使得 很多 的 查询 不能 在 一 有限 的 时间 内 进行 计算 。 例如 ， 当 我们 通过 链接 查询 到 某 一 文档 ， 而 此时 某人 正在 该 文档 末尾 处 添加 新 的 内容 ， 若 其 添加 速度 比 读取 速度 快 ， 则 这 一 计算 便 无法 结束 了 。 要 使 Web 具有 并发 控制 机制 取决于 隔离 对 动态 修改 的 网页 的 查询 并 提供 一个 概念 上 的 静态 视图 。 　 　 目前 ， 对 Web 文档 的 查询 基本上 还是 导航 式 的 。 方法 之一 是 浏览 （ Navigation ） ， 即 从 一 初始 URL 出发 ， 一级 一级 地 进行 浏览 ； 方法 之二 是 关键词 查询 （ Query ） ， 即 通过 诸如 Yahoo 、 Altavista 这 一类 的 索引 服务器进行 搜索 。 这 类 索引 服务器 并 没有 保证 对 每 一个 文档 建立 起 索引 ， 也 没有 保证 这一 索引 的 通用性 ， 基本上 只是 提供 对 预先 计算 过 的 数据 进行 寻址 。 这一 限制 对 查询 的 易 操作性 影响 很大 。 如 要 查询 “ 是否 存在 文档 d ” 这样 一个 问题 ， 便是 不可 计算 的 ， 因为 索引 服务器 无法 检查 所有 文档 ， 而且 还要 保证 没有 丢失 发生 。 此外 ， 这 两种 广为 采用 的 方法 均 无法 探索 出 Web 文档 网络 的 内在 结构 和 拓扑 关系 。 如果 我们 想 查找 具有 以下 关键词 的 文档 ： “ IBM ” 、 “ personalcomputer ” 、 “ price ” ， 从 效率 上 来说 ， 我们 应当 先 进行 Navigation 操作 至 IBM 主页 （ wwwibmcom ） ， 然后 从 该 服务器 出发 根据 以上 关键词 再 进行 Query 操作 ， 然而 ， 目前 的 工具 还 不能 将 这 两种 操作 统一 起来 ， 原因 在于 Navigation 操作 是 用于 构建 索引 的 ， 而 Query 操作 是 对 已 构建 好 的 索引 进行 搜索 。 　 　 GeorgeAMihaila （ UniversityofTorontoCanada ） 等 设计 了 一种 基于 万维网 的 类 SQL 语言 ： WebSQL 。 WebSQL 着眼于 文档 的 拓扑 结构 ， 将 Navigation 和 Query 两种 操作 溶于 一体 ， 具 对于 静态 文档 和 动态 文档 都 是 可 计算 的 。 　 　 本文 探讨 Web 的 关系 数据模型 。 利用 诸如 Java 语言 对 这 一 模型 加以 实现 ， 便 可以 在 万维网 上 进行 类似 标准 数据库 的 SQL 查询 。 　 Web 的 关系 模型 　 　 从 全局 的 角度看 ， Web 的 模型 化 包括 对 Web 本身 的 模型 化 、 Web 站点 结构 的 模型 化 、 Web 页 的 内部结构 模型 化 ， 甚至 对 Web 站点 内容 的 粒度 划分 也 是 一个 很 技术性 的 问题 。 　 超文本 结构 　 　 Web 文档 之间 通过 超文本 链 进行 联接 ， 巨大 的 万维网 信息库 可以 抽象 为 一个 虚图 ［ ］ ： 图 结点 （ node ） 是 Web 对象 ， 该 对象 具有 统一 资源 识别 符 URL 、 HTML 文档 标题 （ title ） 及 内容 （ content ） 、 文档 长度 （ length ） 、 类型 （ type ） 、 最新 修改 日期 （ modif ） 等 属性 。 因此 ， 我们 可以 将 一个 Web 对象 看作 是 “ 文档 关系 表 ” 的 一个 元组 ： 　 　 N ［ idtitlecontenttypelengthmodif … ］ 　 　 其中 ， id 代表 URL ， 因此 可以 定义 为主 码 PK ， 而 其它 属性 可以 是 Null 值 ， URL 的 数据格式 如下 ： 　 　 URLProtocolHostPathFilename ［ location ］ 　 　 HTML 文档 之间 通过 锚 标志 （ Anchortag ） 建立 链接 关系 ， 其 格式 如下 ： 　 　 AHREFDestURLAnchorTextA 　 　 我们 可以 将 每个 链 定义 为 “ 锚 关系 ” 中 的 一个 元组 ： 　 　 L ［ sourcedestinationlabel … ］ 　 　 其中 ， source 和 destination 是 后 文所 定义 的 Oid 类型 。 　 　 索引 服务器 往往 提供 一个 表 （ Form ） 格式 的 用户 接口 ， 用户 在 Form 中 填入 必要 的 参数 ， 索引 服务器 依据 参数 之间 所 构成 的 条件 进行 搜索 。 因此 ， 索引 服务器 也 可以 模型 化为 具有 “ 参数 化链 ” 的 结点 。 参数 化链 同样 可以 定义 为 一个 关系 元组 ， 其 结构 与 L 相似 ， 不过 要 附加 一个 参数 集 （ param — set ） 属性 ： 　 　 P ［ param — setparam — nameparam — val ］ 　 关系 　 　 下面 先 定义 两种 基本 的 数据类型 。 　 　 简单 类型 　 令 D 代表 无限 数据 值集 ， T 为 简单 类型 的 有限 集 ， 其域 是 D 的 子集 。 一个 元组 类型 记 作 ［ at … antn ］ ， 其中 ai 是 属性 ， 定义 在 简单 类型 ti 上 ， i … n 。 类型 t 的 域 记作 domtD 。 　 　 对象 类型 　 令 A 代表 属性 名 有限 集 ， 简单 类型 Oid ∈ T 为 对象 识别 符 。 一个 对象 类型 Obj 是 一个 元组 ： Obj ［ at … antn ］ ， ai ∈ Ai … n 代表 对象 类型 的 属性 。 　 　 对象 类型 的 域 可以 从 其 属性 域 中 导出 ： 　 　 domObj ［ av … anvn ］ vi ∈ domtii … n 　 　 其中 vi 代表 该 元组 ai 属性 的 值 。 　 　 下面 我们 可以 定义 两种 对象 类型 Node 和 Link 　 　 Node ［ idOid … aiti … ］ Link ［ fromOidtoOid … bjtj … ］ 　 　 其中 id ， from ， to 以及 ai ， bj 均 为 A 的 元素 ， 而 ti ， tj 是 T 的 元素 。 　 　 Document 关系 和 Anchor 关系 　 在 前文 所述 的 Web 模型 中 ， 文档 映射 为 Node 对象 ， 超文本 链接 映射 为 Link 对象 。 其中 ， 对象 识别 符 Oid 便是 统一 资源 识别 符 URL ， 所有 Node 对象 构成 一个 文档 关系数据库 表 Document ， 所有 Link 对象 构成 一个 锚 关系数据库 表 Anchor ， 如表 所示 ： 表 DocumenturlTitleTextlengthTypemodifhttpwww … TitleTextTexthttpwww … TitleTextTexthttpwww … TitleTextText … … … … … … AnchorSourceLabeldestinationhttpwww … Labelhttpwww … httpwww … Labelhttpwww … httpwww … Labelhttpwww … … … … 　 　 Base 关系 　 当 我们 通过 浏览器 进行 Web 浏览 时 ， 还会 充分利用 一些 附加 的 数据 ， 如 bookmarks 、 本地 文件 等 ， 这 类 数据 常用 来 初始化 Web 查询 的 出发点 。 为此 ， 我们 定义 一个 Base 关系 将 这些 相关 信息 包含 进去 。 Base 关系 与 前述 其它 关系 的 区别 在于 ： Base 关系 是 一定 可以 到达 的 。 　 Web 数据库 　 　 综上所述 ， 可以 将 Web 数据库 定义 为 ： Web 数据库 由 有限 个 Base 关系 DBR … Rn 及 两个 附加 关系 N 和 L 所 组成 ， 其中 N 为 node 对象 ， L 为 link 对象 ， 并且 ： 　 　 id 是 关系 N 中 的 PK ； 　 　 L 中 的 source 属性 和 N 中 的 id 属性 具有 引用 完整性 约束 要求 。 　 Web 查询 的 具体化 　 　 基于 以上 的 Web 数据库 模型 ， 假设 Document 和 Anchor 是 实际 存在 的 关系 ， 我们 便 可以 用 SQL 语言 来 表达 我们 的 查询 要求 。 例如 ， 若 我们 要 查找 出 Web 文档 中 具有 相同 的 title 的 那些 URL ， 则 可 写出 如下 的 查询 语句 ： 　 　 SELECTdurldurlFROMDocumentdDocumentdWHEREdtitledtitleANDNOTdurldurl 　 　 但是 ， 由于 Document 和 Anchor 关系 是 虚构 的 ， 故 以上 查询 无法 计算 ， 也 无法 逐个 文档 地 加以 判断 。 要 完成 以上 查询 要求 ， 必须 将 关系 具体化 。 我们 将 查询 语句 改为 ： 　 　 SELECTdurldurlFROMDocumentdSUCHTHATdMENTIONSSomethingInterestingDocumentdSUCHTHATdMENTIONSSomethingInterestingWHEREdtitledtitleANDNOTdurldurl 　 　 通过 SUCHTHAT … MENTION … 具体化 查询 内容 ， 便是 可 计算 的 了 。 　 结束语 　 　 对 Web 数据模型 的 研究 ， 其 基本 出发点 是 在 网络带宽 有限 等 前提 下 提供 一种 高效 、 灵活 、 安全 的 Web 查询方法 。 为此 ， 相关 的 问题 如 事务处理 、 柔性 查询 应答 系统 、 索引 技术 等 的 研究 ， 是 同样 至关重要 的 。 作者简介 ： 李绍华 　 硕士 ， 讲师 。 主要 研究 方向 ： 计算机 图形学 、 数据库 技术 。 作者 单位 ： 李绍华 　 广东 商学院 计算机 中心 　 广东 ． 广州 （ ） 参考文献 　 ［ ］ 　 AlbertoMendelzonandTovaMiloFormalModelsoftheWebinProceedingsoftheSixteenthACMSymposiumonPrinciplesofDatabasseSystemMay 　 ［ ］ 　 AlbertoMendelzonGeorgeMihailaTovaMiloQueryingtheWorldWideWebJournalofDigitalLibraries ： 　 ［ ］ 　 DanielaFlorescuAlonLevyandAlbertoMendelzonDatabaseTechniquesfortheWorldWideWebASurveyACMSIGMODRecord ， ： 　 ［ ］ 　 AlbertoMendelzonTheWebisnotadatabaseslidesfromapresentationattheWorkshoponinternetDataManagementWashington ， 　 　 收稿 日期 修改稿