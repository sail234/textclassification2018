软件 学报 JOURNALOFSOFTWARE 年 　 第卷 　 第期 　 Vol 　 No 　 交互式 用户界面 的 形式化 描述 与 性质 验证 朱军 　 张高 　 华庆 一 　 戴国忠 　 　 摘要 　 随着 人机交互 技术 的 发展 计算机 和 用户 之间 的 接口 越来越 自然 但 用户界面 管理系统 内部 的 复杂度 却 大大 地 增加 了 目前 提出 的 新一代 用户界面 的 模型 大都 停留 在 概念模型 阶段 缺乏 对模型 的 严格 描述 和 证明 该文 结合 对 基于 自然 交互方式 的 用户界面 的 研究成果 归纳 出 了 一个 交互式 用户界面 的 通用 模型 为了 保证系统 设计 的 正确性 文章 讨论 了 如何 使用 形式化 描述语言 LOTOSlanguageoftemporalorderingspecification 和 基于 动作 的 时序 逻辑 ACTLactionbasedtemporallogical 对系统 进行 描述 与 验证 这 有利于 人们 对 交互式 用户界面 的 动态 行为 进行 研究 、 评估 与 定义 　 　 关键词 　 交互式 用户界面 形式化 方法 模型 检查 时序 逻辑 LOTOSACTL 　 　 中图法 分类号 　 TPTheFormalSpecificationandPropertyVerificationofInteractiveUserInterfaceZHUJunZHANGGaoHUAQingyiDAIGuozhongLaboratoryofComputerSicenceInstituteofSoftwareTheChineseAcademyofSciencesBeijingDepartmentofComputerScienceNorthwestUniversityXian 　 　 Abstract 　 WiththedevelopmentofhumancomputerinteractivetechnologytheinterfacebetweencomputersandusersismoreandmorenaturalthemanagementofuserinterfaceisbecomingmoreandmorecomplexNowtheavailablemodelsofnextgenerationuserinterfacearealmostconceptualTheformalspecificationandpropertyverificationtothemarenecessaryBasedontheresultsoftheresearchonnaturalinteractiveuserinterfacetheauthorsgiveoutageneralmodelofinteractiveuserinterfaceInordertoguaranteethecorrectionofthedesignofsystemitneedstospecifyandverifyitrigidlyTheformaldescriptionandverificationbyuseofLOTOSlanguageoftemporalorderingspecificationandACTLactionbasedtemporallogicaregivenoutinthispaperTheseallowpeopletostudyevaluateanddefinethedynamicbehaviorofcurrentuserinterfaces 　 　 Keywords 　 GraphicaluserinterfaceformalmethodmodelcheckingtemporallogicLOTOSlanguageoftemporalorderingspecificationACTLactionbasedtemporallogic 　 　 建立 以人 为主 、 基于 自然 交互方式 的 用户界面 是 下一代 用户界面 的 发展趋势 多媒体 用户界面 和 多通道 用户界面 由于 比较 好 地 提高 了 用户 和 计算机 之间 的 通信 频带 从而 成为 下一代 用户界面 的 主要 模式 随着 用户界面 技术 的 发展 计算机 和 用户 之间 的 接口 越来越 自然 但 用户界面 管理系统 内部 的 复杂度 却 大大 地 增加 了 为了 适应 用户界面 技术 的 发展 国内外 的 专家 提出 了 许多 下一代 的 用户界面 模型 和 原型 系统 ［ ］ 但 这些 模型 和 原型 系统 大都 还 停留 在 概念设计 阶段 模型 缺乏 严格 的 描述 和 关键 性质 的 定义 与 证明 由于 模型 对 用户界面 的 具体 实现 起着 重要 的 指导作用 所以 保证 其 正确性 和 合理性 就 显得 尤为重要 　 　 本文 结合 国内外 提出 的 下一代 用户界面 模型 的 特点 提出 了 一个 交互式 用户界面 的 通用 模型 并 利用 形式化 方法 对 其 进行 定义 与 研究 形式化 方法 能 对系统 进行 精确 的 并且 无 二义性 的 描述 并 能 在 此基础 上 进行 推理 从而 可以 对系统 应 具有 的 关键 性质 进行 验证 以 保证 它 的 正确性 近年来 形式化 的 方法 在 用户界面 领域 中 的 应用 越来越 受到重视 为了 保证系统 开发 的 正确性 本文 采用 形式化 的 方法 对模型 进行 了 准确 的 描述 和 性质 定义 从而 为 系统验证 提供 了 有效 的 手段 　 　 目前 在 用户界面 领域 中 采用 的 形式化 技术 主要 有 用户 动作 标记 UAN （ useractionnotation ） 、 Z 语言 （ Znotation ） 、 时序 描述语言 LOTOS （ languageoftemporalorderingspecification ） 以及 Petri 网等 UAN 适合 从 用户 的 角度 出发 对 界面 所 应 完成 的 任务 进行 有效 的 描述 ［ ］ 基于 类型 集合 理论 和 一阶 谓词 逻辑 的 Z 在 刻画 交互 对象 自身 的 特征 与 性质 方面 具有 明显 的 优势 ［ ］ 而 基于 进程 代数 的 LOTOS 更 适合 描述 各个 界面 对象 间 的 交互 行为 ［ ］ 此外 Petri 网 也 被 用来 描述 用户界面 的 交互 过程 ［ ］ 　 　 本文 采用 形式化 描述语言 LOTOS 描述 用户界面 系统 的 通用 模型 LOTOS 是 由 国际标准化组织 开发 的 一种 形式化 规格 说明 语言 ［ ］ 它 提供 了 一组 符号 用于 定义 系统 外部 可见 行为 之间 的 时序 关系 在 LOTOS 中 并发 系统 被 看做 是 具有 内部 动作 的 一系列 进程 （ process ） 每个 进程 可以 通过 定义 在 事件 端口 （ gate ） 的 可见 动作 与 其他 进程 进行 交互 通过 定义 进程 的 一系列 可 观察 的 动作 可以 描述 一个 进程 所 具有 的 外部 行为 特征 而 整个 系统 的 行为 可 由 一个 动作 树来 表示 树中 的 每 一个 路径 代表 着 进程 可能 执行 的 一个 可 观察 动作 序列 使用 LOTOS 可以 用 数据 代数 dataalgebra 表示 系统 状态 用 进程 process 来 描述 系统 行为 而 交互式 用户界面 有 两个 显著特点 — — 外观 appearance 和 行为 behavior 外观 是 用户 所 观察 到 的 系统 当前 状态 的 表示 行为 描述 了 界面 如何 对 用户 或 应用 产生 的 事件 进行 反应 用户 可以 通过 交互 行为 改变 系统 内部 状态 由此可见 LOTOS 比较 适于 描述 交互式 用户界面 　 　 另一方面 我们 采用 基于 动作 的 时序 逻辑 ACTL （ actionbasedtemporallogical ） 定义 用户界面 系统 的 一般 性质 ACTL 是 一种 基于 动作 的 分支 时序 逻辑 ［ ］ 它 的 解释 域 为 标号 转移 系统 LTS （ labeledtransitionsystem ） 在 这类 系统 中 状态 间 的 转移 带有 标号 且 标号 是 用来 表示 引起 状态 转移 的 动作 的 通常 人们 认为 时序 逻辑 是 适于 并发 反应式 系统 的 性质 定义 的 而 用户界面 系统 中 状态 的 转移 通常 由 用户 的 动作 产生 所以 我们 采用 基于 动作 的 时序 逻辑 这 使得 对于 系统 性质 的 定义 更加 直观 一般而言 使用 LOTOS 描述 的 系统 的 语义 模型 能够 由 一个 标号 转移 系统 表示 这样 利用计算机 辅助工具 我们 可以 对 LOTOS 描述 的 系统 模型 进行 检查 验证 其 是否 具有 ACTL 定义 的 性质 从而 保证系统 在 某些 方面 的 正确性 与 可靠性 　 　 目前 下一代 用户界面 系统 的 设计 趋势 是 能够 支持 多通道 并行 输入 与 输出 、 并行 对话 、 并发 控制 与 多 视图 数据 显示 这 就 意味着 必须 以 并行 方法 设计 用户界面 系统 面向对象 方法 的 应用 使 这种 并行性 得以 实现 我们 提出 的 交互式 用户界面 的 通用 模型 就是 基于 这一 特点 提出 的 多 代理 （ multiagent ） 交互 模型 这是 一种 典型 的 反应式 系统 它 将 用户 或 应用 产生 的 事件 传递 给 各个 相关 的 对象 由 这些 对象 合作 完成 相应 的 任务 由此可见 该 模型 是 非常 有利于 使用 LOTOS 与 ACTL 对 其 进行 描述 与 验证 的 用户界面 的 抽象 模型 　 　 为了 便于 进行 形式化 描述 与 验证 首先 需要 给出 一个 关于 用户界面 的 系统 模型 由于 直接 操纵 式 用户界面 与 多通道 用户界面 的 采用 目前 大多数 用户界面 的 设计 都 采用 了 面向对象 方法 基于 此类 方法 的 用户界面 体系结构 主要 有 MVC （ modelviewcontroller ） PAC （ presentationabstractioncontrol ） 和 ALV （ abstractionlinkview ） 等 ［ ～ ］ 这里 为了 有效 地 进行 形式化 描述 我们 在 一个 更 高 的 层次 上 给出 一个 关于 用户界面 的 通用 模型 如图所示 根据 对话 分离 原则 一般 的 交互式 系统 分为 应用 核心 （ applicationcore ） 与 用户界面 系统 两 部分 而 用户界面 系统 是 由 多个 交互 对象 UIO （ userinterfaceobject ） 组成 的 具有 一定 层次 的 网状结构 底层 的 UIO 负责管理 交互 设备 接收 用户 动作 显示 用户 信息 高层 的 UIO 负责管理 底层 的 UIO 并 与 应用 核心 进行 信息 交换 图 交互式 系统 用户界面 抽象 模型 　 　 可以 看出 在 这种 模型 下 交互 对象 UIO 应当 是 一种 重用 性较 高 、 具有 相对 独立 功能 的 对象 构件 它 不仅 具有 自己 的 内部 状态 还 具有 和 其他 对象 交互 的 能力 一般而言 交互 对象 UIO 具有 一定 的 内部结构 如图所示 它 主要 由 部分 组成 图 用户界面 交互 对象 UIO 概念模型 　 　 表示 元素 Presentation 一般 的 UIO 都 具有 表示 其 内部 状态 的 外观 通常 由 表示 元素 维护 外观 的 变化 反应 了 系统 内部 状态 的 变化 　 　 应用 接口 AppInterface 为了 保证 交互式 系统 中 用户界面 与 应用 核心 分离 后 两者 间 的 有效 联系 UIO 中应 含有 能 产生 回调 的 应用 接口 　 　 对话 元素 Dialoger 此 部分 主要 用于 接收 来自 外部 对象 的 消息 并 产生 相应 的 动作 这些 消息 可能 由 用户 动作 产生 也 可能 由 应用 核心 或 其他 交互 对象 UIO 发出 Dialoger 对 这些 消息 进行 处理 根据 情况 驱动 表示 元素 改变 外观 也 可 回调 应用 核心 与 其他 UIO 进一步 对 其 加以 处理 　 　 UIO 可以 通过 种 端口 （ gate ） 与 外界 交互 一方面 它 从 input 端口 接受 来自 用户 的 输入 从 output 端口 输出 内部 表示 以 改变 界面 外观 另一方面 它 可以 从 feedback 端口 接收 来自 应用 核心 的 信息 也 可 从 callback 端口 请求 应用 核心 进行 计算 处理 采用 LOTOS 我们 可以 对 UIO 的 交互 行为 严格 地 进行 描述 如下 所示 　 　 processUIO ［ inputoutputfeedbackcallback ］ inputdataInputDatafeeddataFeedDatanoexit 　 　 　 　 inputidInputDatacallbackAppInterfaceid 　 　 UIO ［ inputoutputfeedbackcallback ］ idfeeddata 　 　 ［ ］ feedbackfdFeedDataoutputPresentationfd 　 　 UIO ［ inputoutputfeedbackcallback ］ inputdataaddfdfeeddata 　 　 　 　 endproc 　 　 UIO 在 接收 到 input 事件 后 将 产生 callback 事件 并 依此 递归 下去 同样 地 它 在 接收 到 feedback 事件 后 将 产生 output 事件 同时 将 fd 加入 反馈 信息 集合 并 依此 递归 下去 这里 使用 数据 代数 方法 定义 进程 参数 相关 的 数据类型 与 callback 事件 相关 的 数据 值 由 AppInterfaceid 产生 而 与 output 事件 相关 的 数据 值 由 Presentationfd 产生 用户界面 性质 的 定义 　 　 从 用户界面 的 系统 模型 可以 看出 整个 用户界面 可以 视为 由 多个 交互 对象 UIO 组成 的 带有 层次结构 的 系统 这个 系统 介于 整个 交互式 系统 的 应用 核心 与 用户 之间 为 两者 的 交互 提供 友好 的 方式 考察 用户界面 系统 中 UIO 的 交互 性质 是 为了 检查 用户界面 的 完整性 以及 刻画 它 对 用户 及 应用 核心 产生 的 事件 反应 时 的 行为 特征 我们 特别 关注 的 性质 有 两个 方面 下面 给予 详细 介绍 　 　 基本 图形 交互 对象 UIO 的 一般 特点 这 有助于 发现 UIO 的 通用 特征 从而 可以 完善 UIO 模型 显而易见 对于 UIO 而言 它 应该 在 任何 条件 下 都 能够 对 来自 用户 或 应用 的 输入 事件 作出 相应 的 反应 进行 内部 处理 并 产生 相关 的 输出 事件 这一 性质 可 由 下述 两条 ACTL 公式 定义 AG ［ input ］ E ［ true ｛ true ｝ U ｛ callback ｝ true ］ AG ［ feedback ］ E ［ true ｛ true ｝ U ｛ output ｝ true ］ 上述 公式 的 含义 是 在 任何 路径 （ A 算子 ） 和 状态 中 （ G 算子 ） 若 UIO 接收 到 input 或 feedback 事件 则 其 内部 进程 间 总 存在 （ E 算子 ） 一条 路径 使 UIO 产生 callback 或 output 事件 　 　 用户界面 系统 的 一般 性质 这是 为了 检查 用户界面 体系结构 在 设计 上 的 逻辑 完整性 在 应用 系统 中若 用户界面 涉及 到 的 UIO 数目 较多且 UIO 之间 的 协作关系 较强 则 系统 的 复杂度 将 显著 增加 为了 保证系统 的 可靠 与 稳定 以及 设计 的 正确性 需要 检查 所 设计 的 系统 是否 满足 用户界面 的 一般 性质 以及 是否 能够 达到 预期 的 效果 我们 主要 从 系统 和 用户 两个 角度 来 考虑 一方面 作为 交互式 系统 其 真正 的 功能 处理 部分 在 应用 核心 中 用户界面 只是 按 一定 的 方式 去 理解 用户 动作 的 意图 因此 用户 产生 的 有效 命令 必须 能 正确 到达 应用 核心 另一方面 作为 与 用户 交互 的 界面 系统 它 必须 将 应用 核心 对 命令 的 处理结果 或 其他 一些 信息 以 一定 的 方式 显示 出来 使 用户 对系统 内部 状态 可见 下面 我们 给出 这 两个 性质 的 定义 　 　 可达性 　 　 可达性 是 指当 某 一个 用户 动作 发生 时 系统 能否 达到 指定 效果 这一 性质 允许 我们 验证 用户 的 交互 动作 能否 引起 应用 核心 的 相应 功能 处理 部分 对 其 产生 反应 其 定义 如下 AG ［ useraction ］ E ［ true ｛ true ｝ U ｛ Applicationfunction ｝ true ］ 　 　 这一 ACTL 公式 的 含义 为 对于 所有 可能 的 将来 （ A 算子 ） 以及 所有 可能 的 状态 （ G 算子 ） 如果 用户 动作 useraction 发生 那么 系统 在 以后 的 时序 演化过程 （ U 算子 ） 中 至少 存在 （ E 算子 ） 一条 路径 即 一组 不 加 任何 限制 （ truetrue 算子 ） 的 转移 使得 最终 导致 动作 Applicationfunction 发生 　 　 可视性 　 　 可视性 是 指 用户 动作 能够 引起 系统 用户界面 外观 的 变化 从 用户 的 角度看 系统 交互 特性 是 为了 检查 界面 能否 对 用户 动作 产生 的 事件 作出反应 并 引起 界面 外观 的 改变 利用 这一 性质 我们 可以 验证 某一 用户 动作 能否 在 用户界面 上 产生 反馈 信息 其 定义 如下 AG ［ useraction ］ E ［ true ｛ true ｝ U ｛ Userinterfaceappearance ｝ true ］ 　 　 对于 一 给定 用户 动作 useraction 我们 可以 使用 上述 ACTL 公式 确认 在 以后 的 时序 演化过程 （ U 算子 ） 中 是否 至少 存在 一条 （ E 算子 ） 路径 使得 系统 产生 一个 事件 Userinterfaceappearrance 改变 相应 的 用户界面 外观 从而 表明 用户 的 输入 已 被 系统 接收 模型 检查 方法 与 实例 　 模型 检查 　 　 模型 检查 是 检验 以 有限 状态机 为 基本 模型 的 系统 的 一种 常用 方法 对于 并发 反应式 系统 人们 常 以 标号 转移 系统 作为 其 抽象 模型 并 使用 与 之 相应 的 时序 逻辑 公式 定义 其 性质 从而 进行 验证 工作 对于 用户界面 系统 通常 所 要 验证 的 是 当 系统 从 某 一 状态 转移 到 另 一 状态 时 是否 满足 转移 路径 上 定义 的 动作 公式 以及 所 到达 的 状态 是否 满足 相应 的 状态 公式 　 　 如图所示 为了 对 用户界面 系统 进行 有效 的 验证 一方面 我们 使用 LOTOS 对 用户界面 进行 严格 的 形式化 描述 并 将 其 转化 为 一 有限 状态机 表示 的 标号 转移 系统 LTS 其中 LOTOS 中 每 一个 进程 对应 于 界面 模型 中 的 一个 UIO 对象 而 定义 在 其 端口 上 的 动作 对应 于 一个 转移 事件 另一方面 通过 提炼出 所 要 检验 的 用户界面 系统 性质 并 使用 ACTL 对 其 进行 严格 的 逻辑 定义 这样 利用 基于 时序 逻辑 的 模型 检查 工具 我们 就 可以 对 用户界面 系统 模型 进行 严格 而 有效 的 验证 图 用户界面 模型 检查 示意图 　 一个 多通道 用户界面 系统 的 验证 　 　 现在 我们 以 一个 CAD 系统 的 用户界面 为例 ［ ］ 介绍 如何 使用 形式化 方法 对 其 进行 描述 与 验证 此 用户界面 系统 支持 多通道 输入 方式 它 通过 语音输入 作图 命令 并 通过 光笔 确定 图形 坐标 经过 任务 整合 后 由 系统 根据 当前 状态 完成 作图 任务 为了 在 系统 开发 的 早期 过程 中 判断 系统 是否 设计 得 完善 以及 是否 存在 问题 我们 对系统 所 应 具有 的 性质 进行 了 定义 与 验证 这些 性质 是 此 用户界面 系统 达到 其 功能 要求 的 必要条件 具体步骤 如下 　 　 步骤 建立 CAD 用户界面 系统 的 UIO 模型 　 　 首先 我们 根据 系统 的 需求 使用 面向对象 方法 分析 系统 并 将 其 分解 为 由 多个 交互 对象 UIO 组成 的 对象 系统 如图所示 支持 多通道 输入 方式 的 CAD 用户界面 系统 主要 由类 UIO 组成 它们 是 通道 整合 对象 IntegrationUIO 语音 处理 对象 VoiceUIO 光笔 处理 对象 PenUIO 和 涂刷 显示 对象 RenderUIO 它们 之间 及其 与 CAD 系统核心 的 交互 关系 如图所示 图 一个 多通道 CAD 系统 的 UIO 模型 　 　 步骤 使用 LOTOS 对 用户界面 模型 进行 形式化 描述 　 　 在 建立 了 系统 的 UIO 模型 之后 我们 进一步 需要 使用 LOTOS 对 每 一个 UIO 对象 进行 严格 的 形式化 描述 通常 这些 UIO 对应 于 LOTOS 中 的 进程 其 交互 动作 可 表示 为 事件 端口 举例 如下 语音 处理 对象 的 LOTOS 描述 为 　 　 processVoiceUIO ［ inputvoiceoutputvoicesendstringreceiveword ］ 　 　 　 　 　 　 　 　 　 　 　 　 inputvoiceVoicereceivewordStringnoexit 　 　 inputvoiceidVoicesendstringAppInterfaceid 　 　 　 　 UIO ［ inputvoiceoutputvoicesendstringreceiveword ］ idreceiveword 　 　 ［ ］ receivewordfdStringoutputvoicePresentationfd 　 　 　 　 UIO ［ inputvoiceoutputvoicesendstringreceiveword ］ inputdataaddfdreceiveword 　 　 　 　 endproc 　 　 步骤 使用 ACTL 定义 用户界面 的 交互 性质 　 　 从 数学 角度 而言 系统 的 性质 可以 由 一些 数学公式 所 定义 即 这些 公式 定义 了 系统 成立 所 需 满足 的 必要条件 对于 系统 性质 定义 得 越 多则 表示 对系统 的 约束 越 严格 所以 如何 准确 地 提炼 并 定义 系统 的 性质 是 对系统 进行 有效 验证 的 先决条件 对于 此 CAD 系统 我们 可 使用 如下 ACTL 公式 检验 系统 的 可视性 　 　 光笔 的 动作 将 在 显示器 上画 出 光标 位置 AG ［ track ］ E ［ true ｛ true ｝ U ｛ drawcursor ｝ true ］ 　 　 语音 与 光笔 同时 输入 可 产生 命令 使 界面 元素 刷新 AG ［ trackinputvoice ］ E ［ true ｛ true ｝ U ｛ highlightvalue ｝ true ］ 　 　 步骤 采用 基于 LOTOS 的 时序 逻辑 验证 工具 对系统 模型 进行 验证 　 　 这里 我们 选用 基于 LOTOS 的 集成 工具 环境 MiniLite ［ ］ 对 上述 CAD 用户界面 系统 的 UIO 模型 进行 性质 检验 这一 工具 的 工作 原理 如图所示 它 将 所 输入 的 表示 系统 模型 的 LOTOS 描述 自动 转化 为 与 之 对应 的 标号 转移 系统 然后 在 其 上 进行 推理 检验所 输入 的 ACTL 时序 逻辑 公式 是否 成立 当 公式 为 真时 表明 模型 满足 所 检验 的 系统 性质 　 　 步骤 根据 错误 情况 修改 系统 的 UIO 模型 重复 上述 步骤 直至 它 满足 所有 性质 结论 　 　 本文 提出 了 一个 交互式 用户界面 的 通用 模型 同时 利用 形式化 描述语言 LOTOS 对 该 模型 进行 了 描述 并 使用 基于 动作 的 时序 逻辑 ACTL 定义 了 它 的 一些 基本 特性 基于 这一 方法 我们 对 一个 支持 多通道 输入 方式 的 CAD 用户界面 子系统 进行 了 系统 模型 验证 也 对 其中 采用 的 用户界面 对象 进行 了 基本 性质 验证 实践 表明 这一 方法 是 可行 且 有效 的 它 能够 在 系统 设计 的 早期 对系统 行为 进行 模拟 并 发现错误 这 有助于 缩短 开发周期 保证 开发 质量 文中 提出 的 验证 方法 为 进一步 证明 其他 性质 提供 了 指导 我们 今后 将 对 用户界面 系统 中 其他 更为 复杂 的 性质 如 通道 整合 的 正确性 、 错误操作 的 可 恢复性 等作 进一步 的 定义 和 验证 基金项目 ： 本文 研究 得到 国家自然科学基金 和 国家 高科技 项目 基金 资助 作者简介 ： 朱军 年生 博士 主要 研究 领域 为 面向对象 技术 形式化 方法 　 　 　 　 　 张高 年生 博士 主要 研究 领域 为 人机交互 用户界面 　 　 　 　 　 华庆 一年生 教授 主要 研究 领域 为 图形用户界面 软件 可视化 　 　 　 　 　 戴国忠 年生 研究员 博士生 导师 主要 研究 领域 为 计算机 图形学 用户界面 作者 单位 ： 朱军 　 张高 　 中国科学院 软件 研究所 计算机科学 开放 研究 实验室 北京 　 　 　 　 　 华庆 一 　 戴国忠 　 西北大学 计算机科学 系 西安 本文 通讯联系 人 朱军 ， 北京 中国科学院 软件 研究所 计算机科学 开放 研究 实验室 参考文献 　 　 　 李茂贞 戴国忠 董士海 多通道 界面 模型 与 关键技术 计算机科学 ～ LiMaozhenDaiGuozhongDongShihaiMultimodalinterfacemodelandkeytechnologyComputerScience ～ 　 　 李茂贞 戴国忠 董士海 多通道 界面 软件结构 模型 及 整合 算法 计算机 学报 ～ LiMaozhenDaiGuozhongDongShihaiSoftwaremodelandintegrationalgorithmofmultimodalinterfaceChineseJournalofComputers ～ 　 　 HartsonHRGrayPDTemporalaspectsoftasksintheuseractionnotationHumanComputerInteraction ～ 　 　 DukeDJHarrisonMDAbstractinteractionobjectsComputerGraphicsForum ～ 　 　 JohnsonCWUsingtemporallogictoprototypeinteractivesystemInDiaperDGilmoreDCocktonGetaledsProceedingsoftheHumanComputerInteractionINTERACTNorthHollandElsevierSciencePublishers ～ 　 　 PalanquePBastideRPetrinetbaseddesignofuserdriveninterfacesusingtheinteractivecooperativeobjectformalismInPaternoFedProceedingofthestEurographicsWorkshoponDesignSpecificationandVerificationofInteractiveSystemBerlinSpringerVerlag ～ 　 　 BolognesiTBrinskmaEIntroductiontotheISOspecificationlanguageLOTOSComputerNetworksandISDNSystems ～ 　 　 DeNicolaRFantechiAGnesiSetalAnactionbasedframeworkforverifyinglogicalandbehaviouralpropertiesofconcurrentsystemsComputerNetworksandISDNSystems ～ 　 　 KrasnerGEPopeSTAcookbookforusingthemodelviewcontrollerinterfaceparadigmJournalofObjectorientedProgramming ～ 　 HillRTheabstractionlinkviewparadigmusingconstraintstoconnectuserinterfacestoapplicationsInProceedingsoftheHumanFactorsinComputingSystemCHINewYorkACMPress ～ 　 CoutazJPACanobjectorientedmodelfordialogdesignInBullingerShackeledsProceedingoftheHumanComputerInteractionINTERACTNorthHollandElsevierSciencePublishers ～ 　 LiMaozhenZhangGaoDaiGuozhongAprimitivebasedarchitectureofmultimodalinterfacePBMMMIInProceedingoftheIEEEInternationalConferenceonIntelligentProcessingSystemsBeijingInternationalAcademicPublishers ～ 　 BolognesiTLagemaatJVissersCLOTOSphereSoftwareDevelopmentwithLOTOSBostonLondonKluwerAcademicPublishers ～ 本文 收到 原稿 收到 修改稿