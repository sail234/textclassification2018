计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNoCSCW 系统 中 共享 应用 问题 剖析 陈 品德 摘要 深入 剖析 了 一个 基于 Internet 环境 的 CSCW 系统 该 系统 利用 Java 语言 实现 了 一个 协作 平台 这种 平台 能够 截取 分发 和 重构 用户 事件 并 提供 网络通信 会晤 管理 发言权 控制 等 服务 同时 JCE 系统 实现 了 应用 对象 的 复制 管理 模型 利用 这种 机制 可以 将 一些 单用户 软件 作为 共享 应用 工具 加入 到 JCE 系统 中 关键词 计算机 支持 的 协同工作 共享 应用 JavaAnalysesofApplicationSharingProbleminCSCWsystemChenPindeComputingInformationCentresouthChinaNormalUniversityGuangzhouAbstractAnInternetbasedCSCWsystemJCEJavaCollaborativeEnvironmentisanalyzeddeeplyinthispaperJCEisacooperativeplatformwhichcaninterceptdepatchandreconstructusereventinadditionitcansupplywithsuchservicesascorrespondingsessionmanagerfloorcontroletcbesidesareplicationmanagermodelonapplicationobjectsobjectsareimplementedinJCEsystemsystemwithwhichwingleuserapplicationcaneacilybetrunedintomultiuserapplicationKeywordsCSCWSharingapplicationJava 　 　 共享 应用 是 CSCW 系统 中 支持 同步 合作 方面 的 研究 领域 之一 。 共享 应用 的 目的 是 使得 参与 协作 的 用户 具有 一个 相同 的 视图 ， 其中 一个 用户 的 操作过程 及 结果 可 为 所有 其它 用户 所 见 ， 即 whatyouseeiswhatIsee ， 从而 营造 一种 面对面 讨论 的 氛围 ， 白板 就是 这样 的 工具 之一 。 共享 应用 更 重要 的 研究 目标 是 实现 一种 平台 ， 使得 当前 存在 的 大量 单用户 应用 能够 轻易 地 变成 共享 应用 。 　 　 共享 应用 的 实现 有 两种 基本 结构 ： 集中式 结构 ， 在 这种 结构 中 ， 应用 运行 在 一台 机器 上 ， 该 应用 的 输出 被 截获 下来 分 发给 参与 协作 的 其它 用户 ， 用户 的 输入 经 发言权 仲裁 机制 仲裁 后 才 作为 应用 的 输入 ； 复制 式 结构 ， 在 这种 结构 中 ， 参与 协作 的 所有 机器 都 运行 一个 相同 的 应用 拷贝 ， 来自 获得 发言权 的 用户 的 输入 被 捕获 下来 ， 并分 发给 其它 所有 用户 ， 没有 发言权 的 用户 的 输入 将 不起作用 。 　 　 本文 分析 的 JCE 系统 与 以往 的 CSCW 系统 不同之处 在于 ： 它 可以 在 任何 支持 Java 虚拟机 规范 的 机器 上 运行 ， 克服 了 异构 平台 的 局限性 ， 从而 为 CSCW 的 广泛 运用 奠定 了 基础 。 　 　 JCE 系统 是 由 NISTNationalInstituteofStandardsandTechnology 和 ODUOldDominionUniversity 大学 合作 开展 的 一项 研究 工程 ， 旨在 探索 利用 Java 实现 异构 平台 下 的 多媒体 协作 环境 的 可行性 ， 年 月 在 Internet 上 发布 了 最新版 JCEhttpsnadncslnistgovmadvtgmadvtgcurrentprojectshtml 。 本文 作者 详细 地 分析 了 JCE 系统 的 全部 源代码 和 相关 的 论文 ， 着重 讨论 了 在 本 系统 中 的 两个 关键问题 的 设计 与 实现 思想 ： JCE 系统结构 ； 应用 对象 的 复制 与 管理 。 JCE 的 系统结构 　 　 JCE 为 共享 多媒体 应用 提供 了 一个 框架 如图所示 ， 它 由 个 包 组成 ： collawt 、 SCMSessionControlManager 、 Server 。 图中 的 会晤 控制 管理 模块 、 通信 模块 由 SCM 包 实现 ； Collawt 、 Collobject 由 Collawt 包 实现 ； 会晤 服务器 由 Server 包 实现 。 图中 的 Java 应用 、 Java 应用 不是 JCE 框架 的 组成部分 ， 它们 是 一些 普通 的 单用户 应用 ， 在 本 系统 中 ， 将 它们 略作 修改 用 Collawt 替代 Javaawt 包使 之 成为 共享 应用 工具 ， 在 会晤 过程 中 ， 可以 启动 一个 或 多个 应用 。 图 还 描述 了 各 部件 之间 的 关系 。 图 JCE 总体 结构 会晤 控制 模块 的 实现 　 　 会晤 控制 模块 主要 实现 了 会晤 的 控制 和 管理 界面 ， 它 提供 了 以下 的 操作 选项 ： 启动 、 加入 或 离开 会晤 ； 启动 一个 共享 应用 工具 ； 请求 或 释放 发言权 ； 音频 选择开关 ； 启动 复制 对象 的 编辑 窗口 等 。 另外 ， 还 可 显示 参与 会晤 的 用户 姓名 、 谁 拥有 发言权 、 已 启动 的 应用 等 信息 。 每 一个 参与 会晤 者 都 必须 首先 运行 会晤 管理器 ， 以便 在 会晤 过程 中 与 会晤 服务器 交换 控制 信息 。 同时 ， CollObject 对象 、 通信 对象 也 是 由 它 生成 ， 通信 对象 建立 起 与 服务器 的 socket 连接 ， 以 线程 方式 运行 ， 实现 报文 的 发送 和 接收 。 CollObject 功能 剖析 　 　 CollObject 对象 是 共享 应用 的 核心 ， 所有 共享 应用 中 产生 的 事件 都 由 它 发送 和 接收 ， 它 主要 实现 了 以下 功能 ： 　 　 部件 的 标识 ， 在 一次 会晤 过程 中 ， 可以 启动 一个 或 多个 应用 ， 因此 需要 标识 出 接收 事件 的 部件 对象 ， 并 将 该 标识号 连同 事件 数据 一起 分 发给 参与 会晤 的 用户 ， 使得 各个 用户 接收 之后 可以 根据 部件 的 标识号 找到 相应 的 部件 并 向 它 传递 该 事件 。 在 JCE 中 ， 对于 每 一个 共享 应用 都 要求 是 一个 容器 如 FrameDialog ， 在 CollObject 对象 中 ， 分别 两个 向量 来 保存 根 窗口 及其 所 包含 的 部件 对象 ， 在 发送 事件 数据 时 ， 用该 部件 在 两个 向量 中 的 索引 号 作为 其 标识号 。 标识 部件 的 逻辑 结构 如图所示 。 图 标识 部件 的 逻辑 结构 　 　 将 事件 对象 转换成 网络 报文 及其 逆 过程 ， 当 GUI 部件 接收 到 输入 事件 时 ， 该 事件 被 截获 并 交与 CollObjectsendAWTEvent 方法 处理 ， 该 方法 将 首先 判定 该 事件 是否 应该 转发 ， 若 是 ， 则 将 其 转换成 网络 报文格式 ， 格式 如下 ： ToplevelWindowIDCIDEventIDEventspecificinfo 　 　 ToplevelWindowID 、 CID 分别 是 应用 表 和 部件 表中 的 索引 号 。 在 接收 方 ， 将 网络 报文 重新 构造 成 一个 事件 对象 ， 并 通过 ToplevelWindow 、 CID 信息 找到 相应 的 部件 ， 利用 dispatchEventevent 方法 向 该 部件 传递 事件 。 对于 共享 应用 来说 ， 它 根本 意识 不到 自己 正在 共享 ， 就 像 一个 单用户 应用 一样 。 协作 图形界面 工具包 Collawt 　 　 为了 能 截获 用户 的 输入 ， JCE 将 Javaawt 中 的 所有 标准 图形界面 部件 都 进行 了 扩展 ， 扩展 了 的 包 命名 为 Collawt ， Collawt 包 的 结构 如图所示 。 图 collawt 包 结构 　 　 扩展 的 方法 是 用 一个 新 的 ProcessEvent 方法 覆盖 了 原有 的 处理过程 ， 在 其中 加入 了 截获 语句 。 例如 ： 在 Collawt 中 的 Button 类 的 实现 代码 如下 ： 　 PublicclassButtonextendsjavaawtButton 　 　 PublicvoidprocessEventAWTEventevt 　 　 ifEventControllerSenderevt 　 　 ifevtinstanceofActionEvent 　 　 superprocessActionEventActionEventevt 　 　 return 　 　 　 　 superprocessEventevt 　 　 　 　 　 　 其中 下划线 语句 就是 用来 实现 用户 事件 的 截获 ， 并 把 它 交给 EventControl 对象 处理 。 对于 其它 部件 对象 也 都 作 了 相应 的 扩展 。 其 思想 就是 ： 在 用户程序 响应 输入 事件 之前 ， 需将 它 送往 服务器 ， 然后 才能 作 相应 的 处理 。 　 　 特别 是 在 对 Frame 容器 类 进行 扩展 时 ， 对 setVisible 方法 也 进行 了 替换 ： 　 　 publicclassFrameextendsjavaawtFrame 　 　 　 … … 　 　 　 publicvoidprocessEventjavaawtAWTEvente 　 　 　 ifCollObjectsendAWTEvente 　 　 　 　 ifeinstanceofWindowEvent 　 　 　 　 processWindowEventWindowEvente 　 　 　 　 return 　 　 　 　 　 　 　 　 superprocessEvente 　 　 　 　 　 　 　 … … 　 　 publicsynchronizedvoidsetVisiblebooleanb 　 　 　 supersetVisibleb 　 　 　 ifbtrue 　 　 　 　 CollObjectbuildComponentTreethis 　 　 　 　 　 　 　 　 　 　 即 在 首次 显示 时 ， 调用 了 CollObjectbuildCommonentTreethis ， 该 方法 将 Frame 及其 所 包含 的 GUI 部件 分别 加入 应用 列表 和 部件 列表 中 。 因此 ， 在 JCE 系统 中 ， 可以 被 共享 的 单用户 应用 都 必须 继承 Frame 容器 类 或 其子 类 。 会晤 服务器 的 实现 　 　 会晤 服务器 的 主要 功能 是 ： 　 　 充当 分发 器 ， 将 接受 到 的 事件 广播 给 所有 参与者 。 　 　 提供 会晤 管理 ， 如 加入 退出 会晤 。 　 　 发言权 控制 ， 协调 各个 用户 对 共享 应用 的 操作 ， 在 某 一 时刻 只能 有 一个 用户 能够 对 应用 进行 操作 。 　 　 会晤 服务器 由个 类 组成 ： ConnectionManagerclassuserConnectionclasssessionInfoclass 。 它们 之间 的 关系 如图所示 ： 图 会晤 服务器 系统结构 　 　 ConnectionManager 生成 一个 服务 方 的 socket ， 等待 着 来自 客户 方 的 连接 ， 为 每 一个 连接 请求 生成 一个 UserConnection 线程 ， UserConnection 主要 实现 了 网络 报文 的 发送 和 接收 方法 。 　 　 SessionInfo 对象 负责 对 全局 数据 的 管理 ， 包括 管理 参与 会晤 的 用户 队列 、 启动 的 共享 应用 队列 、 发言权 标志 、 事件 记录表 类似 于 log 文件 ， 用于 支持 会议 进程 的 记录 与 回放 等 数据 。 　 　 ConnectionManager 是 会晤 服务器 的 核心 ， 由 它 生成 UserConnection 对象 ， 提供 处理 网络 报文 的 各种 方法 ， 利用 SessionInfo 实现 对 全局 数据 的 管理 。 发言权 控制 　 　 任何时刻 只能 有 一个 用户 拥有 发言权 。 发言权 类似 于 一个 权标 ， 只有 拥有 发言权 标的 用户 ， 它 的 行动 才能 分 发给 其它 参与者 。 　 　 在 客户 方 和 服务 方中 分别 有 一个 发言权 标志 变量 floorflag ， 它 是 一个 布尔 变量 ， 由 它 来 控制 谁 拥有 发言权 。 当 用户 事件 送到 网络 上 之前 ， 需要 检测 该 标志 的 状态 ， 只有 在 它 使 能 的 状态 下 ， 事件 才能 分 发给 其它 参与者 。 　 　 目前 JCE 环境 提供 的 控制策略 有 ： 　 　 请求 获得 策略 ： 这 是 最 简单 的 控制 方案 ， 请求 发言 的 用户 可以 立刻 获得 发言权 ， 并且 取消 正 拥有 发言权 用户 的 权利 。 　 　 请求 等待 策略 ： 当 发言权 空闲 时 ， 申请 发言 的 用户 可以 获得 发言权 。 拥有 发言权 的 用户 必须 主动 释放 其 权力 ， 其它 用户 才能 得到 发言权 ， 同时 申请 发言权 的 用户 按照 先进先出 的 原则 ， 由 会晤 服务器 控制 发言权 的 分配 。 　 　 无 发言权 策略 ： 允许 任何 参与者 对 共享 应用 进行 操作 ， 每个 用户 的 输入 事件 都 会 广播 给 其它 参与者 。 　 　 发言权 的 控制 由 客户 与 服务器 协同 完成 。 SessionControlManager 用户 提供 了 选择 控制策略 及 申请 释放 控制 的 按钮 ， 同时 还 显示 出 当前 拥有 用 发言权 的 用户 信息 。 应用 对象 的 复制 与 管理 　 　 JCE 环境 的 关键 是 基于 复制 式 体系结构 ， 单用户 应用 可 随时 添加 到 该 系统 中 ， 在 共享 某 应用 时 ， 每个 参与者 应当 拥有 相同 的 应用 代码 、 系统 环境 、 初始 数据 对象 等 ， 在 运行 过程 中 还 将 产生 一些 新 的 对象 ， 执行 完毕 后 ， 还 涉及 到 对 这些 新 生成 的 对象 如何 处理 保留 或 删除 。 因此 ， 必须 提供 一些 机制 ， 使 所有 用户 在 进行 协作 操作 之前 ， 获得 这些 数据 对象 及 对 它 的 处理 方法 。 为 实现 这一 目的 ， JCE 把 应用 分成 由类 对象 组成 ： 环境 对象 、 操作 对象 、 最终 对象 ， 并 提供 一个 框架 实现 对 这些 对象 的 说明 和 定义 、 复制 和 管理 。 应用 框架 　 　 JCE 实现 了 一个 编辑 窗口 ， 如图所示 。 图 框架 编辑 窗口 　 　 限于 篇幅 ， 此处 不 作 详细 说明 。 其中 的 host ， src ， dst 等 信息 说明 了 对象 所处 的 位置 和 复制 的 目的 位置 ； Removeattheend 说明 了 应用 运行 结束 后 是否 删除 之 。 　 　 应用 框架 编辑器 输入 的 数据 将 生成 个 列表 ： 　 　 环境变量 表 Envlist ： 表 的 成员 为 〈 NV 〉 二元 组 ， N 为 变量名 ， V 为 变量值 ； 　 　 初始 对象 表 Initlist ： 成员 为 〈 HSNDR 〉 五元 组 。 其中 ， H ： 对象 所在 的 主机名 ； S ： 对象 所处 的 源 路径 ； N ： 对象 名 ； D ： 对象 应 拷贝 至 的 目标 路径 ； R ： 运行 后 对 该 对象 的 处理 ， R 为 d 代表 在 运行 后 删除 该 对象 。 　 　 最终 对象 表 ： 成员 为 〈 N ， H ， S ， D ， R 五员 组 ， N ， H ， S ， D ， R 的 意义 与 初始 对象 列表 的 意义 一致 。 　 　 这些 数据 以 prf 文件 的 形式 存放 在 复制 服务器 中 。 复制 过程 　 　 复制 过程 以 客户服务器 模式 实现 ， 复制 服务器 可以 与 会晤 服务器 运行 在 同一 机器 上 ， 也 可以 运行 在 不同 的 机器 上 ； 复制 客户 方 程序 由 会晤 管理器 启动 。 　 　 会晤 管理器 启动 时 ， 将 从 配置文件 tools 中 得到 可以 使用 应用 工具 名 ， 启动 某一 应用 时 ， 将 首先 从 复制 服务器 中 得到 该 应用 的 prf 文件 ； 然后 根据 prf 文件 中 分别 取得 运行 代码 、 初始 对象 、 环境变量 等 有关 数据 ； 最后 才 运行 该 应用 工具 。 结束语 　 　 JCE 系统 实现 了 协作 机制 、 会议 界面 、 网络通信 、 会议 管理 、 发言权 控制 、 复制 管理 ， 并且 还 以 本地 方法 提供 了 在 Windows 及 SunOS 平台 上 对 音频 的 支持 ， 同时 提供 了 白板 、 国际象棋 、 编辑器 、 图片 播放 等 共享 应用 工具 ， 不再 一一 赘述 。 JCE 系统 目前 正在 进行 的 工作 是 ： 利用 JMFJavaMediaFramework 本地 方法 实现 异构 平台 上 的 视频会议 工具 ； 音频视频 媒体 流 之间 的 同步 等 。 　 　 作为 一个 原型 系统 ， JCE 提供 的 功能 还 不能 达到 实用 程度 ， 比如 ， 未 提供 会议 信息 服务 、 发言权 仲裁 机制 不够 完善 、 共享 应用 工具 仅仅 是 演示 等 。 但是 ， 它 利用 Java 语言 实现 的 协作 框架 和 复制 结构 ， 对 从事 CSCW 系统 的 设计 人员 仍然 具有 很 好 的 启发 价值 。 作者简介 陈 品德 男岁 讲师 主要 兴趣 是 网络工程 计算机 支持 的 协同工作 人工智能 等 作者 单位 华南 师范大学 计算 与 信息中心 广州市 参考文献 KimPlatformindependenceSupportforMultimediaDesktopConferencingandApplicationSharingProceedingofSeventhIFIPConferenceonHighPerformanceNetworkingHPNWhitePlainsNewYork ： AbdelWahabHUsingJavaforMultimediaCollaborativeApplicationsProceedingsofPROMSThirdInternationalWorkshoponProtocolsforMultimediaSystems ， Madrid ， ： AbdelWahabHAnInternetCollaborativeEnvironmentforSharingJavaApplicationstoAppearinthethIEEEComputerSocietyWorkshoponFutureTrendsofDistributedComputingSystemsFTDCSTunisTunisia ： 收稿 日期