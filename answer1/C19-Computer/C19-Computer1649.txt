软件 学报 JournalofSoftwareVolNoP 区间 逻辑 的 一个 辅助 证明 工具 胡成军 　 王戟 　 陈 火旺 摘 　 要 　 DCPdurationcalculusprover 是 一族 实时 区间 逻辑 的 辅助 定理 证明 工具 它 采用 Gentzen 风格 相继 式 演算 作为 基本 证明 系统 并 结合 项 重写 、 自动 判定 算法 等 技术 以 提高 证明 的 自动化 程序 该文 介绍 了 DCP 的 语义编码 方法 、 采用 的 相继 式 证明 系统 及 实现 技术 并 给出 了 应用 实例 关键词 　 邻域 逻辑 区间 时序 逻辑 均值 演算 时段 演算 相继 式 演算 定理 证明 中图法 分类号 　 TPAProofAssistantforIntervalLogicsHUChengjun 　 WANGJi 　 CHENHuowangSchoolofComputer 　 NationalUniversityofDefenseTechnology 　 Changsha 　 Abstract 　 DCPdurationcalculusproverisaproofassistantforafamilyofintervallogicsItadoptstheGentzenstylesequentcalculusasitsbasicproofsystemThetechniquessuchastermrewritingandautomaticdecisionprocedureareintegratedtoautomatemanytrivialproofstepsInthispapertheauthorsbrieflydescribethesemanticencodingapproachandthesequentcalculusaswellastherelatedimplementationtechniquesoftheDCPKeywords 　 Neighbourhoodlogicintervaltemporallogicmeancalculusdurationcalculussequentcalculustheoremproving 　 　 作为 一种 实时 逻辑 区间 逻辑 因 其 表达能力 强而 被 大量 应用 于 硬件 电路 、 实时 系统 等 领域 ［ ］ 区间 逻辑 区别 于 点式 逻辑 pointbasedtemporallogic 的 根本 性质 是 公式 语义 解释 在 区间 上 而 不是 在 时间 点上 对于 某些 性质 例如 “ A 在 任一 长于 l 的 观察 区间 上 总为 真 ” 等 使用 区间 逻辑 来 描述 、 推导 更 方便 、 更 自然 　 　 本文 介绍 我们 开发 的 时段 演算 定理 证明 器 durationcalculusprover 简称 DCPDCP 版本 可 从 httpwwwiistunuedu ～ hcj 下载 需要 者 也 可 与 作者 联系 作为 区间 逻辑 的 一个 辅助 证明 工具 DCP 的 目的 是 将 推导 过程 机械化 、 半自动化 使 人们 从 枯燥 易 犯错 的 手工 推导 中 解脱 出来 DCP 实际上 是 支持 包括 邻域 逻辑 ［ ］ neighbourhoodlogic 简称 NL 、 区间 时序 逻辑 ［ ］ intervaltemporallogic 简称 ITL 、 均值 演算 ［ ］ meancalculus 简称 MC 和 时段 演算 ［ ］ durationcalculus 简称 DC 在内 的 一族 实时 区间 逻辑 的 辅助 定理 证明 工具 之前 Skakkebk 的 PCDC ［ ］ 是 我们 所知 的 唯一 的 时段 演算 辅助 证明 工具 PCDC 是 一个 出色 的 工具 其 缺点 是 仅 支持 DC 且 很 难 被 用户 扩充 PCDC 采用 了 所谓 的 “ ParserUnparser ” 技术 这一 技术 因 过于 依赖 实现 平台 的 特定 功能 而 难于 维护 DCP 吸收 了 PCDC 的 一些 优点 并 在 此基础 上作 了 一些 改进 DCP 是 交互式 的 它 采用 Gentzen 风格 相继 式 演算 sequentcalculus 作为 基本 证明 系统 同时 也 结合 了 如 重写 、 自动 判定 算法 等 技术 用户 只 需 在 高层 作 一些 决策 其他 大量 琐碎 的 细节 则 由 DCP 自动 完成 　 　 DCP 的 实现 平台 是 SRI 公司 著名 的 原型 验证 系统 PVS ［ ］ 在 实现 DCP 时 我们 采用 语义编码 技术 采用 语义编码 技术 而 不是 从头 构造 一个 全新 定理 证明 工具 的 主要 原因 有 两 方面 一方面 我们 可以 较 快 地 得到 一个 可靠性 有 保障 的 原型 系统 另一方面 我们 可以 将 注意力 更多地 放在 逻辑 的 证明 系统 和 相关 自动化 技术 上 DCP 的 实现 方法 对 其他 逻辑 的 证明 工具 的 实现 均 有 参考 意义 　 语义编码 　 　 我们 采用 的 语义编码 是 在 文献 ［ ］ 的 基础 上作 了 较大 改动 后 得到 的 其中 域 、 状态 、 项及 公式 等 编码 如下 　 　 我们 采用 PVS 的 内置 类型 real 来 表示 时间 域 区间 类型 则 用 时间 点 的 有序 点 对 来 表示 ： 　 　 状态 通常 表示 为 从 时间 域 到 布尔 域 中 的 函数 然而 由于 状态 变元及 表达式 仅 出现 在 积分算子 内 通常 假定 状态 变元 具有 有穷 可变性 finitevariability 以使 积分 函数 是 良定 的 这 一 约束 用 PVS 的 谓词 子 类型 描述 如下 ： 这里 T 为 一 类型 参数 FiniteVariabilityf 是 一 递归 定义 的 高阶 谓词 其 含义 是 在 任一 区间 上 总 存在 一 自然数 n 使得 函数 f 恰好 有 n 个 不 连续 点 　 　 我们 可以 在 状态 上 施加 各种 “ 布尔 型 ” 操作 以 得到 状态 表达式 状态 间 的 联接 算子 可 由 “ 提升 ” 的 方法 定义 例如 令 FF 为 boolstate 类型 t 为 一个 Time 类型 变元 则 “ 蕴含 ” 算子 可定义 为 ＞ FFboolstateLAMBDAtFtIMPLIESFt 　 　 区间 逻辑 的 项 由 全局 变元 、 时序 变元 、 函数 及 常数 构成 这里 我们 把 状态 表达式 的 积分 或 均值 视为 特殊 的 时序 变元 并 借助 类型信息 来 区分 全局 变元 与 时序 变元 　 　 当 全局 变元 或 实数 型 常数 用作 项时 需 使用 类型 强制 typecoercion 令 i 为 Interval 类型 类型转换 函数 定义 如下 ： ntT ［ Interval － ＞ T ］ LAMBDAit 　 CONVERSIONn 这样 定义 的 类型转换 函数 n 是 多态 的 它 可以 将 任一 类型 T 转换 为 另 一 类型 ［ Interval － ＞ T ］ 如 从 实数 到 项 、 从 布尔 型 到 公式 等 由于 PVS 的 类型 检查 系统 自动 尝试 调用 用户 定义 的 转换 函数 以 获得 类型 匹配 因此 在 规范 中 我们 仍 可以 用 常规 方式 书写 各种 表达式 如 lgx 等 　 　 采用 类似 方法 实数 域 上 通常 的 四则运算 可以 提升 到 项上 如项 上 的 乘法 运算 定义 为 ttTermLAMBDAititi 　 　 在 DCP 中 我们 没有 把 Reiman 的 积分 理论 编码 到 元逻辑 中 而是 将 积分算子 解释 为 未定义 函数 并 引入 一组 公理 来 刻画 其 语义 文献 ［ ］ 已经 证明 该 公理化 是 完备 的 积分算子 及 均值 函数 定义 如下 ： 　 　 区间 逻辑 的 公式 是从 区间 到 布尔 域 的 函数 FormTYPE ［ Interval － ＞ bool ］ 同样 地 通过 提升 的 方法 我们 可以 得到 更 多 的 关系 算子 、 命题 联接 词及 量词 例如 ： ttFormLAMBDAititi ＼ ABFormLAMBDAiAiORBieveryL ［ T － ＞ Form ］ FormLAMBDAiFORALLgxLgxi 而 NL 的 模态 词 ◇ l 及 ITL 的 “ chop ” 模态 词 ⌒ ◇ 和 □ 定义 如下 ： 　 　 区间 逻辑 的 公式 语义 可以 按 统一 的 形式 编码 到 元逻辑 中 直观 上 讲 公式 A 在 区间 i 处为 真 当且 仅 当 Ai 等价 于永真式 true ； 公式 A 为 真 当且 仅 当 Ai 对于 所有 区间 i 都 为 真 对此 可以 编码 如下 ： 　 Gentzen 风格 证明 系统 　 　 在 完成 语义编码 后 原则上 可以 通过 展开 所有 算子 的 定义 而 在 元逻辑 层次 来 证明 区间 逻辑 的 定理 但 这样一来 一方面 证明 工具 的 用户 必须 熟悉 编码 细节 ； 另一方面 这种 证明 没有 反映 人们 在 区间 逻辑 概念 层次 的 思维 最终 得到 的 证明 将 难以 理解 为 克服 上述 缺点 我们 开发 了 一个 Gentzen 风格 的 证明 系统 　 推导 规则 　 　 DCP 的 证明 系统 包含 了 一阶 逻辑 Gentzen 相继 式 演算 的 所有 公理 与 规则 其余 的 公理 、 规则 基本上 是 Dutertre 的 公理化 系统 S ′ ［ ］ 以及 文献 ［ ］ 中 DC 公理化 系统 的 相继 式 风格 的 对应 限于 篇幅 本节 仅 列出 与 “ chop ” 算子 、 特殊符号 ι 等 相关 的 部分 规则 及 DC 的 归纳 规则 　 　 除 基本 规则 外 DCP 中 还 包含 许多 功能强大 的 派生 规则 这些 规则 使得 证明 时 能够 利用 较大 的 证明 步骤 从而 使 证明 更 简洁 如 在 证明 含 ◇ □ 算子 的 定理 时 应用 模态逻辑 S 的 如下 规则 往往 更为 方便 这里 □ Γ 或 ◇ Δ 表示 有穷 公式 集 其中 每一 公式 或者 是 刚性 rigid 的 即 不 包含 任意 时序 变元 、 ι 和 模态 词 ； 或者 是 □ 或 ◇ 公式 即形 如 □ 或 ◇ 的 公式 　 　 下面 的 定理 ［ ］ 给出 了 我们 所 采用 的 相继 式 演算 的 可靠性 及 相对 完备 性 的 结论 　 　 定理 若 公式 β 是 DCP 的 定理 则 β 在 标准 的 区间 语义 模型 下永真 　 　 定理 若 公式 β 存在 一个 Hilbert 风格 的 证明 则 β 是 DCP 的 定理 　 规则 编码 　 　 首先 需 将 相继 式 及 规则 编码 到 元逻辑 中 相继 式 Γ → Δ 在 区间 i 处为 真的 含义 是 ： 存在 公式 A ∈ Γ Ai 为 假 或 存在 B ∈ Δ Bi 为 真 若 相继 式 在 任意 区间 上 都 为 真则 称 相继 式 永真令 GammaDelta 为 Form 类型 相继 式 编码 如下 ： seqGammaDeltabool ｜ － Gamma ＝ ＞ Delta 　 　 公式 的 有 穷集 通过 枚举 出 成员 的 方法 表示 引入 如下 算子 构造 有 穷集 ： emptyconsequentFormff 　 emptyantecedentFormttGammaXFormGamma ／ ＼ X 　 DeltaXFormDelta ＼ ／ X 这里 算子 用于 连接 有穷 集中 的 各个 成员 不同于 区间 逻辑 中 的 加乘 运算符 例如 相继 式 AB → CDE 在 DCP 内部 实际 表示 为 元逻辑 公式 seqenptyantdcedentABenptyconsequentCDE 由于 我们 修改 了 PVS 的 接口 上述 编码 对 用户 而言 是 透明 的 给出 上述 算子 的 定义 后 DCP 的 推导 规则 及 公理 就 可以 编码 为 元逻辑 的 公式 若 规则 或 公理 是 可靠 的 则 我们 还 应该 可以 证明 它们 是 元逻辑 的 定理 以 “ chop ” 算子 左 单调 性 规则 即 ILRa 为例 它 可以 编码 如下 ： ILRaTHEOREMseqGammaABDeltaANDseqGammaDelta ［ ］ C ＞ AIMPLIESseqGammaCBDelta 　 证明 命令 　 　 DCP 中 直接 与 用户 交互 的 是 一组 证明 命令 证明 命令 的 用途 是 选择 相应 的 规则 作用 于 当前 待证 目标 得到 一组 简化 的 子目标 或 结束 证明 证明 命令 通常 对应 于条 或 多条 推导 规则 可 视为 一些 “ 智能 ” 的 宏命令 换言之 所有 证明 命令 最终 都 可以 展开 为 一组 基本 的 PVS 证明 命令 这种 实现 方式 确保 了 当 引入 新 命令 时 不会 影响 系统 的 可靠性 　 　 DCP 的 基本 证明 命令 最终 都 是 通过 引入 编码 后 的 公理 或 规则 实例 实现 的 以 “ chop ” 算子 左 单调 命令 MONOCHOP 为例 DCP 首先 读入 用户 输入 并 将 其 与 编码 后 的 规则 ILRa 的 前提 进行 匹配 若 失败 则 显示 错误信息 并 退出 ； 否则 找到 GammaDeltaABC 的 代入 项 引入 实例 化后 的 规则 并 进行 化简 从而 将 当前 相继 式 规约 为 规则 ILRa 的 结论 DCP 的 大部分 证明 命令 都 对应 于 多条 规则 如 命令 NFLATTENNSPLIT 分别 对应 于 命题逻辑 中 产生 单一 子目标 、 产生 多子 目标 的 规则 实现 这些 命令 时 需要 对 多条 规则 一一 匹配 　 　 简单 命令 可用 PVS 策略 语言所 提供 的 顺序 、 条件 和 重复 等 结构 复合 而成 如 命令 NPROP 可 用于 证明 所有 命题逻辑 定理 它 是 通过 在 所有 待证 目标 上 反复 尝试 应用 命令 NFLATTEN 和 NSPLIT 实现 的 NPROP 定义 为 TRYNFLATTENNPROP 　 TRYNSPLITNPROPSKIP 这里 TRY 相当于 IFTHENELSE 结构 上式 将 首先 调用 命令 NFLATTEN 若 有 新 子目标 则 递归 调用 自身 否则 调用 下 一个 TRY 命令 　 　 复杂 证明 命令 大多数 通过 如下 步骤 实现 ： 首先 扫描 分析 当前 待证 目标 判定 需 应用 的 规则 ； 然后 根据 情况 可能 需要 对待 证 目标 作 一些 变换 并 将 推导 规则 所 表示 的 定理 实例 化 ； 最后 简化 目标 考虑 如下 简单 定理 ： 　 　 在 手写 证明 时 上述 定理 的 证明 过程 往往 被 忽略 而 错误 容易 出现 在 这种 被 忽略 的 地方 严格 的 形式化 验证 过程 不 应该 忽略 任何 细节 而 人们 通常 会 希望 类似 于 上面 的 “ 显而易见 ” 的 定理 能 由 辅助 证明 工具 自动 完成 在 DCP 中 如果 仅 使用 基本 规则 一个 可能 的 推导 类似 于 如下 手写 证明 ： 这里 Existintro 等 是 DCP 的 证明 规则 命令 规则 Existintro 的 功能 是 为 时序 变元 引入 skolem 常数 x ′ y ′ Chopmono 是 “ chop ” 算子 的 单调 性 规则 即 ILR 规则 Rigidout 将 所有 刚性 公式 移出 到 chop 算子 的 辖 域外 最后 Nassert 是 一条 复杂 的 命令 它 首先 对 当前 目标 作一 变换 然后 调用 实 线性 算术 的 自动 判定 过程 上述 的 证明 过程 也 可以 由 DCP 命令 Durchop 自动 完成 Durchop 是 一条 复杂 的 DCP 证明 命令 它 结合 了 一系列 在 上述 手写 风格 证明 中 出现 过 的 子 命令 完成 大量 琐碎 的 工作 首先 Durchop 扫描 当前 相继 式 寻找 一个 形如 p ∫ s ⌒ q ∫ s 的 前提 相继 式 公式 这里 p ∫ s 和 q ∫ s 是 关于 ∫ s 若 将 其 看做 变元 的 实 线性 算术 公式 然后 命令 Existintro 被 执行 以 引入 skolem 常数 通过 命令 Chopmono 和 Rigidout 相继 式 被 转换成 最终 可 直接 应用 DC 公理 的 形式 最后 通过 调用 实 线性 算术 的 自动 判定 算法 以 证明 当前 目标 在 DCP 中 还有 不少 类似 的 复杂 命令 正是 由于 这些 命令 的 存在 使得 大多数 琐碎 的 证明 步骤 得以 简化 　 应用 实例 　 　 考虑 一个 可能 会 发生 泄漏 的 煤气 燃烧 炉 ［ ］ 我们 希望 它 满足 安全 性质 ： 在 任何 大于 分钟 的 观察 区间 内 漏气 的 时间 不 超过 整个 观察 区间 的 该 需求 规范 可以 用 时段 演算 公式 描述 如下 ： 为了 满足 这一 需求 设计 人员 需要 作出 一些 决策 例如 根据 经验 如果 煤气炉 控制系统 满足 ： 任何 一次 漏气 事件 都 可以 在 秒 内 检测 到 ； 发现 一次 漏气 后 煤气炉 的 阀门 将 被 关闭 并 至少 等待 s 才 会 重新 打开 已知 这样 设计 的 煤气炉 是 满足 上述 安全性 的 上述 设计 策略 可以 用 DC 公式 描述 如下 ： 为了 验证 设计 符合规范 我们 需 证明 是 DC 的 定理 借助于 DCP 这一 形式化 验证 过程 被 机械化 了 当 证明 过程 成功 地 完成 时 我们 有 理由 确信 设计 的 正确性 上述 公式 在 DCP 中 描述 如下 ： 　 　 上 一节 中 给出 的 简单 定理 是 煤气炉 案例 的 一个 引理 下面 我们 给出 该 引理 在 DCP 中 的 证明 过程 以 给 读者 一些 印象 　 结束语 　 　 本文 描述 了 实时 区间 逻辑 的 一个 辅助 定理 证明 工具 DCPDCP 的 主要 优点 有 以下几点 ： 　 　 采用 相继 式 演算 作为 基本 证明 系统 一阶 逻辑 部分 的 证明 在 很大 程度 上 被 自动化 ； 　 　 由于 重写 技术 、 实 线性 算术 判定 算法 的 应用 很多 琐碎 的 证明 被 简化 ； 　 　 集成 了 一个 时段 演算 子集 的 自动 判定 过程 ； 　 　 与 PCDC 相比 DCP 很 容易 被 用户 扩充 如 增加 新 的 逻辑 算子 、 证明 命令 的 定制 等 　 　 目前 我们 正在 尝试 在 DCP 中 嵌入 一条 带 标记 的 相继 式 演算 初步 试验 表明 这一 演算 能 利用 语义 知识 来 指导 证明 搜索 过程 从而 进一步提高 证明 的 自动化 程度 致谢 　 DimitarPGelev 博士 细心 校读 本文 英文稿 初稿 徐启文 博士 、 DangVanHung 博士 、 周巢尘 教授 及 DeTfoRs 组 的 其余 组员 在 多次 讨论 中 提出 许多 有益 建议 我们 在 此 表示感谢 本文 研究 得到 国家自然科学基金 No ， 、 国家 高科技 项目 基金 NoZT 和 UNUIISTInternationalInstituteforSoftwareTechnologyUnitedNationsUniversity 项目 基金 资助 胡成军 （ 国防科学技术大学 计算机 学院 　 长沙 　 ） 王戟 （ 国防科学技术大学 计算机 学院 　 长沙 　 ） 陈 火旺 （ 国防科学技术大学 计算机 学院 　 长沙 　 ） 参考文献 ． HansenMRZhouChaochenStauntrupJArealtimedurationsemanticsforcircuitsInTAUACMSIGDAWorkshoponTimingIssuesintheSpecificationandSynthesisofDigitalSystemsPrincetonNJ ． RavnAPRischelHHansenKMSpecifyingandverifyingrequirementsofrealtimesystemsIEEETransactionsonSoftwareEngineering ～ ． ZhouChaochenHansenMRAnadequatefirstorderintervallogicIndeRoeverWPLangmaackHPnueliAedsInternationalSymposiumonCompositionality — — theSignificantDifferenceCOMPOSGermanyMalenteHolstein ． MoszkowskiBAtemporallogicformultilevelreasoningabouthardwareIEEEComputer ～ ． DutertreBrunoOnfirstorderintervaltemporallogicTechnicalReportNoCSDTRDepartmentofComputerScienceRoyalHollowayUniversityofLondon ． ZhouChaochenLiXiaoshanAmeanvaluecalculusofdurationsInRoscoeAWedAClassicalMindEssaysinHonorofCARHoareEnglewoodCliffsNJPrenticeHallInternational ～ ． ZhouChaochenHoareCARRavnAPAcalculusofdurationsInformationProcessingLetters ～ ． SkakkebkJUShankarNTowardsadurationcalculusproofassistantinPVSInLangmackHdeRoeverWPVytopilJedsFormalTechniquesinRealTimeandFaultTolerantSystemsLNCSMooktheNetherlandsSpringerVerlag ～ ． ShankarNOwreSRushbyJMThePVSProofCheckeraReferenceManualBetaReleaseComputerScienceLaboratoryMenloParkCASRIInternational ． MaoXiaoguangXuQiwenWangJiTowardsaproofassistantforintervallogicsTechnicalreportInternationalInstituteforSoftwareTechnologyUnitedNationsUniversity ． HansenMRZhouChaochenSemanticsandcompletenessofdurationcalculusIndeRoeverWPdeBakkerJWHuizingCedsRealTimeTheoryinPracticeREXWorkshopLNCSMooktheNetherlandsSpringerVerlag ～ ． HansenMRZhouChaochenDurationcalculuslogicalfoundationsFormalAspectsofComputing ～ ． HuChengjunDCPaproofassistantforintervallogicsTechnicalReportInternationalInstituteforSoftwareTechnologyUnitedNationsUniversity 收稿 修稿