计算机 应用 研究 APPLICATIONRESEARCHOFCOMPUTERSVolNoPAutoCADVisualLISPActiveX 编程技术 张旭 　 唐晓初 摘 　 要 ： VisualLISP 不但 提供 了 完全 可视化 的 代码 编写 、 调试 环境 ， 而且 还 可以 利用 先进 的 ActiveX 和 事件 反应器 技术 ， 使 其 比 传统 的 AutoLISP 开发 的 软件 更具 智能化 、 运行 更为 迅速 。 对 ActiveX 技术 在 VisualLISP 编程 中 的 应用 方法 作 了 详细 地 介绍 并 附以 相应 的 应用 实例 。 关键词 ： ActiveX 反应器 AutoCADVisualLISP 编程技术 　 　 AutoCAD 是 由 美国 Autodesk 公司 开发 的 通用 计算机辅助 绘图 、 设计 系统 。 由于 其 使用方便 、 灵活 ， 尤其 是 其 良好 的 开放性 ， 使 AutoCAD 已 成为 全世界 微机 CAD 系统 的 主流产品 。 AutoCAD 是 Autodesk 公司 于 年 月 推出 的 最新 版本 ， VisualLISP 作为 AutoLISP 的 更新换代 产品 被 正式 集成 其中 。 VisualLISP 给 用户 提供 了 一个 集成 的 开发 环境 ， 使 用户 可 在 易于 使用 的 完全 可视化 的 开发 环境 下 编写 、 调试 代码 ； 经过 编译 的 LISP 程序 不但 提高 了 运行 性能 ， 并 可 防止 他人 试图 获得 用户 程序代码 ； 通过 Windows 的 ActiveX 与 AutoCAD 的 对象 模型 接口 可 与 其它 软件 集成 。 本文 将 对 VisualLISP 编程 中 ActiveX 技术 的 应用 加以 讨论 并 附以 应用 实例 。 　 理解 AutoCAD 对象 模型 　 　 ActiveX 是 一组 软件技术 和 方法 的 总称 ， 是 Microsoft 公司 提出 的 一种 技术标准 。 ActiveX 允许 一个 Windows 应用程序 通过 暴露 的 对象 控制 另 一个 Windows 应用程序 。 几乎 每个 ActiveXAutomation 服务器 都 给 客户机 提供 一个 以上 的 对象 ， AutoCAD 也 不 例外 。 AutoCAD 显露 大约 个 对象 给 Automation 客户机 ， 这些 对象 带有 总共 约个 方法 和 属性 。 图 可 把 AutoCAD 对象 想象 成 按 层次 排列 的 ， 图 显示 了 这个 层次 的 部分 对象 ， 第一层 对象 就是 AutoCAD 应用软件 本身 。 这个 层次 图中 的 每个 对象 都 含有 在 它 下层 的 对象 。 例如 ， 应用软件 对象 Application 包括 优先 设置 对象 Preferences 、 文档 对象 Document 和 菜单 组 对象 MenuGroups 等 共 四个 对象 ， 而 文档 对象 又 包括 Blocks 块 、 Layers 层 、 Plat 绘图 等 对象 或 对象 集 。 图 　 创建 及 编辑 AutoCAD 对象 　 　 VisualLISP 提供 了 一组 以 vla 为 前缀 的 处理 AutoCAD 对象 的 函数 。 其中 vla 函数 对应 每 一个 ActiveX 方法 例如 ， vlaaddCircle 调用 addCircle 方法 ； vlaget 对应 每 一个 属性 ， 你 可以 通过 该 函数 获得 属性 的 当前 值 例如 ， vlagetColor 可 获得 某一 对象 的 颜色 属性 值 ； vlaput 函数 用以 更新 某 属性 的 当前 值 例如 ， vlaputColor 可 更新 某一 对象 的 当前 颜色 属性 值 。 由于 在 缺省 状态 VLISP 并 不 直接 支持 ActiveX 函数 ， 所以 在 调用 VLISPActiveX 函数 之前 还 必须 装载 这些 函数 的 支持 函数 vlloadcom ， 否则 函数调用 将 失败 。 按 ActiveXAutomation 的 原则 ， 对象 的 检索 是 以 自顶向下 的 方式 进行 的 。 ActiveX 支持 函数 装载 以后 ， 就 可以 调用 vlaxgetacadobject 函数 来 建立 与 AutocCADApplication 对象 的 链接 。 建立 链接 之后 ， 就 可以 遵循 AutoCAD 对象 模型 中 的 继承 关系 ， 逐级 访问 、 处理 所有 AutoCAD 对象 了 。 　 　 下面 的 代码 完整 展示 了 如何 在 AutoCAD 模型 空间 创建 一条 直线 和 一个 圆 实体 。 vlloadcom 调入 ActiveX 支持 函数 ； 建立 与 AutoCADApplication 对象 的 链接 setqacadObjectvlaxgetacadobject ； 链接 到 当前 图 setqacadDocumentvlagetActiveDocumentacadObject ； 链接 到 模型 空间 setqmSpacevlagetModelSpaceacadDocument ； 在 模型 空间 以为 圆心 为 半径 作圆 setqmycirclevlaaddCircle 　 　 mSpace 　 　 vlaxdpoint 　 　 　 　 　 ； 在 模型 空间 以为 起点 ； 为 终点 作 直线 setqmylinevlaaddLine 　 　 　 　 　 　 mSpace 　 　 　 　 　 　 vlaxdpoint 　 　 　 　 　 　 vlaxdpoint 　 　 　 　 　 　 　 当 对象 建立 以后 ， 就 可以 通过 修改 对象 的 属性 来 编辑 对象 了 。 下面 的 代码 将 上面 所 创建 的 圆 的 圆心 X 坐标 加 ， 颜色 改为 红色 ； 直线 的 线型 改为 dashed 。 setqmyCentervlagetcentermyCircle ； 取 圆心 坐标 setqcenterptvlaxsafearraylist 　 　 vlaxvariantvaluemyCenter 　 　 　 　 　 　 ； 将 变 体型 坐标 转变 为表 setqnewXaxiscarcenterpt ； X 坐标 加 setqnewcenterlistnewXaxis 　 　 　 　 　 　 　 　 cadrcenterpt 　 　 　 　 　 　 　 　 caddrcenterpt 　 　 　 　 ； 表型 新 坐标值 ； 更新 圆心 坐标 vlaputcentermyCirclevlaxdpointnewcentervlaputcolormyCircleacRed 更新 圆 颜色 vlaputlinetypemylinedashed ； 更新 直线 线型 　 　 需要 注意 的 是 ， ActiveX 函数 与 传统 的 AutoLISP 函数 在 实现 机理 上 有着 本质 的 不同 ， 因此 诸如 用 entget 函数 所得 实体 名 或 用 getpoint 所得 三维 坐标 点 等 是 不能 被 ActiveX 函数 直接 接受 的 ， 必须 做 相应 转换 才 可 。 如用 vlaxenamevlaobject 函数 可 将 AutoCAD 实体 名 转变 为 ActiveX 函数 可 接受 的 对象 ； 上 例 所用 函数 vlaxdpoint 是 将 AutoCAD 三维 坐标 转换 为 ActiveX 函数 所用 的 坐标 ； 而 上例 所用 函数 vlaxsafearraylist 则 是 将 变 体型 坐标 转换 为 AutoLISP 可 接受 的 表 。 　 集成 其它 应用程序 　 　 ActiveX 技术 的 一个 主要 应用 就是 协调 不同 的 应用程序 ， 在 它们 之间 相互 通讯 ， 把 这些 程序 的 能力 组合 起来 共同完成 某一 任务 。 这 也 是 VisualLISP 将 ActiveX 自动化 能力 集成 于 其中 的 主要 目的 。 下面 的 代码 用以 链接 到 已经 启动 的 MicrosoftExcel 对象 上 ， 并 将 当前 图中 模型 空间 内 的 所有 实体 的 对象 名 、 ID 号 、 层 、 颜色 及 线型 等 属性 值 写入 到 Excel 的 单元格 中 。 如果 Excel 未 启动 ， 可 改用 vlaxcreateobject 函数 启动 并 链接 之 ， 这里 就 不再 赘述 了 。 vlloadcom ； 调入 ActiveX 支持 函数 ； 建立 与 AutoCADApplication 对象 的 链接 setqAcadAppvlaxgetacadobjectsetqModelSpace 　 　 vlagetModelSpace 　 　 vlagetActiveDocumentAcadApp 　 　 　 ； 链接 到 模型 空间 ifequalnilexcxlScaleLinear ； 检查 一 Excel 常数 以 判断 Excel 对象 库 是否 输入 vlaximporttypelibrary 输入 Excel 对象 库 tlbfilenamecprogramfilesMicrosoftOfficeOfficeexcelolb 　 　 methodsprefixexm 　 　 propertiesprefixexp 　 　 constantsprefixexc 　 　 setqmsexcel 　 　 vlaxgetobjectexcelapplication 链接 Excelifnilmsexcel 　 prognsetqacsheet 　 　 　 　 　 expgetactivesheetmsexcel ； 链接 当前工作 表 　 　 setqnvlaxforentModelSpace ； 循环 扫描 模型 空间 实体 　 　 progn 　 　 setqnn 　 　 expputvalue 　 　 　 　 　 expgetrangeacsheet 　 　 　 　 　 　 　 strcataitoan 　 　 　 　 　 　 　 vlagetObjectNameent ； 取得 对象 名 属性 　 　 ； 向 Excel 单元格 An 写入 数据 　 　 expputvalue 　 　 　 　 expgetrangeacsheet 　 　 　 　 　 strcatbitoan 　 　 　 　 　 vlagetObjectIDent ； 取得 对象 ID 属性 　 　 ； 向 Excel 单元格 Bn 写入 数据 　 　 expputvalue 　 　 　 　 expgetrangeacsheet 　 　 　 　 　 strcatcitoan 　 　 　 　 　 vlagetLayerent ； 取得 层名 属性 　 　 ； 向 Excel 单元格 Cn 写入 数据 　 　 expputvalue 　 　 　 　 expgetrangeacsheet 　 　 　 　 　 strcatditoan 　 　 vlagetColorent ； 取得 颜色 属性 　 　 ； 向 Excel 单元格 Dn 写入 数据 　 　 　 　 expputvalue 　 　 　 　 expgetrangeacsheet 　 　 　 　 　 strcateitoan 　 　 　 　 　 vlagetLinetypeent 　 　 　 　 　 　 　 　 　 　 　 ； 取得 线型 属性 　 　 ； 向 Excel 单元格 En 写入 数据 　 　 ； endofvlaxforifequaln 　 　 alert 模型 空间 内未 发现 实体 ！ 　 　 ； endofprognalertMicrosoftExcel 链接 失败 ！ 　 使用 反应器 　 　 反应器 Reactor 是 一个 被 绑定 于 AutoCAD 对象 上 的 对象 。 通过 反应器 可以 使 AutoCAD 随时 监测 你 所 感兴趣 的 事件 的 发生 并 自动 调用 相应 的 程序 。 例如 ， 如果 用户 移动 了 一个 被 绑定 了 反应器 的 实体 ， 则 AutoCAD 将 注意 到 这次 移动 并 选择 恰当 的 动作 去 回应 这次 移动 ， 如 移动 与 之 相关联 的 其它 实体 等等 。 VisualLISP 支持 的 反应器 的 类型 包括 编辑器 反应器 VLREditorRector 、 数据库 反应器 VLRAcdbReactor 、 文档 反应器 VLRDocManagerReactor 、 连接器 反应器 VLRLinkerReactor 和 对象 反应器 VLRObjectReactor 。 每种 反应器 响应 一个 或 多个 AutoCAD 事件 。 例如 ， 文档 反应器 通知 你 的 应用程序 当前 图形 文档 的 每次 变化 ， 如 打开 一个 新 图 、 激活 了 一个 不同 的 文档 窗口 ； 对象 反应器 在 每次 指定 的 对象 发生 诸如 拷贝 、 移动 等 变化 时 通知 你 的 应用程序 。 再 如 ， 当 你 发出 一个 Save 保存 命令 以 保存 当前 图形 时 ， 将 发生 一个 vlrBeginSave 事件 ； 当该 保存 过程 结束 后 又 会 发生 vlrsaveComplete 事件 。 　 　 与 AutoCADRVLISP 不同 ， 从 AutoCAD 开始 ， 编辑器 反应器 被 细分 为 更 多 的 反应器 类型 ， 但 为 保持 向前 的 兼容性 ， VLREditorReactor 类型 仍 被 保留 了 下来 。 但 AutoCADVLISP 中新 的 编辑器 反应器 将 不能 通过 VLREditorReactor 引用 。 AutoCADVLISP 中 编辑器 反应器 类型 分为 ： VLRDWGReactor 、 VLRLISPReactor 、 VLRWindowReactor 等种 。 　 　 要 设计 一个 基于 反应器 的 应用程序 ， 就 必须 首先 确定 你 所 感兴趣 的 事件 ， 然后 再 编写 当该 事件 发生 时所要 执行 的 程序 即 回调 函数 callbackfunction 。 反应器 是 通过 回调 函数 同 应用程序 相互 通讯 的 ， 回调 函数 本身 并 无 任何 特别之处 ， 只是 一个 用 defun 函数 定义 的 标准 AutoLISP 程序 ， 只不过 当其同 事件 反应器 绑定 在 一起 时 就 成为 了 回调 函数 ， 这种 绑定 也 称为 建立 反应器 。 对于 建立 每种 类型 的 反应器 都 有 一个 与 之 相对 应 的 AutoLISP 函数 ， 而 这些 函数 的 函数 名 与 它 的 反应器 类型 名 相同 。 例如 ， vlracdbreactor 用以 建立 数据库 反应器 ， vlrtoolbarreactor 用以 建立 工具条 反应器 ， 等等 。 　 　 下面 的 实例 用以 建立 一个 对象 反应器 应用程序 ， printradius 是 一个 用以 显示 圆 半径 的 对象 反应器 回调 函数 。 defunprintradiusnotifierobjectreactorobjectparameterlistcond 　 　 vlaxpropertyavailablep 　 　 notifierobject 　 　 Radius 　 alertstrcatTheradiusisrtosvlagetradiusnotifierobject 　 　 　 　 　 　 　 　 　 　 下面 将 该 回调 函数 同一个 圆 绑定 在 一起 。 为此 ， 先 用 下列 语句 建立 一个 圆 实体 myCircle 。 setqmyCircle 　 prognsetqctrPt 　 　 　 getpointnCirclecenterpoint 　 　 　 　 　 radiusdistancectrPt 　 　 　 　 　 　 　 getpointctrptnRadius 　 　 　 　 　 　 　 　 　 　 　 　 　 vlaaddCircle 　 　 　 　 vlagetModelSpace 　 　 　 　 　 vlagetActiveDocument 　 　 　 　 　 　 vlaxgetacadobject 　 　 　 　 　 　 vlaxdpointctrPt 　 　 　 radius 　 　 　 　 　 　 　 　 　 再用 下面 语句 定义 反应器 。 setqcircleReactor 　 　 　 　 vlrobjectreactor 　 　 　 　 　 　 listmyCircle 　 　 　 　 　 　 CircleReactor 　 　 　 　 　 　 vlrmodifiedprintradius 　 　 　 　 　 　 该 反应器 将 回调 函数 printradius 同 vlrmodified 相连 并 绑定 于 myCircle 实体 上 。 这样 当该 实体 被 修改 时 ， 如用 STRETCH 命令 增大 圆 的 半径 ， 在 AutoCAD 窗口 将 自动 显示 修改 后 的 圆 半径 。 　 　 需要 注意 的 是 ， 虽然 回调 函数 是 标准 AutoLISP 函数 ， 但 还是 有 一定 限制 的 。 在 处理 图形 对象 时 不能 使用 command 函数 ， 而 必须 使用 ActiveX 函数 ， 如上 例中 创建 圆 实体 myCircle ； entget 和 entmod 函数 在 回调 函数 中 也 是 不 允许 使用 的 。 　 结束语 　 　 ActiveX 技术 的 应用 不但 方便 了 实体 对象 的 访问 ， 而且 与 传统 的 AutoLISP 程序 相比 速度 更 快 、 可读性 更强 。 最为 重要 的 是 ， 通过 Windows 的 ActiveX 与 AutoCAD 的 对象 模型 接口 集成 其它 应用程序 ， 更是 传统 AutoLISP 无法 实现 的 。 而 反应器 技术 的 应用 也 使 VLISP 应用程序 朝 智能化 方向 更加 迈进 了 一步 。 对 ActiveX 技术 的 支持 使 VisualLISP 上升 到 了 一个 崭新 的 阶段 ， 应用 前景 更为 广阔 。 张旭 抚顺 石油学院 抚顺 唐晓初 抚顺 石油学院 抚顺 参考文献 AutoCADVisualLISPDevelopersGuideAutodeskCOMicrosoftExcelVisualBasic 参考 MicrosoftCO 收稿 日期 ： 年月日