计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNo 一个 实时 数据库 管理系统 的 C 实现 冯汉华 　 古虹 　 王磊 摘要 ： 介绍 了 一种 使用 C语言 和 面向对象 技术 的 实时 数据库 管理系统 的 具体 实现 ， 并 阐述 了 面向对象 技术 对系统 测试 的 促进 关键词 ： 数据库 管理系统 ； 面向对象 ； 哈希 算法 ； 软件工程 ； 单元测试 CRealizationofARealtimeDatabaseManagementSystemFengHanhuaCuhongWangleiDeptofAutomationShanghaiJiaotongUnivShanghaiDeptofBiomedEngineeringShanghaiJiaotongUnivShanghaiStateKeyLabofOceanEngineeringShanghaiJiaotongUnivShanghai 【 Abstract 】 ArealtimedatabasemanagementsystemisrealizedusingClanguageandobjectorientedtechnologyinthispaperItisalsoillustratesthattheobjectorientedtechnologyhastheadvantageinsystemevaluation 【 Keywords 】 DatabasemanagementsystemObjectorientedHashingalgorithmSoftwareengineeringUnitevaluation 　 　 在 开发 某些 实时性 要求 比较 高 的 系统 中 ， 商用 数据库 管理系统 并 不 适用 。 实时 系统 往往 需要 用到 性能 较 好 、 系统 开销 比较 小 、 功能 要求 不强 但 需要 一些 特殊 功能 的 的 数据库 管理系统 ， 这种 数据库 管理系统 有时 必须 自己 开发 。 　 　 开发 和 维护 一个 数据库 管理系统 一般 需要 大量 的 人力 和 财力 ， 一般 的 小型 软件 开发商 是 很 难 胜任 的 。 本文 介绍 的 实时 数据库 管理系统 ， 是 在 很少 的 投资 下 完成 的 。 由于 使用 了 面向对象 技术 ， 不仅 开发 和 测试 过程 只 需要 一二 个人 ， 而且 研制 周期 也 大大缩短 。 现在 这个 系统 已经 在 某个 实时 调度 系统 中 投入 应用 并 稳定 运行 ， 达到 了 较 好 的 效果 。 　 系统 特点 　 　 不同于 往常 的 数据库 管理系统 的 实现 ， 这个 实时 数据库 管理系统 是 采用 C语言 和 面向对象 技术 实现 的 。 在 实现 的 过程 中 ， 整个 管理系统 按照 结构 分割 成 许多 子系统 ， 每个 子系统 对应 于 一个 对象 或 被 叫作 类 ， 以 完成 其 对应 的 一些 核心 功能 。 整个 数据库 管理系统 就是 由 许多 不同 的 对象 组合 成功 的 。 每个 对象 保持 相对 独立 ， 不仅 对 开发 ， 而且 对系统 测试 ， 都 大有 好处 。 　 　 面向对象 技术 把 开发 过程 分为 系统分析 、 系统 设计 和 对象 设计 个 过程 。 系统分析 是 基本 性 的 ， 而 系统 设计 却是 最 重要 的 部分 。 系统 设计 过程 中 ， 按照 结构 将 系统 分割 成 许多 类 ， 分割 的 好坏 决定 了 整个 系统 开发 过程 的 好坏 。 最后 在 对象 设计 过程 中 ， 程序员 可以 按照 这 种类 的 分割 ， 分别 完成 对应 的 代码 ， 最后 组装 起来 。 好 的 分割 可以 使 系统 复杂程度 大大 减小 。 每个 类 都 是 一个 小型 的 子系统 ， 这样 程序员 就 很 清楚 已经 完成 了 多少 开发 工作 、 后面 还有 多少 开发 工作 。 　 　 使用 面向对象 技术 也 大大简化 了 后面 的 系统 测试 工作 。 只要 熟悉 软件工程 并 具有 编写 大型软件 经验 的 人 都 应该 清楚 单元测试 的 重要性 。 面向对象 的 技术 为 模块 的 单元测试 提供 了 良好 的 环境 ， 单元测试 就 可以 按照 各个 类 分别 展开 。 只要 一个 类 的 一部分 方法 已经 实现 ， 单元测试 的 工作 就 可以 展开 了 。 可以 使用 黑箱 方法 来 测试 ， 为 每个 方法 编写 简单 的 测试程序 ， 让 它 在 不同 环境 下 调用 类 的 方法 ， 然后 根据 输入 和 输出 来 测试 结果 的 正确性 。 编写 类 实现 的 时候 ， 每个 方法 尽量 简单 ， 不要 有太多 分支 ； 对于 复杂 的 方法 可以 先 实现 一些 简单 的 方法 ， 然后 在 基于 这些 简单 的 方法 上 再 实现 较为 复杂 的 功能 。 这样 不仅 程序结构 简单 易懂 ， 而且 这时 黑箱测试 法 相当 奏效 ， 基本上 能 查出 绝大部分 错误 。 　 系统结构 　 　 整个 系统 的 结构 如图所示 。 在 这个 系统 中 ， 最 基本 的 类 有 两个 ： GObject 数组 对象 管理 类 和 GField 数据 单元 管理 类 。 GObject 在 整个 系统 中起 了 至关重要 的 作用 。 GObject 管理 着 一个 数组 ， 这个 数组 的 每个 记录 的 大小 是 在 对象 创建 的 时候 确定 的 ， 而 记录 的 个数 却是 可以 动态变化 的 。 使用者 可以 通过 GObject 的 功能 增加 或 减少 记录 个数 。 访问 每 一个 GObject 的 记录 需要 调用 一个 锁定 记录 的 方法 ， 这样 GObject 可以 通过 与 外存储器 交换 数据 的 方式 实现 巨型 数组 管理 。 GObject 内部 可以 通过 分页 机制 和 最少 最近 算法 实现 高效率 的 内 外存储器 交换 。 图 数据库 管理系统 的 实现 结构 　 　 虽然 GObject 实现 了 动态 增加 和 减少 记录 的 机制 ， 可是 它 能 做到 的 只是 在 末尾 增加 或 减少 记录 。 为了 能 实现 删除 任何 一个 记录 的 功能 ， 一个 从 GObject 类派 生出 的 新类 GPool 存储 池 管理 类 就 诞生 了 。 这个 类 的 基本 目的 就是 把 需要 被 删除 的 记录 放 回 一个 空闲 的 存储 池中 。 如果 这 条 记录 在 最后 ， 可以 考虑 调用 GObject 的 功能 释放 该 记录 ， 也 可以 为了 效率 暂时 保存 ， 等到 有 一定 批量 的 时候 再 删除 。 如果 这 条 记录 不 在 最后 ， 那么 可以 用个 链表 串 起来 ， 下次 如果 要 申请 分配 记录 时 ， 首先 考察 这个 链表 中 是否 有 可用 的 记录 ， 如果 没有 则 再 向 GObject 申请 分配 。 这个 简单 的 具有 废料 收集 功能 的 类 事实上 是 整个 系统 的 存储管理 核心 。 　 　 另外 一个 基本 类 GField 管理 一条 记录 的 若干 数据 单元 。 每个 GField 类 描述 了 一种 数据 记录 的 结构 ， 比如 有 多少 数据 单元 ， 每个 数据 单元 的 类型 、 字节数 以及 在 记录 中 的 位置 。 　 　 将 GField 类 和 GPool 类 结合 起来 就 形成 了 一个 基本 的 数据库 的 表 的 框架 ： GTable 数据库 表 管理 类 。 GField 类为 GTable 类 管理 每条 记录 中 的 数据 单元 的 读写 ， 而 GPool 为 GTable 完成 记录 的 增加 和 删除 工作 。 在 此基础 上 ， GTable 又 实现 了 一些 记录 的 查找 和 定位 的 功能 。 　 　 剩下 的 任务 就是 要 完成 索引 机制 了 。 这个 系统 实现 了 几个 通用 的 索引 表 的 实现 ： B 树 索引 表 和 哈希 索引 表 ， 还有 根据 特殊 的 实时 系统 的 要求 实现 的 层次 索引 表 。 下面 就 这种 表作 一个 简单 的 说明 ： 　 　 哈希 表 管理 类 GHash 管理 一个 哈希 表 。 它 直接 继承 自 GObject 。 哈希 表 本身 是 直接 根据 下标 来 访问 记录 单元 的 ， 不 需要 分配 释放 机制 。 下 标值 来自 于 一个 哈希 函数 。 在 这里 ， 哈希 函数 的 值 在 和 N 之间 ， N 可以 根据 索引 记录 数 规模 指定 。 如果 不同 的 索引 哈希 函数 值 相等 就 认为 是 哈希 函数 冲突 ， 哈希 表 管理 类 必须 有 一个 哈希 函数 冲突 算法 。 有 两种 方式 可以 用来 解决 这种 冲突 ： 方法 一是 如果 一个 哈希 表项 被 占用 ， 则 顺序 使用 下 一个 ， 如果 到 了 哈希 函数 最大 则 绕回 。 方法 二是 在 表项 N 之后 分配 。 无论 哪 种 方法 ， 为了 达到 高效率 都 有 一定 的 存储空间 的 浪费 。 但是 ， 无疑 哈希 索引 机制 是 效率 最高 的 索引 机制 之一 。 　 　 另外 两种 索引 方式 都 需要 有 一种 树型 的 管理 方式 。 首先 ， 我们 从 GPool 派 生出 GDLinked 双向 链表 管理 类 。 双向 链表 可以 为树型 结构 完成 一部分 功能 ， 因为 树型 结构 的 兄弟 节点 之间 可以 被 看作 一个 链表 。 GDLinked 类 提供 了 一组 方法 ， 可以 让 用户 维护 若干个 双向 链表 ， 在 链表 的 任何 位置 插入 、 删除 和 替换 记录 ， 并 有 计数 等 辅助 功能 。 我们 又 从 GDLinked 类派 生出 了 两个 类 ， 一个 是 具有 自由 子 记录 的 树型 结构 类 GQTree ， 还有 一个 是 最大 拥有 N 个子 记录 的 树型 结构 类 GNTree ， 其中 N 是 在 创建 类 的 时候 指定 的 。 这 两 种类 具有 不同 的 存储 结构 ： GQTree 类 每个 节点 占用 了 GObject 类 的 一条 记录 ， 而 GNTree 类 每个 节点 是 和 兄弟 节点 一起 占用 了 GObject 类 的 一条 记录 。 之后 ， 从 GQTree 类派 生出 了 GHier 类 ， 用于 管理 层次结构 的 层次 关键词 ， 又 从 GNTree 类派 生出 GBPTree 类 ， 实现 复杂 的 B 树 插入 删除 算法 。 　 　 最后 将 上述 的 所有 类 集合 在 一起 ， 就 形成 了 一个 数据库 管理 类 ， 也 就是 一个 数据库 管理系统 。 系统 提供 的 所有 数据库 管理 功能 都 被 包装 在 这个 数据库 管理 类里 。 　 系统 测试 　 　 在 面向对象 设计 的 时候 ， 每 设计 一个 对象 或者 一个 方法 ， 都 应该 想一想 如何 测试 它 。 尽可能 早 、 尽可能 容易 地 发现错误 ， 是 最 节约 时间 的 做法 。 有些 程序员 往往 带有 侥幸心理 ， 认为 编好 的 程序 可能 不会 有 很 复杂 的 错误 ， 然后 将 所有 测试 工作 留 到 整个 系统 完成 后 进行 。 这样 做 的 结果 是 ， 往往 会 让 程序员 花 几个 小时 来 跟踪 一个 本来 很 简单 的 错误 。 其实 这个 错误 在 一 开始 的 单元测试 中 ， 就 会 很 容易 被 发觉 并 处理 掉 。 用 面向对象 技术 实现 系统 的 时候 ， 每个 对象 基本上 可以 独立 形成 系统 ， 那么 一边 编写 代码 一边 做 单元测试 就 变得 轻而易举 且 自然而然 。 在 本 系统 中 ， 我们 为 GPool 、 GHash 、 GDLinked 、 GQTree 、 GNTree 、 GBPTree 和 GField 等等 各写 了 一个 测试程序 ， 这些 都 不 需要 在 整个 系统 完成 之后 进行 。 　 　 当 多个 程序员 协同 完成 项目 的 时候 ， 面向对象 技术 也 使 人员 之间 协作 变得 更加 容易 。 如果 每个 程序员 都 需要 等 别人 的 程序调试 完成 之后 再 完成 调试 ， 那么 整个 项目 的 完成 就 变得 遥遥无期 了 。 可是 我们 可以 考虑 面向对象 技术 ， 让 工作 变得 更 有序 。 以 这个 系统 为例 ： 假如 程序员 A 完成 GObject 类 的 编写 ， 而 程序员 B 完成 GPool 类 的 编写 当然 这样 分工 是 不 合适 的 ， 因为 GPool 类 依赖于 GObject 类 ， 但 有时 可能 必须 这样 分工 ， 可以 让 程序员 A 先 完成 一个 简单 的 GObject 类 版本 ， 不 需要 实现 分页 机制 和 最少 最近 算法 ， 只 需要 实现 一个 简单 的 分配 、 释放 和 记录 定位 的 功能 ； 然后 把 这个 版本 提交 给 程序员 B ， 程序员 B 在 这个 版本 上 进行 GPool 类 的 测试 ， 而 程序员 A 同时 完成 他 的 各种 算法 的 编写 和 测试 。 最后 程序员 A 向 程序员 B 提供 最终 版本 的 时候 ， 程序员 B 就 不 需要 重新 大量 测试 自己 的 那 一部分 了 。 　 结论 　 　 本文 讨论 了 一个 数据库 管理系统 的 实现 ， 它 将 面向对象 技术 使用 到 系统 开发 和 调试 的 各个环节 之中 。 在 这个 系统 的 开发 过程 中 ， 我们 深刻 地 认识 到 ： 面向对象 技术 是 一种 方法 ， 而 不是 一种 语言 。 如果 没有 把 面向对象 技术 的 思想 使用 到 系统 开发 中 ， 即使 使用 了 C 或 别的 面向对象 语言 ， 也 并 不能 带来 预期 的 效果 。 作者简介 ： 冯汉华 （ ～ ） ， 男 ， 工程师 ， 主研 方向 ： 数据库 作者 单位 ： 冯汉华 （ 上海交通大学 自动化系 ， 上海 ） 　 　 　 　 　 古红 （ 上海交通大学 生物医学 工程系 ， 上海 ） 　 　 　 　 　 王磊 （ 上海交通大学 海洋工程 国家 重点 实验室 ， 上海 ） 参考文献 MaguireSWritingCleanCodeMicrosoftPressKnuthDETheArtofComputerProgrammingVolumeFundamentalAlgorithmsAddisonwesleyPublishingCompanyIncStroustrupBTheCProgrammingLanguagendEditionAddisonwesleyPublishingCompanyInc 收稿 日期 ：