软件 学报 JournalofSoftwareVolNoP 基于 数据 分解 的 并发 面向对象 程序开发 方法 杨 大军 　 吕建摘 　 要 　 提出 了 一种 从 VDMSLViennadevelopmentmethodspecificationlanguage 规约 到 并发 面向对象 程序 的 开发方法 这种 方法 基于 DDVDMdatadecompositionViennadevelopmentmethod 在 此基础 上 提出 了 虚拟 原子 、 服务 并行 和 内部 并行 等 概念 继而 提出 一种 嵌套 面向对象 结构 来 体现 这些 功能 分别 从 共享 量 并行 系统 和 分布 并行 系统 的 角度 讨论 了 嵌套 面向对象 结构 的 实现 技术 关键词 　 形式化 方法 数据 分解 嵌套 面向对象 结构 并发 面向对象 程序设计 语言 中图法 分类号 　 TPADataDecompositionBasedDevelopmentMethodofConcurrentObjectOrientedProgramsYANGDajun 　 L ü JianStateKeyLaboratoryforNovelSoftwareTechnology 　 NanjingUniversity 　 Nanjing 　 YANGDajun 　 L ü JianInstituteofComputerSoftware 　 NanjingUniversity 　 Nanjing 　 Abstract 　 InthispaperamethodisproposedtodevelopaconcurrentprogramfromaVDM － SLViennadevelopmentmethodspecificationlanguagespecificationOnthebasisofDDVDMdatadecompositionViennadevelopmentmethodserviceparallelisminternalparallelismandvirtualatomicitycanbeobservedinthedevelopmentprocessThenanestedobjectorientedstructureispresentedtospecifytheseparallelismsThisnestedstructurecanbeimplementedwithseverallanguagestructuresfortwodifferentkindsofapplicationsincludingsharevariablesparallelsystemanddistributedparallelsystemKeywords 　 Formalmethoddatadecompositionnestedobjectorientedstructureconcurrentobjectorientedprogramminglanguage 　 　 并发 与 面向对象 的 结合 是 当前 程序设计 语言 的 主要 特点 之一 ［ ］ 然而 开发 高质量 、 高 可靠 度 的 并发 面向对象 程序 需要 一套 好 的 形式化 开发方法 VDMViennadevelopmentmethod ［ ］ 是 当前 较为 成熟 的 形式化 开发方法 之一 它 在 顺序程序 的 开发 中 已有 很多 成功 的 应用 ［ ］ 如何 将 VDM 方法 应用 于 并行程序 的 开发 是 一个 值得 探讨 的 问题 为 使 VDM 具有 开发 并行程序 的 能力 文献 ［ ～ ］ 提出 了 著名 的 relyguarantee 方法 并 进行 了 改进 近年来 这方面 工作 的 重点 开始 转移 到 面向对象 思想 与 VDM 的 有机 结合 上来 ［ ］ 但是 基于 VDM 的 并行程序 开发方法 还 存在 一些 不足 因此 我们 提出 了 比 VDM 更加 一般 的 形式化 方法 DDVDMdatadecompositionViennadevelopmentmethod ［ ］ 目前 这种 方法 已 得到 国际 上 同行 的 注意 和 认可 文献 ［ ］ 用 较大 的 篇幅 讨论 了 我们 所 提出 的 数据 分解 概念 及其 与 VDM ［ ］ 中 的 用于 开发 并行 面向对象 程序 的 退火 步 之间 的 关系 从 一个 侧面 说明 了 数据 分解 在 并行 面向对象 程序开发 中 的 潜在 作用 　 　 本文 采用 一种 与 VDM 完全 不同 的 途径 来 研究 并行 面向对象 程序 的 开发方法 提出 了 一种 基于 DDVDM 的 并行 面向对象 程序开发 方法 并 说明 在 某种意义 上 可用 数据 分解 与 转换 相结合 的 思想 来 表达 VDM 中 的 退火 步 同时 避免 了 后者 为 保证 正确性 而 增加 的 附加 推理 部分 其 基本 思想 是从 用 VDMSLViennadevelopmentmethodspecificationlanguage ［ ］ 表示 的 软件 规约 开始 用 DDVDM 中所 提供 的 数据 精化 、 操作 分解 和 数据 分解 对 其 加以 精化 和 分解 从而 得到 反映 开发 过程 的 树形 结构 然后 将 此 树形 结构 直接 对应 于 一种 嵌套 的 并行 面向对象 设计 结构 最后 可 根据 需求 分别 从 共享 量 并行 系统 和 分布 并行 系统 的 角度 将 此 嵌套 的 设计 结构 用 一定 的 语言 机制 加以 表示 和 实现 从而 完成 从 VDMSL 规约 到 并行 面向对象 程序 的 开发 过程 在 此 过程 中 利用 基于 模型 的 VDMSL 规约 与 类 规约 的 相似性 自然 地 将 DDVDM 与 面向对象 思想 有机 结合 起来 然后 利用 DDVDM 中 数据 分解 获得 的 多个 分解 类间 正交 的 特点 自然 地 引入 服务 并行 、 内部 并行 和 虚拟 原子 的 概念 　 基于 DDVDM 开发 基于 对象 的 并发程序 　 DDVDM 简介 　 　 DDVDM 作为 一种 软件开发 方法 与 VDM 一样 包括 形式 规约 和 可验证 的 设计 步 它 的 规约 语言 使用 VDM 的 规约 语言 VDMSLDDVDM 与 VDM 的 主要 不同 是 为 软件开发 引入 了 数据 分解 设计 步 它 可以 与 VDM 中 的 数据 精化 和 操作 分解 交叉 进行 DDVDM 的 主要 思想 是 数据 分解 从 概念 上 讲 数据 分解 包含 模型 分解 、 子 规约 形成 、 规约 重构 和 操作 分裂 这个 步骤 其中 最 重要 的 特点 是 同层子 模型 的 正交 性 详细 内容 和 例子 见 文献 ［ ］ 在 DDVDM 的 基础 上 我们 提出 了 一种 适合 并发 面向对象 程序 的 开发方法 　 主要 思想 　 　 模型 规约 与 面向对象 的 类 规约 间 极大 的 相似性 为 我们 开发 面向对象 程序 提供 了 先决条件 ； 数据 分解 带来 的 子 规约 间 的 不 相交 性为 我们 开发 并发程序 提供 了 基础 我们 的 主要 思想 正是 基于 此 具体 描述 如下 　 　 将 DDVDM 应用 于 面向对象 的 框架 DDVDM 是 建立 在 基于 模型 规约 的 基础 上 的 基于 模型 的 规约 主要 由 一 状态 集 的 定义 和 建立 在 此 模型 基础 上 的 操作 组成 因此 正如 文献 ［ ］ 描述 的 那样 可以 将 基于 模型 的 规约 看作 是 类 规约 将 模型 的 分解 看作 类 的 分解 其中 模型 中 的 状态 集 可以 看作 是 对 类 的 属性 而 操作 可以 看作 是 方法 于是 DDVDM 包含 了 面向对象 设计 方法学 　 　 开发 内部 并行 和 服务 并行 数据 分解 的 关键 特点 是 同层子 规约 间 的 独立性 这样 如果 原 规约 中 的 两个 方法 在 新 规约 中 被 划分 到 两个 不 具有 直接 或 间接 分解 关系 的 分解 类中 那么 这 两个 方法 就 可以 被 用户 并行 调用 于是 提供 了 服务 并行 另一方面 在 操作 分裂 过程 中 一个 方法 可以 被 实现 为 对 相邻 分解 类中 方法 的 顺序调用 因为 同层 分解 类 是 彼此 独立 的 它们 的 方法 间 不 存在 干扰 因此 顺序 地 调用 可以 转化 为 并行 的 调用 于是 引入 了 内部 并行性 　 　 虚拟 原子 性 根据 默认 的 规则 一个 对象 在 一个 时刻 仅能 有 一个 方法 被 调用 方法 的 执行 是 原子 性 的 但是 在 操作 分裂 中 一个 原子 动作 A 可能 被 分解 为 多个 更 深层次 分解 类中 的 更 小 原子 动作 的 并行执行 在 此 阶段 动作 A 已 不是 原子 动作 但 它 能够 达到 原子 动作 的 效果 于是 提供 了 一种 虚拟 的 原子 性 虚拟 原子 性 能够 兼顾 程序 的 正确性 证明 及其 执行 效率 　 　 数据 分解 引入 嵌套 面向对象 结构 概念 上 普通 的 面向对象 结构 本身 不 支持 服务 并行 和 虚拟 原子 性 于是 我们 提出 将 嵌套 的 面向对象 结构 直接 对应 于 使用 DDVDM 方法 得到 的 开发 树 从而 支持 这种 特殊 的 需求 　 　 集成 增加 并行度 的 转换规则 因为 外层 对象 的 方法 可以 限制 内层 对象 我们 希望 尽可能 早地 释放 外层 对象 的 方法 以 增加 并行度 在 文献 ［ ］ 中 的 转换规则 用以 对 这 一 需求 提供 有效 的 支持 　 例 　 子 　 　 我们 使用 文献 ［ ］ 中 World 的 例子 说明 我们 的 开发方法 图 所示 的 开发 树是 经过 数据 分解 得到 的 我们 可 进行 下面 的 开发 Fig 　 ThedevelopmentstructureofWorld 图 　 World 的 开发 结构 　 　 在 对 Marriage 进行 操作 分裂 后 Marriage 变为 对 分别 处于 两个 相邻 内层 对象 中 的 MarriageMale 和 MarriageFemale 的 调用 ； 根据 数据 分解 的 特点 Marriage 可以 直接 分解 为 并行 调用 这 两个 方法 即 　 　 MarriagemNamefName 　 　 　 maleMarriageMalem ‖ femaleMarriageMalef 　 　 end 这种 并行 就是 我们 所说 的 内部 并行 如果 方法 之间 存在 干扰 需要 使用 relyguarantee 方法 　 　 因为 MarMalSingMalNewMal 和 MarFemSingFemNewFem 分别 属于 不 相交 的 两个 分解 类 Female 和 Male 于是 一个 集合 中 的 任一 方法 与 另 一个 集合 中 的 任一 方法 可以 同时 被 调用 这种 并行 就是 所谓 的 服务 并行 　 　 因为 分解 类 Female 和 Male 能够 被 进一步 分解 为 更 小 的 分解 类 于是 原 规约 中 的 原子 动作 MarriageMale 和 MarriageFemale 可能 被 分解 为 更 深层次 的 更 小 的 原子 动作 CHGSMCHGMMCHGSFCHGMF 的 并行执行 这种 原子 性 就是 所谓 的 虚拟 原子 性 　 　 作为 上面 开发 的 结果 可以 用 如图所示 的 嵌套 面向对象 结构 表示 其中 WorldoMaleoFemaleoSingMaleoMarMaleoSingFemoMarFemo 被 认为 是 不同 的 对象 Fig 　 ThenestedobjectorientedstructureofWorld 图 　 World 的 嵌套 的 面向对象 结构 　 　 非 形式 地说 嵌套 的 面向对象 结构 具有 如下 含义 ： 　 　 嵌套 的 面向对象 结构 是 树结构 开发 过程 的 面向对象 直接 表示 　 　 为了 确保 类 规约 中 不变式 的 有效性 只有 原 规约 中 的 方法 能够 被 用户 调用 这部分 方法 由 Pub 标识 ； 对象 中 的 方法 能且 仅 能 调用 相邻 分解 类中 的 私有 方法 　 　 嵌套 面向对象 结构 执行 的 语义 可以 非 形式 地 描述 如下 一个 对象 可能 处于 活动 、 被 锁住 、 被 限制 和 空闲 这种 状态 当 一个 对象 正在 执行 一个 方法 时 它 处于 活动状态 处于 活动状态 的 所有 其他 方法 均 不能 被 调用 当 一个 对象 的 内部 对象 处于 活动状态 时 它 被 锁住 被 锁住 对象 的 所有 方法 均 不能 被 调用 当 一个 对象 的 外层 对象 处于 活动状态 时 它 被 限制 被 限制 对象 的 所有 公开 方法 均 不能 被 用户 调用 而且 私有 方法 仅能 被 相邻 外层 对象 调用 当 一个 对象 不 处于 上面 任何 一种 状态 时 它 处于 空闲 状态 很 明显 这个 语义 支持 内部 并行 、 服务 并行 和 虚拟 原子 性 　 　 关于 服务 并行 一个 重要 的 问题 是 如何 保证 不变式 成立 因为 几个 方法 在 相同 的 状态 空间 同时 操作 嵌套 面向对象 结构 的 语义 保证 能够 服务 并行 的 方法 分别 属于 不同 的 独立 对象 也就是说 它们 是 无 干扰 的 因此 我们 可以 将 服务 并行 看作 是 顺序 执行 其 最终 的 结果 是 一样 的 ［ ］ 于是 可以 用 方法 顺序 执行 的 方式 处理 不变式 这 就 保证 了 不变式 的 正确性 　 　 增加 并行度 的 转换 如果 我们 仔细 考察 嵌套 面向对象 结构 的 语义 就 会 发现 限制 并行 的 某些 因素 当 一个 外层 对象 中 的 方法 被 调用 时 内层 对象 就 会 受到限制 在 某些 情况 下 这种 限制 是 不必要 的 这个 问题 可以 由 文献 ［ ］ 中 的 转换规则 解决 例如 Marriage 可以 进行 如下 转换 ： 　 嵌套 结构 的 实现 与 转换 　 　 利用 数据 分解 我们 可以 得到 一个 嵌套 的 面向对象 结构 这个 嵌套 结构 是 概念 级 和 设计 级 的 在 开发 中 通常 可以 根据 不同 的 需求 和 条件 对 其 进行 不同 的 实现 　 嵌套 面向对象 结构 的 直接 实现 　 　 由于 嵌套 结构 是 以 对象 为 单元 的 而且 这个 结构 本身 具有 一定 的 语义 因此 直接 实现 通常 具有 下面 两重 含义 一方面 直接 实现 程序 的 组成 单元 应该 是 对象 而 不是 类 现有 语言 中 基于 原型 （ 或 对象 ） 的 面向对象 程序语言 可以 满足 这一 要求 另一方面 直接 实现 是 指 对象 执行 的 语义 应 体现 在 对象 结构 本身 不 需要 额外 的 同步 机制 进行 限制 具有 上述 性质 的 语言 可以 很 好 地 匹配 嵌套 面向对象 结构 我们 用伪 代码 将 其 框架 描述 如下 　 　 objectWorld 　 　 　 　 objects 　 　 　 　 　 　 objectMale 　 　 　 　 　 　 　 　 objects 　 　 　 　 　 　 　 　 　 　 objectSingMale 　 　 　 　 　 　 　 　 　 　 　 　 instancevariables 　 　 　 　 　 　 　 　 　 　 　 　 methods 　 　 　 　 　 　 　 　 　 　 　 　 endSingMale 　 　 　 　 　 　 　 　 　 　 　 　 objectMarMale 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 endMarMale 　 　 　 　 　 　 　 　 　 　 method 　 　 　 　 　 　 　 　 endMale 　 　 　 　 　 　 　 　 objectFemale 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 endFemale 　 　 　 　 　 　 methods 　 　 　 　 　 　 　 　 PubMarriage 　 　 endWorld 　 　 接口 可 有 两种 考虑 一种 是 方法 的 集合 即 嵌套 对象 中 所有 标识 为 Pub 的 方法 另 一种 是 对象 和 方法 集 组成 的 二元 组 其中 对象 是 这个 嵌套 对象 中 所有 标识 为 Pub 的 对象 而 方法 集是 在 此 对象 中 定义 的 所有 标识 为 Pub 的 方法 这样 嵌套 对象 的 用户 就 可以 通过 内部 对象 直接 调用 相应 的 方法 至于 选择 哪 种 接口方式 取决于 所用 的 实现 语言 和 开发 环境 由于 原 型式 面向对象 语言 在 实际 开发 中 很少 使用 因此 提出 了 下面 的 间接 实现 　 间接 实现 嵌套 结构 　 　 间接 实现 可能 出于 下面 两种 考虑 ： 一种 是 对象 间 嵌套 通过 类 的 嵌套 进行 描述 但 嵌套 结构 本身 并 不 反映 上面 嵌套 面向对象 结构 的 执行 语义 ； 另 一种 是 对象 的 嵌套 结构 由 普通 的 对象 结构 实现 嵌套 结构 本身 的 语义 由 其他 机制 间接 实现 　 　 类 嵌套 机制 这种 语言 设计 的 思想 是 ： 首先 对象 间 的 嵌套 表现 为 类间 的 嵌套 对象 作为 类 的 实例 ； 其次 作为 这个 嵌套 类 的 实例 对象 其 内部 对象 对 用户 提供 的 服务 均 在 最 外层 对象 存在 与 之 对应 的 接口 从而 在 内层 对象 与 外层 对象 之间 建立 了 客户关系 ； 最后 嵌套 类 的 结构 本身 不 具有 前述 嵌套 结构 的 语义 它 是 间接 地 通过 同步 机制 来 实现 的 其中 内部 类 的 提出 主要 是 考虑 内部 对象 对外部 对象 的 私有 性 和 对外 不 可见 性 这种 模型 将 在 另文 阐述 　 　 复原 数据 分解 为 我们 提供 了 一种 可 并行执行 的 面向对象 嵌套 结构 但是 在 对此 嵌套 结构 进行 直接 实现 时 需要 对 现存 语言 做 许多 扩充 工作 因此 可以 将 数据 分解 作为 一个 引入 并行 的 过程 一种 思想 的 记录 而 将 此 记录 以 某种 方式 反映 在 非 嵌套 结构 的 面向对象 语言 中将 其 称为 复原 是因为 多 模型 恢复 到 原来 的 单 模型 值得注意 的 是 保留 数据 分解 所得 的 私有 方法 并且 为了 保持 原多 模型 的 语义 需要 具备 其他 辅助 机制 如 同步 机制 和 多个 方法 可 同时 调用 的 可能性 （ 服务 并行 ） 　 　 上面 提到 的 各种 实现 方法 各有 优缺点 在 实际 的 开发 中 我们 应该 根据 应用领域 的 不同 支撑 工具 的 不同 、 以及 开发 的 时间 限制 和 系统 的 性质 作 合理 的 选择 　 嵌套 结构 的 转换 与 实现 　 　 在 一个 嵌套 结构 中 内部 对象 是 作为 外部 对象 的 一部分 存在 的 这样 嵌套 结构 就 有 以下 两点 局限性 ： 首先 它 限制 了 对 内部 对象 的 复用 ； 其次 这种 嵌套 的 结构 从 概念 上 只 适用 于 存在 共享 量 的 并行 系统 中 不 适合 于 分布式 环境 基于 上面 的 考虑 在 某些 环境 下 将 嵌套 的 结构 转换 为 平行结构 是 必要 的 这种 转换 如图所示 Fig 　 Transformationfromnestedstructuretoflattenedstructure 图 　 嵌套 结构 向 平行结构 的 转换 　 　 这种 转换 实际上 就是 将 对象 间 的 包含 关系 转换 为 对象 间 的 指引 关系 这 正是 VDM 中 退火 步所要 达到 的 目标 为了 避免 引入 VDM 中 的 附加 推理 部分 这种 转换 应 发生 在 软件开发 的 实现 阶段 　 　 在 将 嵌套 面向对象 结构 转换 为 平行 面向对象 结构 时 为了 保证 嵌套 结构 的 性质 这个 转换 必须 满足 以下 个 条件 在 平行结构 中 服务 对象 对 客户 对象 是 私有 的 即 客户 对象 拥有 服务 对象 的 私有 指引 （ 这是 嵌套 结构 隐含 的 ） 私有 指引 可以 通过 在 语法 级 对 参数传递 进行 限制 实现 用户 可见 的 是 客户 对象 不能 对原 内部 对象 直接 进行 存取 这是 为了 与 原 规约 保持一致 因而 要求 必须 在 客户 对象 中 提供 所有 用户 可见 的 接口 嵌套 结构 隐含 的 并行性 应该 在 平行结构 中 使用 同步 机制 来 实现 　 　 嵌套 结构 记录 了 每 一步 开发 有些 可能 是 不必要 的 、 繁琐 的 因此 在 将 嵌套 结构 转换成 平行结构 时 可以 不必 一一对应 以 World 为例 可以 有 如图所示 的 个 可 供选择 的 平行结构 这种 平行结构 很 容易 用 现存 的 面向对象 语言 结构 进行 实现 值得注意 的 是 应 根据 所 选 语言 的 机制 实现 原 嵌套 结构 的 语义 Fig 　 ThreekindsoftransformationsforthenestedstructureWorld 图 　 嵌套 对象 World 的 种 转换 方案 　 结 　 论 　 　 本文 在 DDVDM 的 基础 上 提出 了 一种 形式化 的 并发 面向对象 程序 的 开发方法 开发 过程 如图所示 它 是 VDM 方法 的 自然 扩充 易于 理解 便于 使用 值得 指出 的 是 使用 DDVDM 的 数据 分解 得到 的 并行 是 正交 并行 结构 是 树状 的 但 由于 DDVDM 还 包含 VDM 中 的 设计 步 使用 它们 能够 开发 更 复杂 的 并行 和 网状 的 结构 数据 分解 简化 了 一般 设计 步 使用 的 relyguarantee 方法 所 带来 的 复杂 规则 及其 证明 过程 这为 软件 开发者 提供 了 可选择性 我们 进一步 的 工作 主要 包括 基于 VDMSL 的 并行 面向对象 规约 语言 设计 和 将 上述 开发方法 有机 地 融合 进新 的 开发方法 之中 目前 这方面 的 研究 已 取得 阶段性 成果 相关 内容 将 另文 介绍 Fig 　 TheconcurrentobjectorientedsoftwareprocessusingDDVDM 图 　 基于 DDVDM 的 并发 面向对象 软件 的 开发 过程 本文 研究 得到 国家自然科学基金 （ No ） 、 国家 高科技 项目 基金 （ NoZT ） 、 国家 攀登 计划 基金 和 国家 杰出青年 科学基金 （ No ） 资助 。 杨 大军 （ 南京大学 计算机软件 新 技术 国家 重点 实验室 　 南京 　 ； 南京大学 计算机软件 研究所 　 南京 　 ） 吕建 （ 南京大学 计算机软件 新 技术 国家 重点 实验室 　 南京 　 ； 南京大学 计算机软件 研究所 　 南京 　 ） 参考文献 ． YangDajunZhangMingL ü JianThestudyofconcurrentobjectorientedprogramminglanguagesComputerResearchandDevelopment ～ 杨 大军 张鸣 吕建 并发 面向对象 程序设计 语言 研究 计算机 研究 与 发展 ～ ． JonesCBSystematicSoftwareDevelopmentUsingVDMndedEnglewoodCliffsPrenticeHallInc ． JonesCBShawRCFCaseStudiesinSystematicSoftwareDevelopmentEnglewoodCliffsPrenticeHallInc ． JonesCBDevelopmentmethodsforcomputerprogramsincludinganotionofinterface ［ PhDThesis ］ OxfordUniversity ． JonesCBSpecificationanddesignofparallelprogramsInProceedingsofIFIPNorthHolland ～ ． StolenKDevelopmentofparallelprogramsonshareddatastructures ［ PhDThesis ］ ManchesterUniversity ． JonesCBConstraininginterferenceinanobjectorienteddesignmethodInGaudelMCJouannaudJPedsTAPSOFTTheoryandPracticeofSoftwareDevelopmentLectureNotesinComputerScienceLondonSpringerVerlag ～ ． JonesCBApicalculussemanticsforanobjectbaseddesignnotationInBestEedCONCURthethInternationalConferenceonConcurrentTheoryLectureNotesinComputerScienceBerlinSpringerVerlag ～ ． L ü JianZhangJianyingAformalsoftwaredevelopmentmethodDDVDMJournalofSoftwaresupplement ～ 吕建张 建莹 形式化 软件开发 方法 DDVDM 软件 学报 增刊 ～ ． L ü JianIntroducingdatadecompositionintoVDMfortractabledevelopmentofprogramsACMSIGPLANNotices ～ ． GoldsackSLanoKD ü rrEHAnnealinganddatadecompositioninVDMACMSIGPLANNotices ～ ． GoldsackSJKentSJHFormalMethodsandObjectTechnologyLondonSpringerVerlag ～ ． DawesJTheVDM － SLReferenceGuideLondonPitman ． AptKROlderogERVerificationofSequentialandConcurrentProgramsndedNewYorkSpringerVerlag 收稿 修稿