软件 学报 JOURNALOFSOFTWARE 　 Vol 　 No 　 P 分布式 Ada 语言 系统 的 实现 张冰 　 李赣生 　 王华民 摘要 　 基于 Ada 参考手册 附录 E “ 分布式系统 ” 中 的 思想 提出 了 实现 分布式 Ada 语言 系统 的 一些 概念 和 设计 思想 并 给出 了 实现 分区 通信 子系统 的 具体 方案 在 此基础 上 通过 一些 前置 处理 并 利用 已 实现 的 分区 通信 子系统 的 接口 实现 了 分布式 Ada 语言 系统 最后 通过 一个 实例 具体 介绍 了 分布式 Ada 语言 系统 的 程序设计 方法 关键词 　 分区 远程 过程 调用 分区 通信 子系统 Stub 打包 解包 中图法 分类号 　 TPImplementationforDistributedAdaLanguageSystemZHANGBing 　 LIGansheng 　 WANGHuaminDepartmentofComputerScienceandEngineeringZhejiangUniversityHangzhou 　 Abstract 　 AccordingtoAdareferencemanualEsomeconceptsanddesignideasimplementedindistributedAdaLanguagesystemareintroducedinthepaperandthedetailedimplementationofthepartitioncommunicationsubsystemisgivenWiththeinterfacesofpartitioncommunicationsubsystemandsomepreprocessingstheremoteprocedurecallsindistributedAdalanguagesystemareimplementedFinallyanexampleisgivenKeywords 　 PartitionremoteprocedurecallpartitioncommunicationsubsystemStubmarshellingunmarshelling 　 　 Ada 程序设计 语言 及其 相应 的 运行 支撑 环境 能够 用于 开发 大型 软件工程 应用 项目 这些 工程 大多 涉及 嵌入式 计算机系统 但是 对于 涉及 松散 耦合 方式 的 分布式 群 机系统 的 工程项目 特别 是 必须 通过 通信 网络连接 的 嵌入式应用 来说 现有 的 Ada 语言 环境 不能 提供 有效 的 支持 分布式 Ada 语言 系统 就是 针对 这种 具体 的 群 机系统 环境 使 一个 完整 的 Ada 程序 分布 到 群 机系统 上 并行执行 　 　 在 国外 GNU 组织 和 美国 Colorado 大学 计算机系 都 曾 对 分布式 Ada 进行 开发 但是 都 无法 做到 既 遵从 Ada 规范 又 使 应用 开发人员 不 涉及 网络 编程 国内 一些 大学 和 研究 机构 在 分布式 程序设计 领域 中 对 C 和 C 做 的 工作 较 多 在 分布式 Ada 方面 还 没有 同类 的 工作 　 　 本文 讲述 的 分布式 Ada 语言 系统 遵循 Ada 参考手册 附录 E “ 分布式系统 ” 的 标准 并且 做 了 大量 的 前置 处理 工作 这样 对 应用 开发人员 来说 开发 分布式应用 系统 时 可以 快捷 、 方便 不用 考虑 网络通信 之间 的 细节 问题 同时 应用 开发人员 较少 地 接触 底层 通信 设施 从而 提高 了 整个 分布式应用 系统 的 安全性 　 分布式 Ada 语言 系统 设计 思想 　 　 Ada 语言 是 由 美国国防部 主持 设计 的 大型 公共 基础 语言 年 形成 国际标准 Ada 此后 为了 将 面向对象 的 特征 与 方法 融合 于 Ada 进一步 完善 Ada 的 功能 形成 了 新 的 标准 AdaAda 参考手册 附录 E 描述 了 分布式 Ada 语言 系统 的 设计 思想 ［ ］ ： 将 一个 完整 的 Ada 程序 划分 成 若干个 分区 每个 分区 都 对应 于 分布式系统 的 一个 节点 通过 分 区间 分工协作 来 完成 整个 系统 的 功能 分布式 Ada 程序 的 分区 是 库 单元 的 集合 　 　 在 分布式 Ada 语言 系统 中 远程 过程 调用 （ remoteprocedurecall 简称 RPC ） 是 不可 缺少 的 重要环节 通过 远程 过程 调用 分布式 Ada 语言 系统 中 各个 分区 将 有机 地 结合 起来 共同完成 整个 系统 的 任务 　 　 Ada 参考手册 附录 E 还 设计 了 分区 通信 子系统 （ partitioncommunicationsubsystem ） 这样 一种 接口 远程 过程 调用 就是 通过 调用 这个 接口 中 提供 的 各种 函数 来 完成 的 　 分布式 Ada 语言 系统 中 远程 过程 调用 基本 框架 　 　 在 分布式 Ada 语言 系统 中 远程 过程 调用 的 基本 框架 如图所示 Fig 　 BasicRPCframefordistributedAdalanguagesystem 图 　 分布式 Ada 语言 系统 的 RPC 基本 框架 　 　 在 实现 RPC 的 过程 中 引入 了 Stub 机制 客户 方 和 服务 方都 是 通过 各自 的 Stub 来 进行 远程 过程 调用 所谓 的 Stub 就是 分 区间 关于 通信 的 一段 程序代码 在 分布式 Ada 语言 系统 中 Stub 是 一段 对 分区 通信 子系统 中 接口 调用 的 程序代码 　 分布式 Ada 语言 系统 的 透明性 问题 　 　 AndrewsSTanenbaum 曾 给出 关于 分布式系统 透明性 的 种 描述 ［ ］ ： 位置 透明性 、 迁移 透明性 、 副本 透明性 、 并发 透明性 和 并行 透明性 　 　 在 Ada 附录 E 中 并 没有 对 透明性 进行 详细 的 描述 但是 透明性 是 分布式系统 的 关键 特征 之一 在 分布式 Ada 语言 系统 应 做到 ： 首先 利用 分布式 Ada 语言 系统 开发 分布式应用 程序 时应 方便 、 快捷 基本上 不必 涉及 网络 编程 ； 其次 以上 种 透明性 在 利用 分布式 Ada 语言 系统 开发 的 分布式应用 系统 中 都 能 实现 即 用户 在 对 远程 过程 进行 调用 的 时候 不必 考虑 调用 发生 的 位置 不必 了解 具体 的 调用 过程 所在 的 节点 不必 知道 访问 的 对象 是否 有 增加 可靠性 的 副本 同时 ， 多个 用户 可 共享资源 系统 中 对象 的 迁移 也 不受 改名 的 干扰 例如 ： 　 　 Ada 的 远程 过程 调用 形式 为 　 　 packageAis 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ＆ ＆ 在 一个 分区 中 　 　 　 　 　 pragmaRemoterCallInterfaceA 　 　 　 　 　 procedureP 　 　 　 　 　 　 　 endA 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 withA 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ＆ ＆ 在 另 一个 分区 中 　 　 packageBis 　 　 　 　 　 　 　 　 　 AP 　 　 　 　 　 　 　 　 　 　 　 　 ＆ ＆ 一个 远程 过程 调用 　 　 　 　 　 　 endB 通过 上面 的 程序 可以 看到 远程 过程 调用 的 形式 与 本地 调用 （ 包括 数据结构 ） 是 一致 的 因此 对于 发生 本地 过程 调用 或是 远程 过程 调用 系统 应 能 自动识别 这 就 要求 系统 做到 位置 透明性 在 底层 的 传输 实现 中 采用 了 TCPIP 协议 因此 ， 在 分布式 Ada 语言 系统 的 分区 设计 中 分区 与 相应 机器 的 IP地址 对应 就 解决 了 分布式系统 的 迁移 透明性 其余 的 透明性 问题 可以 通过 后面 的 例子 来 解释 　 分区 通信 子系统 的 实现 　 　 分区 通信 子系统 （ PCS ） 为 一个 分布式 程序 的 分区 之间 的 程序 提供 了 进行 通信 的 一组 接口 　 打包 和解 包 过程 的 实现 　 　 针对 打包 和解 包 PCS 中 提供 了 两个 函数 ： 　 　 procedurewritestreaminoutstringiteminimplementationdefined 　 　 procedurereadstreaminoutstringitemoutimplementationdefinedlastoutinteger 　 　 过程 write 提供 打包 的 功能 其中 参数 stream 为 打包 后 的 参数 流 作为 远程 过程 调用 参数 的 item 可以 是 整型 、 字符 型 、 浮点 型 、 字符串 型 、 枚举 型 、 记录 类型 等 类型 之一 设计 过程 中 利用 Ada 语言 中 提供 的 重载 机制 将 write 和 read 过程 中 的 参数 Item 类型 多样化 用户 调用 时 对于 write 不必 考虑 所 要 写入 流中 的 是 何种 类型 对于 read 不必 考虑 从流 中 读出 下 一个 类型 的 转化 问题 　 　 在 分区 通信 子系统 中将 参数 流 设计 为 字符串 的 形式 这种 形式 有 两个 优点 ： 字符串 的 操作 及 字符串 与 其他 类型 之间 的 相互 转换 便于 实现 系统 也 提供 了 一部分 函数 在 网络 传递 参数 流 的 底层 由 Linux 下 的 SUNRPC 软件包 实现 了 一些 基于 C语言 的 RPC 的 函数 这些 函数 都 是 建立 在 字符串 类型 的 基础 上 的 而 Ada 与 C 的 字符串 之间 没有 相互 转化 的 问题 　 　 在 对 客户 方 的 输入 流 设计 中 规定 一种 特殊符号 为 信息 之间 的 分隔符 ； 流 的 前端 必须 加入 特定 字符 用来 识别 同步 或 异步 调用 其后 是 要 调用 的 过程 名 及其 参数 在 对 服务 方 的 返回 流 设计 中 规定 流 的 前端 加入 特定 字符 用来 区别 调用 是否 成功 　 传输 过程 的 实现 　 　 利用 Linux 下 的 SUNRPC 软件包 可以 进行 基于 C语言 的 RPC 程序设计 这样 的 一个 RPC 的 实现 最 基本 的 要求 是 ： 在 服务 方 和 客户 方 要求 登记 双方 约定 的 远程 过程 的 程序 号 、 程序 版本号 和 过程 号 提供 输入 参数 和 输出 参数 的 类型 以及 网络 的 类型 ； 利用 外部 数据表示 标准 （ XDR ） 来 进行 参数传递 这个 软件包 提供 的 函数 也 有 不 全面 的 地方 ， 例如 无法 进行 多 参数传递 处理 复杂 的 数据结构 时 应用 开发人员 除了 事先 需要 做 大量 的 工作 — — 利用 XDR 语言 编写 复杂 的 数据结构 外 还要 参与 网络 编程 同时 操作 上 也 很 繁琐 因此 ， 纯粹 依赖 Linux 下 的 SUNRPC 软件包 是 无法 完成 分布式 Ada 语言 系统 的 要求 的 　 　 为此 在 设计 中先 实现 了 一个 传递 字符串 的 RPC 过程 cstub 这个 过程 构成 了 传输 过程 的 主体 它 可以 完成 同步 字符串 远程 传递 和 异步 字符串 远程 传递 前者 发送 一个 字符串 并 等待 接收 一个 字符串 后者 发送 一个 字符串 后 立即 返回 　 　 PCS 在 客户 方 提供 了 以下 过程 ： 　 　 proceduredorpcpartitioninpartitionidparamsinstringresultoutstring 　 　 proceduredoapcpartitioninpartitionidparamsinstring 　 　 过程 dorpc 提供 了 同步 远程 过程 调用 的 功能 它 的 个 参数 分别 为 分区 号 、 输入 参数 流 和 输出 参数 流 过程 doapc 提供 了 异步 远程 过程 调用 的 功能 它 的 两个 参数 分别 为 分区 号 和 输入 参数 流 　 　 分区 号 是 指 提供 远程 服务 的 节点 名称 当 调用 发生 后 dorpc 把 分区 号 、 相关 参数 打包 后 传递 给 过程 cstub 由 cstub 向 分区 号 规定 的 服务 方 发送 输入 参数 流当 cstub 接收 到 返回 参数 流后 再 将 此参数 流 返回 给 dorpc 来 处理 解包 工作 　 　 PCS 在 服务 方 提供 了 过程 ： 　 　 procedureEstablishRPCReceiver 　 　 过程 EstablishRPCReceiver 是 个 无 参数 的 过程 它 的 主要 作用 是 初始化 网络 接收 和 发送 参数 流 这个 过程 只有 在 服务 方 前置 处理 生成 的 另 一个 Ada 程序 的 配合 下 才能 完成 服务 方 的 stub 工作 　 前置 处理 的 有关 工作 　 　 在 客户 方 前置 处理 的 目的 是 为了 使 应用 开发人员 在 使用 本 系统 时 不必 考虑 网络 编程 的 细节 前置 处理 所 做 的 工作 是 对 标记 了 pragmaRemoteCallInterface 的 程序包 规格 说明 进行 处理 生成 一个 相同 名字 的 程序包 体在 用户 发出 类似 本地 调用 的 远程 调用 时即 激发 了 此 包体 中 相同 名字 的 过程 此 过程 通过 调用 PCS 中 的 接口 完成 了 打包 、 发送 、 接收 、 解包 等 stub 的 任务 例如 某 远程 程序包 规格 说明 如下 ： packagetestfuncis 　 　 pragmaRemoteCallInterfacetestfunc 　 ＆ ＆ 表示 testfunc 是 一个 远程 程序包 　 　 　 　 functiontestfunciinintegerjinintegerreturninteger 　 　 　 　 endtestfunc 上面 这个 程序包 规格 说明 经 前置 处理 后 自动 生成 的 程序包 体 如下 ： withadarpcuseadarpcpackagebodytestfuncis 　 　 functiontestfunciinintegerjinintegerreturnintegeris 　 　 inparamsresultstringimplementationdefined ＆ ＆ 可 根据 用户 要求 定义 长度 resultparamsinteger ＆ ＆ 返回 的 参数 lastinteger ＆ ＆ 指示 当前 参数 流中 的 位置 　 　 begin 　 　 　 　 　 　 　 　 　 　 writeinparams “ testfunc ” 打包 过程 writeinparamsi 打包 过程 writeinparamsj 打包 过程 dorpcpartitionidinparamsresult 分区 号 在 程序包 初始化 中 定义 lastreadresultresultparamslast 解包 过程 returnresultparams 　 　 endtestfunc 　 　 endtestfunc 　 　 可以 看到 用户 在 调用 远程 过程 testfunctestfunc 时 却 激发 了 本地 新创建 testfunc 程序包 中 的 函数 testfunc 这个 testfunc 函数 通过 调用 PCS 的 接口 完成 了 客户 方 stub 的 所有 任务 　 　 在 服务 方 前置 处理 也 对 标记 了 pragmaremotecallinterface 的 程序包 规格 说明 进行 了 处理 生成 一个 Ada 程序 adacallfunc 它 可以 完成 打包 、 解包 、 信息 分析 和 相关 过程 调用 的 工作 当 服务 方 启动 了 过程 AdarpcEstablishRPCReceiver 接收 到 客户 方 的 参数 流后 将 控制权 交给 adacallfunc 进程 并 把 参数 流传 递给 adacallfunc 由 adacallfunc 进程 对 参数 流 进行 解包 并 根据 解包 后 的 参数 执行 相关 过程 随后 将 应 回传 的 参数 打包 并 交给 EstablishRPCReceiver 由 EstablishRPCReceiver 将 参数 流 回 传给 客户 方 至此 完成 了 服务 方 的 Stub 工作 下面 将 通过 一个 分布式 问题 的 解决 方法 介绍 如何 利用 Adarpc 程序包 和 一些 相关 的 前置 处理 来 设计 一个 分布式 Ada 应用 系统 　 一个 分布式 问题 ： 模拟 电梯 控制 　 　 这个 例子 取自 文献 ［ ］ 但 本文 对 这个 问题 的 处理 与其 不同 　 　 设 电梯 的 运行 控制 模式 如下 当 客人 要求 电梯 服务 时 控制中心 收到 客人 所在 楼层 及 要求 的 方向 等 信息 控制中心 向 每个 电梯 发出 查询 信号 并 接收 到 每个 电梯 返回 的 当前 所在 楼层 及 运行 情况 （ 向上 、 向下 或 静止 ） 控制中心 根据 这些 信息 利用 某种 算法 命令 最 适合 的 电梯 在 客人 要求 的 楼层 进行 服务 　 　 根据 分布式 Ada 程序设计 思想 将 这样 的 一个 电梯 控制程序 划分 为个 分区 （ 如图所示 ） ： 控制中心 分区 、 电梯 分区 和 客人 分区 并 编写 了 相关 的 分布式 Ada 程序 Fig 　 Partitionsofrsimulatingliftcontrol 图 　 模拟 电梯 控制 的 分区 划分 　 　 这个 分区 分别 分布 在 台 微机 上 完成 的 功能 是 ： 客人 分区 向 控制中心 分区 发送 所在 楼层 和 要 上 或 要 下 的 请求 控制中心 接到 请求 后 立即 向 电梯 分区 发出 查询 信息 当 每个 电梯 的 所在 楼层 和 运行 情况 返回 控制中心 分区 后 控制中心 分区 将 结合 客人 的 情况 指示 最合适 的 电梯 到达 客人 所在 的 楼层 并 向 客人 分区 返回 为 其 服务 的 电梯 的 序号 　 　 作为 服务 方 的 电梯 分区 提供 的 主要 程序 （ 这里 省略 了 程序包 的 具体 实现 ） 有 ： filenameliftcontrolads 　 　 　 　 　 　 　 　 电梯 分区 提供 远程 程序包 的 规格 说明 packageliftcontrolis 　 　 　 pragmaRemoteCallInterface 　 　 　 procedurequestliftliftnuminintegerdirectionoutintegerlayeroutinteger ； 　 　 　 接受 控制中心 的 查询 返回 电梯 的 运动 方向 和 所在 楼层 　 　 　 functioncontrolliftliftnuminintegerlayerinintegerreturninteger ； 　 　 　 接受 控制中心 的 指令 命令 指定 的 电梯 前往 指定 的 楼层 返回值 表示 指令 是否 有效 endliftcontrol 　 　 作为 既 是 服务 方 又 是 客户 方 的 控制中心 分区 提供 的 主要 程序 有 ： filenamecontrolfuncads 　 　 　 　 　 　 这是 控制中心 提供 的 远程 程序包 的 规格 说明 packagecontrolfuncis 　 　 　 pragmaRemoteCallInterface 　 　 　 functionrequestfunclayerinintegerupordowninintegerreturninteger 　 　 　 接受 客户 的 请求 后 对 电梯 分区 进行 查询 并 通过 一个 最佳 电梯 算法 来 决定 某 电梯 进行 服务 　 　 　 然后 发出 相关 指令 最后 返回 给 客户 将要 进行 服务 的 电梯 号 endcontrolfunc 　 　 以上 是 应用 开发人员 应写 的 程序 （ 作为 客户 方 的 客人 分区 的 程序 较为简单 从略 ） 在 分布式 Ada 语言 系统 中 所有 的 前置 工作 都 由 预 处理器 PP 来 完成 同时 PP 还 根据 应用 开发人员 编写 的 系统配置 来 完成 分区 工作 在 这个 例子 中 ， PP 分别 对 controlfuncads 和 liftcontrolads 两个 文件 进行 处理 在 每个 分区 都 生成 一个 具有 stub 功能 的 程序 并 在 每个 提供 服务 的 分区 都 生成 一个 侦听 程序 用于 侦听 客户 方 发来 的 请求 这些 前置 处理 生成 的 程序 和 用户 编写 的 程序 经 编译 生成 可执行文件 后 再 分布 到 各自 的 节点 上 即可 运行 　 　 从 上面 这个 例子 看 应用 开发人员 设计 的 分布式 程序 和 普通 的 程序 几乎 没有 区别 不必 考虑 远程 过程 的 位置 和 发生 调用 的 具体 细节 由于 底层 实现 的 传输 实体 是 基于 Linux 下 的 SUNRPC 完成 的 而 SUNRPC 支持 并发 和 并行 的 透明性 因而 利用 本 系统 开发 的 应用 系统 也 支持 并发 和 并行 的 透明性 在 这个 例子 中 如果 存在 多个 客人 分区 它们 之间 将 互不 干扰 可以 并行 运行 对于 副本 透明性 由 应用 开发人员 决定 是否 需要 增加 副本 　 结束语 　 　 Ada 语言 是 大型 软件工程 语言 同时 在 嵌入式 系统 中 得到 广泛 的 应用 但是 嵌入式 系统 大都 是 分布式系统 如果 应用 系统 的 程序 是 用 没有 分布式 特征 的 Ada 语言 书写 的 为了 实现 分布 应用 开发人员 就 不得不 自己 进行 大量 的 网络 编程 来 实现 远程 过程 调用 和 不同 节点 上 的 程序 之间 的 通信 这些 工作 应用 开发人员 都 是 可以 做到 的 但是 在 这些 细节 问题 上 必须 花费 大量 的 时间 使用 本 系统 提供 的 功能 之后 分布式 的 程序设计 就 与 普通 的 程序设计 没有 什么 差别 了 可以 忽略 网络 编程 和 远程 通信 与 调用 的 大量 细节 这 就是 本 项目 的 主要 目的 作者 张冰年生 硕士生 主要 研究 领域 为 编译 软件工程 并行处理 李赣生 年生 教授 ， 博士生 导师 主要 研究 领域 为 软件工程 编译 软件 自动化 王华 民女 ， 年生 副教授 ， 主要 研究 领域 为 程序设计 语言 与 实现 软件工程 本文 通讯联系 人 李赣生 ， 杭州 浙江大学 计算机科学 与 工程系 作者 单位 ： 张冰 浙江大学 计算机科学 与 工程系 　 杭州 　 李赣生 浙江大学 计算机科学 与 工程系 　 杭州 　 王华民 浙江大学 计算机科学 与 工程系 　 杭州 　 参考文献 ， ISOIECEAdareferencemanual — — languageandstandardlibraries ， TanenbaumASDistributedoperatingsystemEnglewoodCliffsNJPrenticeHallInc ， WellingsAJIssuesindistributedprocessingsessionsummaryInProceedingsofthestInternationalWorkshoponRealTimeAdaIssuesACMAdaLetters ～ 本文 收到 原稿 收到 修改稿