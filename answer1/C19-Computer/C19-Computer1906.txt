微型机 与 应用 WEIXINGJIYUYINGYONG 　 Vol 　 No 　 PCORBA 在 TINA 网络 和 业务管理 中 的 应用 李欣 舒斐 张顺 颐 摘要 ： CORBA 规范 定义 了 能 支持 互操作性 的 接口 和 业务 ， TINA 为 基于 CORBA 的 业务 开发 和 网络管理 应用 定义 了 框架结构 ， 文中 给出 了 具体 的 应用 方法 及其 与 当前 使用 较 多 的 TMN 框架 的 互操作 。 关键词 ： CORBA 规范 电信 管理 网 分布式 处理 环境 　 　 CORBA （ CommonObjectRequestBrokerArchitecture ） 作为 在 异构 环境 中 实现 对象 之间 进行 交互 的 参考模型 ， 已 应用 于 各种 设备 ， 得到 了 很多 操作系统 的 支持 。 CORBA 成功 的 关键在于 它 解决 了 互操作 的 问题 ， 可 支持 个 或 多个 不同 领域 的 管理 应用 之间 的 通信 ， 允许 不同 厂家 的 第三方 产品 集成 ， 其 实现 与 具体 的 语言 和 平台 无关 。 　 　 TMN 体系结构 为 不同 类型 的 操作系统 和 电信 网络设备 之间 的 管理 信息 交换 定义 了 一系列 标准接口 。 它 提出 了 一个 “ 管理者 代理 ” 模型 ， 只要 支持 同一个 协议 栈 ， 就 可以 互相 通信 。 所有 的 信息 模型 都 是 由 ITUT 负责 定义 的 ， 用 面向对象 的 观点 来 看待 网络 中 物理 资源 和 逻辑 资源 每个 资源 都 能 抽象 为个 对象 。 虽然 许多 网络管理 开发商 已经 成功 地 应用 了 TMN 的 体系结构 ， 但 还是 存在 下列 问题 ： 　 　 （ ） 如何 从 专有 的 中间件 过渡 到 多 平台 ， 并 以 尽可能 低 的 开发成本 ， 增加 开放性 和 灵活性 。 　 　 （ ） 简化 高层 的 功能 集成 ， 在 业务 管理层 使用 TMN 概念 ， 引入 ODP （ ObjectDistributedProcessing ） 和 TINA （ TelecommunicationsInformationNerworkingArchitecture ） 的 概念 。 　 　 （ ） 与 不 支持 OSI 管理 的 客户 管理系统 的 互操作 。 　 　 考虑 到 电信 管理软件 的 分布 特性 ， 可 使用 CORBA 来 解决 上述 问题 。 OMG 定义 了 一系列 CORBA 服务 ， 方便 了 分布式应用 的 建立 。 TINA 是 建立 在 基于 CORBA 的 分布式 处理 环境 （ DistributedProcessingEnviroment ） 上 的 ， 由于 它 强调 全球 范围 内 开放 电信 市场 的 网络 和 业务管理 ， 正 得到 越来越 广泛 的 注意 。 许多 国际标准 认为 基于 CORBA 的 TMN 系统 是 灵活 的 ， 允许 在 现有 系统 从 TMN 到 TINA 的 平滑 过渡 。 对象 技术规范 CORBA 　 　 CORBA 是 OMG 提出 的 一种 基于 分布式应用 开发 的 软件体系结构 。 ORB 提供 了 对象 间 发送 请求 、 接收 应答 的 透明 机制 ， 实现 了 异构 分布式 环境 下 不同 系统 之间 的 互操作 。 对 建立 在 CORBA 上 的 应用 组件 ， 其 接口 用 IDL 定义 ， 用 某种 具体 的 编程语言 实现 。 这样 ， 个 CORBA 应用 包含 的 对象 之间 可以 通过 ORB 机制 相互 通信 。 在 交互 的 个 对象 实体 中 ， 个 作为 客户端 ， 有权 访问 对象 参考 并 激活 对象 接口 所 定义 的 操作 ， 另个 作为 服务器 ， 由 对象 实现 接收 操作 请求 及 参数 ， 执行 完毕 后 将 结果 返回 给 客户端 。 客户端 和 服务器之间 的 通信 在 CORBA 平台 上 实现 ， 对 它们 自身 是 不 可见 的 。 对象 定位 、 对象 实现 的 透明性 是 CORBA 的 主要 优点 之一 。 同时 ， CORBA 制订 了 一系列 协议 ， 允许 驻留 在 不同 ORB 的 对象 进行 透明 通信 ， 简化 与 其它 环境 下 现有 协议 的 集成 ， 如 OSF 的 DCE 、 Microsoft 的 COM 等 。 　 　 一个 对 服务器端 对象 实现 的 请求 包括 几种 机制 ， 如图所示 。 图 CORBA 请求 处理过程 　 　 一种 最 简单 的 情况 是 静态 激活 ， 客户端 知道 服务器端 IDL 接口 的 情况 ， 由 IDL 服务器端 接口 自动 生成 客户端 Stub ， 它 负责 将 客户端 的 请求 从 编程语言 的 形式 转化成 目标 对象 。 服务器端 对象 根据 IDL 规范 ， 自动 生成 skeleton ， 对 目标 对象 执行 相反 的 操作 ， 重新 转化成 编程语言 ， 完成 任务 ， 这样 就 实现 了 异构 系统 之间 的 互操作 。 ORB 负责 激活 目标 对象 ， 当 对象 实现 完成 一个 请求 ， 就 将 控制 和 输出 返回 到 客户端 。 　 　 有些 应用 在 开始 时 并 不 了解 要 使用 的 接口 ， CORBA 通过 引入 动态 激活 界面 （ DII ） 和 动态 框架 界面 （ DSI ） 提供 了 动态 激活 机制 。 使用 界面 仓库 ， 它们 就 可以 获得 注册 和 访问 IDL 接口 的 权限 。 使用 DII ， 客户端 能 建立 请求 ， 利用 从 IR 动态 检索 得到 的 信息 并 激活 个 操作 。 动态 的 激活 方式 给 ORB 模型 提供 了 极大 的 灵活性 ， 而 客户端 和 服务器端 无需 了解 此 方法 是 静态 的 还是 动态 的 。 对象 适配器 提供 了 访问 ORB 服务 的 对象 实现 ， 是 完成 与 其它 对象 系统 之间 互操作 的 关键 组成部分 。 目前 ， 使用 最多 的 对象 适配器 是 基本 对象 适配器 ， 它 提供 了 对象 参考 生成 、 方法 激活 、 实现 注册 等 。 OMG 还 定义 了 一系列 CORBA 服务 ， 如 名字 服务 、 事件 通知 服务 等 ， 可以 运行 在 所有 的 平台 上 。 TINA 模型 　 　 TINA 的 研究 目标 是 定义 一种 能 在 开放 的 电信 市场 上 提供 和 应用 全球化 业务 的 体系结构 。 一个 业务 的 定义 是从 企业 模型 的 规范 开始 的 ， 包括 该 业务 中 的 角色 ， 如 业务 和 网络 提供者 、 管理者 及 各种 用户 ， 也 包括 各 角色 间 的 关系 。 这些 关系 不仅仅 是 管理者 代理 关系 ， 也 可以 处理 具有 协商 能力 的 端端 之间 的 关系 ， 当 需要 处理 包含 不同 类型 角色 的 控制 和 管理 服务 时 ， 建立 这些 关系 类型 的 模型 就 显得 格外 重要 了 。 随着 新 的 服务 不断涌现 ， 需要 提供 一个 通用 模型 ， 来 满足 现有 和 将来 的 各种 服务 的 要求 。 ． TINA 的 会晤 概念 　 　 从 计算 的 观点 来看 ， TINA 认为 所有 的 软件 对象 都 运行 在 分布式 处理 环境 上 ， 这 意味着 计算 对象 之间 的 交互 遵循 着 客户机 服务器 模式 ， TINA 为 建立 这种 模型 定义 了 会晤 的 概念 。 　 　 一个 会晤 定义 了 业务 成员 间 的 关系 ， 会晤 管理 包括 建立 、 激活 、 修改 、 支持 和 完成 会晤 的 各种 功能 。 通过 会晤 机制 ， 不同 类型 的 终端 可以 在 不同 时间段 使用 各种 电信业务 。 　 　 TINA 定义 了 种 不同 类型 的 会晤 ： 　 　 （ ） 接入 会晤 。 专用 于 处理 用户 的 认证 和 授权 ， 支持 终端用户 的 可 移动性 ， 支持 对 专有 业务 的 访问 。 接入 会晤 可以 看作 是 用户 和 可用 业务 之间 交互 的 起点 ， 根据 用户 的 需求 ， 接入 会晤 可以 建立 并 管理 业务 过程 。 从 计算 观点 上 看 ， 用户 代理 支持 个人 接入 机制 ， 它 根据 当前情况 决定 一种 业务 是否 能 被 该 用户 使用 。 　 　 （ ） 业务 会晤 。 包括 控制 和 管理 业务 所 需 的 信息 。 为了 支持 用户 专有 的 业务 ， 业务 会晤 分成 用户 业务 会晤 和 提供者 业务 会晤 。 　 　 （ ） 通信 会晤 。 为 用户 业务 建立 通信 连接 ， 减轻 了 通信 资源管理 和 业务 控制 。 采用 “ 会晤 ” 机制 来 控制 通信 允许 用户 动态 地 创建 、 控制 、 恢复 对 通信 资源 的 合理配置 。 从 TMN 观点 ， 可以 把 通信 会晤 看作 网络 管理层 和 业务 管理层 的 分离 。 　 　 首先 ， 接入 会晤 产生 对 某种 新 的 业务 会晤 的 需求 ， 根据 用户 情况 建立 业务 会晤 ， 定义 会晤 权限 。 然后 ， 用户 得到 直接 与 业务 会晤 交互 和 激活 操作 所 需 的 会晤 参考 。 当 用户 希望 结束 一个 业务 会晤 时 ， 可 向 接入 会晤 提出 要求 ， 切断 此次 业务 会晤 。 使用 会晤 对象 来 实现 代理 接入 权限 的 控制 对 代理 本身 是 透明 的 。 从 代理 的 角度看 ， 会晤 的 功能 是 强大 的 ， 它 能 对 不同 底层 业务 提供 一致 的 接入 ， 而且 可以 依据 某些 代理 的 要求 建立 专有 的 会晤 ， 例如 ， 它 可 作为 基于 CORBA 的 应用 和 其它 应用 之间 的 网关 。 　 　 在 这种 体系结构 中 ， 很 容易 建立 TMN 所 定义 的 管理系统 。 一种 方法 就是 每个 操作系统 的 主机 管理 应用 都 运行 在 CORBA 上 ， 不同 对象 可以 用 不同 的 编程语言 实现 ， 利用 CORBA 提供 的 透明 机制 互相 访问 。 从 功能 观点 ， 这些 管理 应用 能 同样 满足 TMN 管理 业务 的 需求 。 这种 方法 的 优点 是 仅 用个 记号 就 能 区分 管理系统 和 被 管理系统 。 ． TMN 向 TINA 的 过渡 　 　 TMN 系统 可以 平滑 过渡 到 TINA 系统 。 在 过渡 过程 中 ， 会 在 TINA 定义 的 参考点 发生 互操作 。 本 节 讨论 几种 不同 的 过渡 方法 ， 给出 OSI ／ CORBA 网关 的 一些 细节 ， 说明 如何 在 传统 的 框架 中 实现 CORBA 的 互操作 ， 以及 包含 DPE 业务 的 基于 CORBA 的 TMN 结构 。 　 　 （ ） 从 TMN 向 TINA 过渡 的 方法 　 　 为了 实现 从 传统 TMN 向 TINA 的 平滑 过渡 ， 必须 有 一个 渐进 的 过程 ， 所以 ， 基于 TMN 的 系统 和 基于 TINA 的 系统 会 在 一段时间 内 共存 并 相互作用 。 　 　 主要 的 问题 是 基于 CORBA 的 应用 与 传统 的 基于 OSI 的 应用 之间 如何 进行 互操作 。 为 使 在 这 二种 不同 的 框架结构 下 开发 的 应用 能 相互作用 ， 要 引入 一些 连接 。 一种 方法 是 通过 在 TMN 组件 中 加上 CORBA 通信 机制 ， 为 应用程序 的 开发者 提供 相应 的 透明 的 生成 框架 。 这样 就 能 从 OSI 域 扩展 到 CORBA 域 ， 使 二个 域 在 一定 程度 上 互相 重迭 。 另 一种 方法 是 不 改变 组件 ， 而 使用 中间 软件 ， 在 一个 特殊 点上 连接 二个 管理 域 的 网关 ， 每个 域 仍然 保持 原有 的 通信协议 （ CMIP 和 CORBA ） 。 在 这里 ， 网关 充当 CORBA 管理者 的 虚拟 代理 和 TMN 代理 的 虚拟 管理者 ， 作为 OSI 管理者 向 OSI 代理 提出 请求 ， 并 回传 应答 和 通知 。 　 　 现有 的 一些 过渡 方法 已经 考虑 了 这些 问题 ， 基本上 包括 ： 　 　 ① 在 GDMO 信息 模型 的 基础 上 ， 连接 CORBA 管理者 和 OSI 代理 。 　 　 ② 把 OSI 相互作用 的 语义 加到 CORBA 中间件 上 。 　 　 ③ 使用 特定 的 IDL 接口 屏蔽 OSI 组件 。 　 　 ④ 提供 个 双向通信 的 框架结构 。 　 　 上述 方法 均 能 有效 地 实现 向 TINA 的 过渡 ， 具体 使用 哪 一种 方法 由 重用 的 限制 、 源代码 是否 可 得到 以及 现有 组件 的 集成 等 因素 来 决定 。 　 　 （ ） 作为 TINA 计算 对象 的 TMN 管理者 ／ 代理 　 　 OSI 管理 模型 是 建立 在 包含 组 被 管 对象 的 代理 概念 上 的 ， 被 管 对象 是 对 现实 资源 的 描述 。 通过 代理 执行 对 被 管 对象 的 操作 ， 来 满足 管理者 的 需求 。 代理 控制 被 管 对象 的 活动 ， 改变 被 管 对象 的 状态 。 另一方面 ， CORBA 的 运行 方式 依赖于 包含 组 对象 的 服务器 。 这些 对象 由 所 接收 到 的 请求 直接 激活 ， 根据 CORBA 实现 的 不同 ， 可能 会 有 几种 响应 。 这 就 产生 了 种 新 的 结构 ， 代理 的 功能 可以 由 几个 对象 共同完成 ， 要 考虑 的 实体 仅 是 管理者 和 被 管 对象 。 　 　 管理者 和 被 管 对象 之间 都 可 由 CORBA 对象 实现 ， 它们 的 相互作用 利用 了 个 接口 ： 管理 操作 和 通知 ， 如图所示 。 图 管理者 被管理者 　 　 （ ） CORBAOSI ／ CMISE 网关 　 　 CORBA 和 OSI ／ CMISE 之间 的 网关 允许 连接 个 分别 使用 OSI 和 CORBA 的 组件 ， 无需 作出 修改 。 有种 方法 实现 不同 协议 和 模型 的 转换 ： 一种 是 动态 转换 ， 在 管理系统 的 操作 中 完成 ， 这种 方法 比较 常用 ， 但 转换 过程 的 代价 较 高 。 另 一种 是 静态 转换 ， 就是 为 特定 的 模型 建立 网关 。 这种 方法 不够 灵活 ， 但 占用 资源 少 。 网关 可以 用于 特定 模型 ， 也 可以 用于 一般 模型 。 网关 的 实现 需要 对象 模型 从 GDMO ／ ASN ． 转换 到 CORBA ／ IDL ， 包括 CMIP 协议 数据 单元 向 CORBA 发出请求 及 CORBA 如何 返回 响应 和 通知 。 　 　 （ ） 在 传统 的 TMN 框架 中 实现 OSI 和 CORBA 的 互操作 　 　 为了 提供 向 TINA 的 平滑 过渡 ， TMN 中 CORBA 支持 的 实现 应该 对 应用程序 的 开发者 是 透明 的 。 对于 在 OSI 框架 中 开发 的 TMN 应用 ， 可以 直接 在 框架 中 引入 CORBA 通信 机制 来 生成 支持 CORBA 的 组件 。 这种 技术 的 优点 是 能 利用 已有 的 投资 。 　 　 图 表明 了 系统 内 各 成分 是 如何 相互作用 的 。 CORBA 管理者 对象 可以 在 代理 端 通过 一般 的 CMISE 接口 来 访问 被 管 对象 ， 或者 通过 由 被 管 对象 类 的 GDMO 规范 生成 的 专用 接口 来 访问 。 管理者 使用 DPE 服务 中 的 名字 服务 来 建立 特定 名字 和 对象 参考 之间 的 关系 ， 使用 通知 服务 向 管理者 传递 通知 信息 ， 并 提供 了 信息 模型 服务 来 描述 GDMO ／ ASN ． 信息 模型 。 图 基于 CORBA 的 系统 成分 的 相互作用 　 　 （ ） TMN 中 的 DPE 服务 　 　 现已 定义 了 几种 DPE 服务 来 支持 管理 　 　 ① 消息 服务 。 CORBA ． 通信模型 是 同步 的 ， 它 基于 远程 调用 ， 而 CMISE ／ CMIP 原理 是 基于 异步 模型 的 。 OMG 正在 制订 新 的 CORBA 规范 ， 以 支持 实时 异步 请求 ， 避免 阻塞 ， 要求 能 自动 处理 调用 ， 支持 优先权 管理 。 　 　 ② 名字 服务 。 CORBA 名字 服务 维系 了 对象 参考 和 逻辑 名 之间 的 关系 。 名字 是 CORBA 里 提供 的 独立 的 位置 参考 。 　 　 ③ 通知 服务 。 TMN 要求 有 一种 事件 过滤 功能 ， 而 CORBA 的 事件 服务 不 提供 这种 功能 。 为此 ， TINA 增加 了 通知 服务 ， 它 利用 了 CORBA 的 推进 模型 ， 包含 了 过滤 功能 。 传输 过程 如图所示 。 图 通知 服务体系 　 　 通知 服务器 负责管理 通知 方法 ， 它 接受 通知 发送 端 和 接 端的 注册 ， 当 发送 端想 传播 个 通知 ， 就 从 信道 激活 个 推进 操作 ， 由 信道 处理 需要 此 通知 的 接收端 列表 ， 如果 能 与 过滤器 匹配 ， 则 继续 向前 传送 。 ④ 信息 模型 服务 。 信息 模型 服务 反映 了 GDMO 所有 的 概念 。 它 给出 组件 的 属性 、 名字 、 类型 及 所 包含 的 对象 。 它 在 GDMO 模板 和 接口 库中 的 IDL 定义 间 建立 连接 。 结束语 　 　 新 业务 的 不断 出现 必然 要求 通信 网络 具有 开放性 ， 网络 管理者 和 被 管 对象 的 实现 要求 更 高 的 灵活性 。 基于 CORBA 的 TINA 能够 满足 电信 运营者 对 网络结构 的 要求 ， 并 能 保证 现有 通信网 在 正常 运转 的 同时 逐渐 过渡 到 TINA ， 具有 极其 广泛 的 应用 前景 。 李欣 （ 南京 邮电学院 信息网络 技术 研究所 ） 舒斐 （ 南京 邮电学院 信息网络 技术 研究所 ） 张顺 颐 （ 南京 邮电学院 信息网络 技术 研究所 ） 参考文献 ［ ］ VinoskiS ． CORBAIntegratingDiverseApplicationsWithinDistributedHeterogeneousEnvironments ． IEEEComm ． Mag ． ； 收稿 日期 ： － －