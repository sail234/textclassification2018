计算机 应用 COMPUTERAPPLICATIONS 年 第卷 第期 VolNo 一种 软件结构 复杂度 度量 模型 及其 自动 实现 王小明 　 　 摘 　 要 　 本文 对 软件结构 中 扇入 扇出 对 软件 复杂度 的 影响 进行 分析 研究 探讨 了 一种 基于 扇入 扇出 的 软件结构 复杂度 度量 模型 ， 给出 了 自动 实现 算法 。 该 模型 在 结构化 、 软 构件 和 基于 组件 的 系统 设计 分析 中 具有 较 高 的 应用 价值 。 　 　 关键词 　 扇入 ， 扇出 ， 软件 复杂度 ， 模型 AMODELOFMEASURINGSOFTWARESTRUCTURECOMPLEXITYANDITSAUTOREALIZATIONWangXiaomingComputerCenterGansuCollegeofEconomicManagement ， GansuLanzhou ， 　 　 Abstract 　 Thispaperanalyzestheinfluenceoffaninandfanouttosoftwarecomplexityinasoftwarestructureandmakesastudyofsomesoftwarestructurecomplexitymodelbasedonfaninandfanout ， givesanautomaticalgorithmthemodelshavehigherapplicationvalue 　 　 Keywords 　 Fanin ， Fanout ， Softwarecomplexity ， Model 　 软件结构 复杂度 度量 　 　 在 设计 计算机 大型软件 的 时候 ， 无论是 采用 结构化 方法 还是 面向对象 技术 ， 为了 降低 研究 与 设计 的 复杂度 ， 总是 采取 “ 分而治之 ” 的 策略 ， 即将 要 研究 的 大 系统 划分 为 多个 规模 适中 的 子系统 ， 再 通过 对 各 子系统 的 研究 设计 、 子系统 集成 ， 从而 构成 一个 大型 的 软件系统 。 各 子系统 之间 通过 控制流 与 数据流 相关联 。 在 一定 程度 上 ， 软件系统 的 复杂度 取决于 各 子系统 之间 的 控制流 与 数据流 的 复杂程度 。 从 软件设计 的 角度 来看 ， 这种 控制流 与 数据流 即 是 模块 间 的 扇入 与 扇 出 。 软件结构 复杂度 是 指 模块 结构 的 复杂度 和 整个 软件系统 结构 的 复杂度 。 结构 复杂度 度量 主要 是 对 软件 中 的 控制流 和 数据流 以及 模块 间 的 接口 复杂程度 等 进行 度量 。 经典 的 结构 复杂度 度量 方法 常用 模块 的 扇入 扇出 数量 来 度量 模块 的 复杂度 。 一个 模块 的 扇入 指 进入 该 模块 的 控制流 与 数据流 之 和 ， 一个 模块 的 扇 出 指该 模块 输出 的 控制流 与 数据流 之 和 。 软件结构 的 复杂度 可 表示 为 对应 模块 或 子系统 的 扇入 与 扇 出 乘积 的 平方 。 一个 模块 应 追求 高 扇入 ， 使得 该 模块 具有 较 高 的 可 重用 性 ； 追求 低扇 出扇 出数 小于 ， 使得 模块 间 藕合 度 较 低 。 结构 复杂度 度量 力求 反映 模块 内部结构 的 复杂度 以及 模块 间接口 的 复杂度 ， 进而 反映 整个 软件系统 的 结构 复杂度 。 但是 这种 方法 将 扇入 扇出 ， 模块 间 循环 调用 与 顺序调用 ， 分枝 调用 ， 逐层 调用 与 隔层 调用 ， 不同 深度 的 调用 ， 等等 ， 对 模块 系统 的 复杂度 影响 同等对待 ， 按照 系统 科学 和 软件工程 理论 ， 这 并 不 完全 合理 。 本文 在 研究 结构化 系统 设计 与 程序设计 的 基础 上 ， 将 扇入 扇出 对 模块 的 复杂度 影响 分别 讨论 ， 给出 了 基于 扇入 扇出 的 模块 和 系统结构 复杂度 定量 度量 的 数学模型 。 使用 这些 模型 可以 在 软件系统 模块 结构设计 完成 之后 ， 对 系统结构 与 模块 的 复杂程度 作出 定量 度量 ， 以便 在 祥细 设计 开始 之前 对 复杂 度过 高 的 模块 重新 划分 ； 对 复杂度 不合理 的 系统结构 进行 重新 构建 ； 对 不同 的 系统结构 方案 进行 复杂度 比较 ， 从中 选择 最优 方案 。 　 软件结构 复杂度 建模 　 软件工程 若干 准则 　 　 文献 ［ ］ ［ ］ ［ ］ ［ ］ ［ ］ 中 有关 系统结构 和 模块 复杂度 理论 可 归纳如下 ： 　 　 准则 ： 结构化程序 系统 总是 可以 层次化 的 。 　 　 准则 ： 任一 程序 中 ， 分枝 结构 比 序列 结构复杂 ； 循环 结构 比 分枝 结构复杂 。 　 　 准则 ： 任一 程序 中 ， 隔层 调用 比 逐层 调用 复杂 ； 模块 间 自 底向上 调用 构成 循环 结构 比 自顶向下 调用 复杂 。 　 　 准则 ： 系统 模块 越 多 系统 越 复杂 ； 中间层 模块 越 多 系统 越 复杂 ； 模块 层数 越 多 系统 越 复杂 。 　 　 准则 ： 嵌套 深度 越大 ， 程序 越 复杂 ； 越 靠近 入口 或 出口 的 模块 ， 复杂度 越低 。 　 若干 概念 　 　 为了 将 扇入 扇出 对 模块 系统结构 复杂度 的 影响 分开 来 讨论 ， 以 建立 新 的 结构 复杂度 度量 模型 ， 引入 如下 几个 概念 。 　 　 扇出 ： 指 一个 模块 直接 控制 调用 的 模块 数目 。 扇入 ： 指 直接 调用 该 模块 的 模块 数目 。 　 　 模块 总数 m ： 系统 中 模块 总 个数 。 　 　 深度 层 号 ： 指 软件结构 从 入口 到 出口 各层次 的 顺序 编号 。 　 　 对称 层 号 ： 当 系统 模块 总 层数 n 为 奇数 时 ， 自顶 入口 向下 出口 各层 对称 层 号 依次 为 ， ， … ， … ， ； 当 n 为 偶数 时 ， 自顶 入口 向下 出口 各层 对称 层 号 依次 为 … … 。 　 　 第 j 层 对称 层权值 yj 　 数学 建模 　 　 依据 系统结构 复杂度 准则 ， 在 研究 大量 实际 系统 模块 扇入 扇出 对 模块 系统结构 复杂度 影响 的 基础 上 发现 ， 一个 模块 的 扇 出 不仅 影响 其 自身 的 结构 复杂度 ， 更 重要 的 是 影响 系统 其他 模块 结构 的 复杂度 接口 复杂度 ， 并 使 其 本身 的 结构 复杂度 按 的 指数 增长 。 一个 模块 的 扇入 影响 其 本身 的 结构 复杂度 ， 并 使 其 本身 的 结构 复杂度 按 ee 的 指数 增长 。 模块 的 结构 复杂度 函数 依赖于 系统 总 模块 数 、 系统 深度 、 模块 在 系统 中所处 位置 、 扇入 扇出 来源 与 去向 等 。 对于 某一 模块 ， 只要 有 一个 扇入 或 扇 出 复杂度 较 高 ， 那么 该 模块 仍然 复杂度 较 高 。 　 　 定义 　 由 m 个子 模块 构成 的 软件系统 P 其子 模块 的 结构 复杂度 定义 为 ： 　 　 模块 j 的 扇入 复杂度 Rjm × hj × e ｜ j 模块 深度 层 号 扇入 i 起点 深度 层 号 ｜ 　 　 　 　 　 　 　 　 　 　 　 　 　 　 （ q 为 j 模块 扇入 总数 ≤ j ≤ m ， m 为 模块 总数 ， 以下 同 ） 　 　 模块 j 的 扇 出 复杂度 ： Cjm × hj × ｜ j 模块 深度 层 号 扇入 i 终点 深度 层 号 ｜ 　 　 　 　 　 　 　 　 　 　 　 　 　 　 （ p 为 j 模块 扇出 总数 ） 　 　 模块 j 的 总 复杂度 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 系统 模块 的 平均 复杂度 ： 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 模块 j 的 总 复杂度 相对 于 系统 模块 的 平均 复杂度 的 偏差 ： 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 依据 软件工程 理论 ， 一个 软件系统 最优 ， 不是 某 几个 模块 最优 ， 而 应该 是 所有 模块 优度 均衡 ， 从而 使 系统 最优 。 所以 ， 可 根据 系统 乘法 原理 ［ ］ 定义 软件系统 的 结构 复杂度 。 　 　 定义 　 由 m 个子 模块 构成 的 软件系统 P 各 模块 的 结构 复杂度 为 Fj 则 软件系统 的 结构 复杂度 为 ZFj 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 实践 表明 ， 当 Kj ≤ 时 ， 该 模块 可能 规模 偏小 ， 需同 其它 模块 合并 当 Kj ≥ 时 ， 该 模块 可能 规模 偏 大 ， 需要 进行 再 分解 或 调整 控制流 ， 使 各 结点 复杂度 达到 基本 的 均衡 ， 从而 使 整个 系统结构 复杂度 达到 较 低水平 。 　 结构 复杂度 度量 的 自动 实现 　 　 定义 ： 系统 中 模块 所在 层 深度 编号 构成 的 行向量 定义 为 ： X ［ xxx … xm ］ 。 　 　 定义 ： 系统 中 模块 集合 Sppp … pm 扇入 矩阵 Am × m 定义 为 　 　 　 　 事实上 ， 扇入 矩阵 和 扇 出 矩阵 互为 转置 矩阵 ， 即 扇 出 矩阵 Bm × mAm × mT 令 矩阵 Nm × m 为 ： 　 　 　 　 令 矩阵 Wm × m 为 ： 　 　 　 　 其中 ， e 　 　 定义 ： 系统 中 模块 的 对称 层权值 yyy … ym 构成 的 对角 矩阵 Hm × m 定义 为 　 　 hijyi ； 当 j ≠ i 时 ， hij 　 　 令 对角 矩阵 Wm × m 为 ： 　 　 diim × nij 　 　 当 j ≠ i 时 ， dij 　 　 则 ， 模块 的 扇入 复杂度 对角 矩阵 　 　 Rm × m 为 ： RD × H 同理 ， 令 对角 矩阵 Gm × m 为 ： 　 　 giim × wij ； 当 j ≠ i 时 ， gij 　 　 模块 的 扇 出 复杂度 对角 矩阵 Cm × m 为 ： CG × H 　 　 系统 模块 的 总 复杂度 对角 矩阵 Fm × m 为 ： 　 　 当 j ≠ i 时 ， fij 　 　 系统 模块 的 平均 复杂度 ： 　 　 系统 模块 的 平均 复杂度 偏差 对角 矩阵 Km × m 为 ： 当 j ≠ i 时 ， kij 　 　 软件系统 的 结构 复杂度 ： ZFii 　 结束语 　 　 基于 扇入 扇出 的 软件结构 复杂度 定量 度量 方法 使用 简单 方便 ， 在 繁杂 的 程序设计 开始 之前 就 能 对系统 各 模块 以及 整个 系统 的 结构 复杂度 进行 有效 的 度量 分析 ， 从而 对 不同 的 系统 设计方案 进行 比较 ， 评价 ， 选优 对 不合理 的 模块 和 控制流 进行 重新 划分 和 调整 ， 使 系统 复杂度 达到 整体 上 的 优化 。 　 　 基于 上述 数学模型 的 自动 实现 使用 了 矩阵 方法 ， 只要 给出 系统 模块 的 扇入 矩阵 或 扇 出 矩阵 模块 深度 层 编号 ， 对称 层权值 ， 使用 任 一种 计算机 语言 即可 实现 软件系统 和 模块 的 结构 复杂度 自动 计算 。 笔者 构造 了 多种不同 规模 的 软件系统 结构 模型 ， 并 对 实际 使用 中 的 种 大型 管理信息系统 使用 C语言 实现 该 算法 ， 对系统 模块 和 系统结构 复杂度 进行 了 自动 度量 分析 ； 对 同一 系统 的 不同 系统结构 方案 进行 了 度量 分析 比较 其 结果 比较 理想 。 注 ： 本 项目 受正林 集团 技术创新 基金 资助 No 。 作者简介 ： 王小明 　 副教授 。 主要 研究 方向 ： 软件工程 、 管理信息系统 、 数据库 的 教学 和 研究 。 作者 单位 ： 甘肃省 经济 管理 学院 计算机 中心 　 甘肃兰州 参考文献 ［ ］ 　 TomDeMarcoStructuredAnalysisandSystemSpecificationYourdoninc ［ ］ 　 RogerSPressmanSoftwareEngineeringApractitioner ′ sApproachMcGrawHillBookCompany ［ ］ 　 ElismBSusanUObjectOrientedMethodologiesandSystems ［ ］ 　 HausiAMRounaldJNThethIWCASE ［ ］ 　 张海藩 软件工程 导论 北京 清华大学出版社 ［ ］ 　 汤 　 庸 软件工程 方法学 及 应用 北京 中国 三峡 出版社 ［ ］ 　 孙 　 凌 计算机信息 系统分析 与 设计 武汉 武汉大学 出版社 ［ ］ 　 杨士尧 系统 科学 导论 北京 农业 出版社 收稿 日期 修改稿