计算机 应用 ComputerApplications 年 第卷 　 第期 Vol 　 No 分布式 对象 在 软件系统 集成 中 的 应用 郑无疾 　 张建军 　 朱 山风 　 　 摘 　 要 　 分布 对象 是 一些 灵敏 的 软件 模块 ， 它们 可以 位置 透明 ， 语言 独立 和 平台 独立 地 相互 发送 消息 。 本文 主要 探讨 将 分布式 对象 技术 应用 中 出现 的 各种 问题 及其 解决 方法 。 　 　 关键词 　 分布式 对象 ， 系统集成 ， 组件 DISTRIBUTEDOBJECTTECHNIQUESINSOFTWARESYSTEMINTEGRATIONZhengWuji 　 ZhangJianjun 　 ZhuShanfengSchoolofComputerScineceWuhanUniversity ， HubeiWuhan 　 　 Abstract 　 DistributedobjectsareintelligentsoftwaremodelsTheycansendmessagestoeachothertransparentlywithlocationlanguageandplatformInthispaperwefocusonthequestionsandsolutionsrelatedtodistributedobjecttechnology 　 　 Keywords 　 DistributedobjectSystemintegrationComponent 　 背景 　 　 传统 的 ClientServer 结构 对 Client 和 Server 的 角色 划分 相当 清晰 ， 将 整块 软件 切 分为 二 ： 一部分 运行 在 Client 端 ， 一部分 运行 在 Server 端 ， 通过 如 远程 过程 调用 （ RPC ） 机制 来 实行 简单 的 互操作 ， 协同工作 完成 任务 。 　 　 随着 计算机网络 技术 的 飞速发展 ， 特别 是 InternetIntranet 爆炸式 的 规模 扩充 ， 各种 业务 开始 在 Internet 上 进行 。 在 这些 业务 对 网络 计算 提出 了 更 高 的 要求 的 情况 下 ， 第一代 的 ClientServer 结构 开始 暴露出 不足之处 ： 首先 ， 这种 结构 对 Client 和 Server 的 角色 分工 过于 严格 ， 而 实际 情况 是 在 许多 网络应用 中 ， 分不清 谁 是 Client ， 谁 是 Server ， 两者 界限 非常 模糊 ， 如 网络 医疗 会诊 ； 其次 ， 基于 RPC 的 互操作 直接 将 Client 和 Server 连接起来 ， 并 没有 中间 机构 来 处理 请求 。 　 分布式 对象 　 　 第一代 的 ClientServer 系统 多 是 针对 局域网 的 。 在 更 大 的 环境 中 ， 系统 的 可伸缩性 ， 异构 配置管理 和 网络 监控 变得 至 为 重要 。 由于 对象 技术 有 处理 复杂 系统 的 能力 ， 人们 将 对象 技术 引入 了 分布 环境 以 解决 面临 的 这些 问题 ［ ］ 。 　 　 传统 的 对象 可以 被 看作 是 封装 了 数据 和 作用 于 这些 数据 的 操作 的 自 包含 的 实体 。 这些 对象 支持 的 操作 （ 又 称为 方法 ） 是 依赖于 对象 的 内部 状态 的 。 对象 技术 通过 将 相关 数据 及 操作 与 系统 的 其它 部分 隔离 ， 而 使得 系统 的 构建 与 维护 工作 变得 容易 。 　 　 传统 的 对象 只 “ 驻留 ” 在 一个 程序 之内 ， 在 程序 编译 时 也 不会 分裂 成 多个 实体 。 与 此 不同 的 是 ， 分布式 对象 可以 驻留 在 一个 网络 的 任何 地方 ， 作为 一个 物理 上 独立 的 实体 存在 并 可以 被 其它 对象 远程 调用 。 通过 中间件 （ Middleware ） 包含 的 标准 通讯 协议 ， 由 各种 不同 的 语言 编写 和 由 不同 编译器 编译 的 对象 可以 无缝 地 进行 通信 以 构成 一个 完整 而 健壮 的 系统 。 这样 的 对象 框架 保证 了 分布 对象 间 的 高度 透明 的 互操作性 。 　 　 分布 对象 是 一些 灵敏 的 软件 模块 ， 它们 可以 位置 透明 ， 语言 独立 和 平台 独立 地 相互 发送 消息 ， 实现 请求 服务 。 我们 称 这些 独立 的 对象 模块 为 组件 。 在 分布 对象 系统 中 ， 分布 、 协作 的 单位 就是 这些 对象 组件 。 这些 对象 组件 成分 可以 是 由 一些 不同 的 开发者 相互 独立 地 使用 不同 的 语言 或 工具 构造 的 。 　 组件 模型 　 　 组件 是 自 包含 ， 紧 包装 的 软件 对象 模块 。 组件 用于 实施 应用领域 内 的 一些 有限 的 服务 ， 它 可以 和 其它 组件 一起 构成 完整 的 应用 。 组件 的 粒度 可大可小 ； 组件 具有 良好 的 接口 ， 同 经典 对象 一样 ， 组件 只能 通过 其 接口 来 访问 ； 组件 的 实现 与其 接口 是 分离 的 ， 组件 可以 使用 对象 、 过程 式 代码 或 封装 现有 的 代码 实现 ； 组件 是 系统 无关 的 ， 可以 作为 对象 跨越 地址 空间 、 网络 、 语言 、 操作系统 和 工具 来 调用 ； 组件 还 可 支持 封装 、 继承 和 多态 等 对象 特性 。 总之 ， 组件 是 可 复用 的 ， 自 包含 的 ， 独立 与 具体 应用 的 软件 模块 。 　 　 目前 使用 较 多 的 组件 标准 是 CORBA （ CommonObjectRequestBrokerArchitecture ） 和 DCOMDistributedComponentObjectModel 。 CORBA 是 对象 管理 集团 ObjectManagementGroupOMG 在 其 对象 管理 结构 OMA 框架 之下 以 对象 请求 代理 ORB 为 核心 制定 的 分布 对象 标准 。 它 定义 了 对象 之间 通过 ORB 透明 地 发送 请求 和 接收 响应 的 机制 ， 保证 了 在 分布 异构 环境 下 对象 之间 的 互操作性 ［ ］ ［ ］ ［ ］ 。 图 　 CORBA 结构 　 　 微软 提出 DCOM 作为 未来 的 Internet 计算 的 模型 。 DCOM 中 主要 使用 ActiveX 组件 作为 其 对象 。 在 将来 ， Java 对象 也 可能 会 被 作为 其 对象 。 和 CORBA 一样 ， DCOM 中 的 接口 是 和 功能 分开 的 。 图 　 DCOM 组件 结构 　 　 微软 使用 了 基于 DCEDistributedComputingEnvironment 的 IDLInterfaceDefinitionLanguage 来 达到 这一 目的 。 由于 这一 IDL 和 CORBA 和 DCE 的 不 兼容性 ， 将 严重 限制 这一 标准 和 其它 标准 的 互操作性 ［ ］ 。 　 软件系统 集成 　 　 根据 应用 需求 ， 将 若干 软件系统 集成 在 一起 协同工作 。 如此 形成 的 集成 软件系统 称之为 集成 环境 ， 而 组成 此 集成 软件 的 各 部分 软件系统 称之为 部分 软件 ， 或 软 部件 。 以上 两种 组件 标准 的 提出 ， 为 软件系统 的 集成 提供 了 必要 的 条件 。 　 　 由于 计算机 应用软件 系统 的 规模 越来越 大 ， 复杂性 越来越 高 ， 从零开始 开发 这样 的 软件系统 显得 很 不 现实 。 在 组件 标准 的 支持 下 ， 我们 可以 充分利用 已有 的 可用 软件资源 ， 包括 自己 本地 开发 的 ， 市场 上 可以 买到 的 以及 其它 公用 软件资源 作为 软 部件 进行 系统集成 ， 也 就是 要 将 这些 软件 进行 “ 粘结 ” ， 实现 它们 之间 的 互用 和 互操作 ， 实现 客户 化 ， 满足 应用 要求 。 随着 软件产品 市场 上 各种各样 的 商品 软件 的 出现 和 接口 的 标准化 ， 用 系统集成 的 方法 开发 应用软件 已 显得 越来越 重要 了 。 　 　 系统集成 涉及 到 软件系统 结构 、 技术 和 市场 等 诸多 因素 。 相比 于 单纯 地为 客户 进行 定 制式 软件开发 ， 系统集成 对 软件 开发人员 的 经验 和 技术 有 更 高 的 要求 。 　 　 与 传统 的 定 制式 应用软件 开发 相比 ， 软件系统 集成 的 人员 结构 亦 将 发生 新 的 变化 。 软件 开发人员 将 分化 两 部分 ， 一部分 是 软 组件 部件 制作人员 ， 另 一部分 是 应用 系统分析 和 装配 人员 。 应用 开发人员 结构 的 演变 如图所示 。 图 　 应用 开发人员 结构 演变 　 　 目前 ， 在 软件工程 的 各个方面 正 发生 巨大 的 变化 。 在 可以 预见 的 将来 ， 软件 自动化 也 将 对 软件 的 生产 过程 产生 巨大 的 影响 。 　 　 软件系统 集成 将 面向对象 技术 作为 其 基础 。 但是 ， 软件系统 集成 的 要求 更高 。 如何 在 已经 成为事实 的 组件 标准 上 建立 一个 实用 的 软件系统 集成 开发 流程 ， 在 这 一方面 的 作者 试图 提出 一些 方法 ［ ］ 。 但是 ， 他们 的 方法 都 存在 以下 方面 的 不足 ： 　 　 只 覆盖 了 整个 软件 生命周期 的 部分 阶段 ； 　 　 没有 充分发挥 分布 对象 技术 的 特点 ， 或 不 适合 于 分布 对象 技术 。 　 下 一步 的 工作 　 　 建立 一个 覆盖 整个 软件 生命周期 的 以 分布 对象 技术 为 基础 的 软件系统 集成 开发 模式 ； 　 　 根据 这一 软件系统 集成 开发 模式 ， 对 现有 的 软件开发 集成 环境 结构 进行 调整 。 对 已有 的 软 部件 进行 有效 管理 。 　 　 CSCWComputerSupportedCooperativeWork 是 当前 计算机 研究 中 的 一个 热点 。 目前 ， 此类 工具 多用 在 非 计算机领域 的 创作 、 研究 和 开发 工作 中 。 我们 将 尝试 把 CSCW 的 概念 、 方法 引入 软件系统 集成 的 集成 开发 环境 中 。 作者简介 ： 郑无疾 　 张建军 　 朱 山风 　 均 为 硕士 研究生 。 研究 方向 ： 分布 并行处理 系统 。 作者 单位 ： 郑无疾 　 张建军 　 朱 山风 　 武汉大学 计算机科学 与 技术 学院 　 湖北 武汉 （ ） 参考文献 　 ［ ］ 　 ScoffMLewandowskiFrameworksforComponentBasedClientServerComputingACMComputingSurveys 　 ［ ］ 　 PJHoustonFGWilkieTJAndersonComponentbaseddevelopmentCORBAandRMODPIEEProceedingsSoftware ； 　 ［ ］ 　 陈 　 滢 樊惠娟 王能斌 分布 对象 技术 综述 计算机科学 　 ［ ］ 　 汪 　 芸 兑 继英顾 冠群 开放 分布式 处理 的 新 发展 CORBA 规范 计算机科学 　 　 收稿 日期