微型机 与 应用 WEIXINGJIYUYINGYONG 年 月 第卷 第期 volNoCS 系统 中 数据库 表间 PKFK 关系 和 TRIGGER 技术 的 一种 实际 应用 魏 育成 　 王耀南 　 周 海燕 　 　 摘 　 要 ： 从 矿山 CIMS 系统 中 报表 子系统 的 开发 和 设计 入手 ， 介绍 了 SQLServer 数据库 中表间 主键 外键 PKFK 关系 和 触发器 TRIGGER 技术 在 处理 数据表 间 数据 关联 的 灵活 应用 。 　 　 关键词 ： CS 系统 　 结构化 查询语言 SQL 　 主键 外键 　 触发器 　 数据 关联 　 　 MSSQLServer 是 一个 优秀 的 多用户 关系 型 数据库 管理系统 ， 它 为 客户端 开发 语言 如 VB 提供 了 个 功能强大 的 平台 。 其表间 主键 外键 关系 和 触发器 技术 如能 在 实际 开发 中 灵活 使用 ， 往往 能 收到 较 好 的 效果 。 本文 将 介绍 个 实际 矿山 CIMS — — “ 选矿厂 生产 数据 采集 和 管理系统 ” 中 “ 报表 子系统 ” 的 开发 和 设计 方法 ， 着重 讨论 利用 PKFK 关系 和 TRIGGER 技术 实现 表间 数据 引用 一致性 的 问题 。 　 问题 的 提出 　 　 选矿厂 生产 数据 采集 和 管理系统 由 底层 数据 采集 工作站 、 服务器 和 上层 报表 管理 工作站 组成 。 系统 要求 底层 数据 采集 工作站 采集 生产 设备 的 工作 时间 、 用电量 、 生产 矿量 等 生产 数据 ， 并且 实时 送到 服务器 上 的 SQLServer 数据库 中 ， 上层 报表 管理 工作站 从 数据库 中 抽取 感兴趣 的 设备 记录 组成 报表 打印 。 　 　 根据 要求 ， 首先 在 SQL 库 建立 个 生产 数据表 — — Data 表 ， 包括 设备 编号 devmark 和 每日 生产量 production 个 字 段 ， 其中 devmark 为主 关键字 PK ， 这 张表 存放 所有 生产 设备 的 每日 生产量 ， 由 底层 工作站 每日 定时 刷新 。 在 此基础 上建个 生产 设备 表 — — Devices 表 ， 有个 字 段 ： 设备 编号 devmark 、 设备 中文名称 devname 、 每日 生产量 production ， 其中 devmark 为主 关键字 PK ， 同时 也 为 引用 Data 表 的 devmark 栏 的 外部 关键字 FK ， 这 张表 只 存放 需 显示 、 报表 的 生产 设备 的 生产量 ； 第张 表为 设备 部件 表 — — Parts 表 ， 存放 在 设备 表中 已有 设备 的 所有 部件 的 记录 ， 共有 个 字 段 ： 设备 编号 devmark 、 部件 编号 parmark 、 部件 中文名称 parname 、 每日 生产量 production 、 累计 生产量 accumulation 、 设计 寿命 destime 、 产量 百分比 percent ， 其中 devmark 、 parmark 为 双 关键字 doublekeysdevmark 字段 也 为 引用 Devices 表 的 devmark 栏 的 外部 关键字 。 其表间 关系 如图所示 。 图 　 表间 关系 图 　 　 现在 的 关键问题 是 如何 维护 这 张表中 生产 数据 引用 的 一致性 。 其一 ： 如何 在 底层 工作站 刷新 生成 数据表 Data 的 同时 ， 将 每日 生产 数据 及时 传递 到 生产 设备 表 Devices 和 设备 部件 表 Parts 。 其二 ： 保证 在 向 Devices 表 添加 新 设备 和 向 Parts 表 添加 新 部件 时 ， 都 可 在 底层 Data 表中 找到 其 数据 来源 ， 即表中 没有 所谓 的 “ 孤单 行 ” 。 其三 ： 对 devices 表 进行 删除 某 设备 操作 时 ， 要 满足 此 设备 在 parts 表中 的 所有 部件 已 全部 删除 的 前提 ； 反之 ， 若个 设备 的 所有 部件 在 parts 表中 已 完全 被 删除 ， 在 devices 表中此 设备 的 记录 也 应 被 删除 。 　 解决 的 方法 　 几个 基本概念 　 　 主 关键字 外 关键字 PKFK 。 主 关键字 是 唯一 个表行 的 个 或 若干 表栏 的 组合 ， 要求 非空 ， 且 总是 个 唯一 索引 ； 主 关键字 用于 与 其他 表 的 外 关键字 的 联合 ； 外 关键字 是 其值 匹配 另 一表中主 关键字 的 个 或 若干 表栏 的 组合 ， 其 记录 不必 是 唯一 的 。 事实上 ， 外 关键字 常与主 关键字 形成 多 对 一 的 关系 。 主 关键字 表是 “ 主表 ” ， 外 关键字 表是 “ 仆表 ” ， “ 仆表 ” 参照 “ 主表 ” 的 数据 。 　 　 触发器 TRIGGER 。 触发器 在 SQL 库中 是 一种 特殊 的 存储 过程 ， 也 是 SQLServer 的 数据库 对象 之一 ， 当 所在 的 数据表 进行 更新 、 添加 或 删除 记录 时 就 会 激发 它 进行 规定 的 操作 。 触发器 的 优点 是 自动 激发 ， 不管 什么 引起 数据 修改 ， 它们 都 工作 ， 所以 常常 用于 不同 数据表 中 的 相关 数据 的 串接 修改 。 采用 这种 方法 实现 数据表 间接 的 数据 关联 可 由 数据库 集中 维护 控制 ， 规则 变化 时 只 需 修改 相应 的 TRIGGER 即可 ， 这样 系统 易于 维护 ， 提高 了 工作效率 。 　 　 触发器 工作 时 引用 个 特殊 的 测试 表 inserted 表 和 deleted 表 ， 这 张表 在 对 某 触发器 表 进行 insert 、 delete 和 update 操作 时 ， 被 用于 存放 受到 影响 的 表行 的 副本 ， 即 当 对 某 触发器 表 进行 insert 操作 时 ， 新表行 被 同时 加到 inserted 表和该 触发器 表中 ； 当 对此 表 进行 delete 操作 时 ， 表行 从 触发器 表中 删除 转移 到 deleted 表中 ； 而 update 操作 在 事务 效果 上 是 先 做 个 delete 操作 后 跟 个 insert 操作 。 　 实际 应用 　 　 现在 利用 上面 介绍 的 PKFK 关系 和 TRIGGER 技术 来 实现 “ 生产 数据表 Data — 生产 设备 表 Devices — 设备 部件 表 Parts ” 之间 的 数据 关联 。 　 　 为了 保证 每日 data 表 数据 更新 后 及时 向 devices 表 和 parts 表 传递 ， 在 data 表 和 devices 表上 分别 建立 update 触发器 如下 ： tricreatetriggerupdatedevices 　 　 ondataforupdate 　 as 　 　 　 　 Updatedevices 　 　 　 　 Setdevicesproductioninsertedproductionfrominserted 　 　 　 　 Wheredevicesdevmarkinserteddevmarktricreatetriggerupdateparts 　 ondevicesforupdate 　 as 　 　 　 updateparts 　 　 　 setpartsproductioninsertedproductionfrominserted 　 　 　 wherepartsdevmarkinserteddevmark 　 　 以上 个 触发器 保证 了 在 data 表中 某 设备 每日 生产量 production 刷新 后 ， 按照 设备 编号 devmark 将 生产量 production 传到 devices 表 和 parts 表 。 之后 再 在 parts 表中 创建 个 update 触发器 用于 累加 生产量 、 计算 百分比 ： tricreatetriggercalculate 　 onpartsforupdate 　 as 　 　 updateparts 　 　 setpartsaccumulationpartsaccumulationpartsproduction 　 　 partspercentpartsaccumulationpartsproductionpartsdestimefrominserted 　 　 wherepartsdevmarkinserteddevmark 　 　 当对 devices 表 进行 添加 某 设备 操作 时 ， 由于 data 表 和 devices 表 存在 PKFK 参照 关系 ， SQLServer 要求 必须 添加 data 表中 已有 的 设备 记录 ， 否则 ， 回卷 该 insert 操作 。 同理 ， 对 parts 表 进行 添加 某 部件 的 操作 时 也 被 parts 表 和 devices 表 的 PKFK 参照 关系 强制 只能 添加 devices 表中 已有 的 设备 的 部件 项 。 这种 强制性 的 主键 外键 关系 也 是 SQLServer 较 其 早期 版本 的 新增 功能 之一 。 这样 ， 添加 操作 就 不会 产生 数据 引用 的 “ 孤单 行 ” 。 　 　 当对 devices 表 进行 删除 某 设备 操作 时 ， 若此 设备 在 parts 表中 存在 部件 记录 ， 由于 data 表 和 devices 表 存在 PKFK 参照 关系 ， SQLServer 不 允许 删除 被 “ 仆表 ” 参照 的 “ 主表 ” 表行 。 必须 先 在 parts 表中 把 此 设备 的 所有 部件 记录 删除 ， 才能 删除 devices 表中 的 这台 设备 的 记录 。 为此 ， 在 parts 表中 加入 个 delete 触发器 ， 目的 是 当 在 parts 表中 某 设备 的 所有 部件 均 被 删除 之后 ， 同步 删除 devices 表中 的 该 设备 记录 。 triCreatetriggerdeleteparts 　 　 onpartsfordelete 　 　 as 　 　 ifselectcountfrompartsdeletedwherepartsdevmarkdeleteddevmark 　 　 begin 　 　 deletedevicesfromdeleted 　 　 wheredevicesdevmarkdeleteddevmark 　 　 end 　 　 上述 张表间 的 修改 、 插入 、 删除 等 操作 数据 关联 过程 如图所示 。 图 １ 　 表间 数据 关系 图 　 结论 　 　 通过 对 实际 系统 的 开发 和 设计 分析 可以 知道 ， 如果 能 较 好 地 利用 大型 关系 型 网络 数据库 的 表间 的 PKFK 关系 和 TRIGGER 技术 ， 实现 关系 型 数据表 之间 的 数据 关联 ， 体现 服务端 强大 而 又 灵活 的 功能 ， 在 实际 应用 中 往往 能 取得 事半功倍 的 效果 。 作者 单位 ： 湖南大学 电气 与 信息工程 系 参考文献 　 　 MicrosoftMicrosoftSQLServerforWindowsNT 技术 手册 二 北京 ： 学苑 出版社 ， 　 　 MicrosoftMicrosoftSQLServer 程序员 指南 北京 ： 宇航 出版社 ， 　 　 MicrosoftMicrosoftSQLServerTransactSql 语言 参考手册 北京 ： 宇航 出版社 ， 收稿 日期 ：