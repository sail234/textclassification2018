计算机 研究 与 发展 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 　 Vol 　 No 　 PCORBA 实现 系统 性能 优化 策略 研究 谢俊清 　 蔡敏 　 顾 冠群 摘 　 要 ： CORBA 作为 支持 异构 分布式系统 的 开发 和 运行 的 环境 和 平台 ， 在 众多 领域 得到 了 应用 但是 ， 许多 传统 的 CORBA 实现 系统 的 运行 性能 比较 低 ， 无法 满足 一些 性能 要求 较 高 的 应用 系统 的 需要 本文 分析 了 传统 CORBA 实现 系统 的 体系结构 ， 研究 并 提出 了 解决 实现 高 吞吐量 、 低 延迟 的 CORBA 系统 的 优化 策略 ； 同时 ， 本文 基于 以上 的 优化 策略 对 自行 开发 的 遵循 CORBA 规范 的 ORBUS 系统 进行 优化 ， 并 对 优化 前后 的 性能 进行 了 比较 测试 关键词 ： CORBA ， 性能 优化 ， GIOP ， IIOP ， CDR ， 编译 ， 解释 分类号 ： TP ； TPRESEARCHONPERFORMANCEOPTIMIZATIONOFCORBAIMPLEMENTATIONXIEJunQingDepartmentofComputerScienceandEngineeringSoutheastUniversityNanjingCAIMinDepartmentofComputerScienceandEngineeringSoutheastUniversityNanjingGUGuanQunDepartmentofComputerScienceandEngineeringSoutheastUniversityNanjingAbstract ： CORBAhasbeenusedinmanyfieldsasanenvironmentsupportingthedevelopmentanddeploymentofheterogeneousdistributedsystemsButmostofthetraditionalCORBAimplementationshavelowruntimeperformanceandcannotsatisfytherequirementsoftimesensitiveapplicationsThispaperfirstanalysesthestructureofthetraditionalCORBAimplementationandthenintroducessomeoptimizationstrategiesFinally ， thosestrategiesareusedtoimproveruntimeperformanceoftheORBUSsystemwhichisaCORBAimplementationsystemdevelopedbytheauthorsSometestsarealsotakenandtheresultsarepresentedKeywords ： CORBAperformanceoptimizationGIOPIIOPCDRcompileinterpret ▲ 　 引言 　 　 随着 计算机网络 的 发展 ， 将 应用 扩展 到 局域网 、 广域网 甚至 Internet 上 成为 用户 的 普遍 需求 ， 这样 ， 分布 计算 就 成为 了 新 的 热点 在 分布式计算 环境 中 ， 异构 性是 一个 十分 明显 的 特点 而 在 异构 环境 下 实现 信息 和 软件资源 的 共享 是 十分困难 的 ， 一个 健壮 的 分布 计算 框架 将 为 分布式应用 软件 的 开发 带来 极大 的 便利 从 年 成立 开始 ， OMG 组织 就 一直 致力于 支持 异构 分布 环境 下 应用软件 开发 和 集成 的 相关 技术 的 研究 和 标准 的 制订 它 提出 并且 制订 的 CORBA 规范 ［ ］ 是 异构 环境 分布 计算 的 一个 良好 的 解决方案 ［ ］ ， 目前 得到 了 大约 余家 厂商 和 机构 的 支持 大量 的 CORBA 实现 系统 随之 不断涌现 ， 在 制造 领域 、 电信 领域 、 金融 领域 、 信息 领域 以及 交通运输 领域 得到 了 广泛 的 应用 　 　 但是 ， 随着 一些 对 性能 敏感 的 分布 应用 系统 （ 如 视频点播 、 视频会议 及 实时 仿真 系统 ） 的 迅速 发展 ， 传统 的 CORBA 实现 系统对 这些 应用 的 支持 能力 就 显得 相当 有限 这 首先 表现 在 传统 CORBA 实现 的 性能 比较 低下 ， 无法 提供 高 吞吐量 、 低 延迟 的 传输 支持 在 此种 情况 下 ， 大量 的 研究 和 测试 工作 开始 着手 进行 CORBA 实现 系统 的 性能 分析 和 优化 ， 从而 为 高性能 的 CORBA 实现 奠定 了 良好 的 基础 　 CORBA 实现 系统 性能 优化 策略 　 CORBA 实现 系统结构 分析 　 　 不同 的 CORBA 实现 系统 在 实现 技术 和 体系结构 的 细节 上 存在 着 很大 的 区别 ， 这 也 是 CORBA 规范 只 定义 系统 特性 和 行为 而 不 定义 实现 的 具体 体现 然而 ， 各个 不同 CORBA 系统 所 包含 的 基本 组成 部件 是 相同 的 ； 而且 从 CORBA 系统 的 一个 客户 请求 所 流经 的 部件 来看 ， 不同 的 系统 都 是 类似 的 这 就 使得 针对 某个 基本 系统 组成 部件 的 性能 优化 策略 对 不同 的 CORBA 系统 而言 都 是 适用 的 　 　 对于 基于 CORBA 规范 开发 的 分布式应用 系统 ， 当 客户程序 对 服务 对象 的 某个 操作 发起 请求 时 ， 首先 会 由 客户 桩 （ Stub ） 或者 动态 调用 接口 （ DII ） 将 该 操作 的 输入 参数 编码 成 IIOP 协议 的 通用 数据表示 （ CDR ） 的 格式 ， 然后 由 ORB 核心 将 其 组装 成 IIOP 的 报文 发送给 服务 方 服务 方 ORB 核心 接收 该 IIOP 报文 后 ， 首先 进行 请求 报文 的 解码 ， 然后 由 基本 对象 适配器 （ BOA ） 和 服务器 架构 （ skeleton ） 或者 动态 架构 接口 （ DSI ） 将 该 客户 的 操作 请求 分派 到 对应 服务 对象 的 相应 操作 中 服务 对象 执行 完该 操作 之后 ， 通过 类似 的 途径 和 方法 将 输出 参数 和 返回值 传递 给 客户程序 该 过程 如图所示 图中 的 阴影 部分 表示 了 需要 进行 性能 优化 的 CORBA 实现 系统 的 基本 组成 部件 ： 桩 或 动态 调用 接口 、 基本 对象 适配器 、 架构 或 动态 架构 接口 以及 IIOP 协议 的 实现 这些 组成 部件 的 优化 采用 不同 的 技术 ， 这 将 在 下节 中 描述 图 　 CORBA 系统 实现 体系结构 　 性能 优化 策略 研究 　 　 CORBA 实现 系统 的 性能 优化 策略 根据 优化 部件 的 不同 ， 大致 可以 划分 为个 类别 ： IDL 编译器 生成 代码 的 优化 、 IIOP 协议 实现 的 优化 和 请求 分发 机制 的 优化 其中 ， 前 两种 优化 策略 是 紧密 地 联系 在 一起 的 ； 在 某种程度 上 ， IDL 编译器 生成 代码 的 优化 也 可以 作为 IIOP 协议 实现 的 优化 的 一部分 另外 ， 这里 的 优化 策略 基本上 只 涉及 CORBA 实现 端系统 的 优化 ， 而 没有 涉及 支持 报文 传输 的 传输 协议 及其 实现 的 性能 优化 IIOP 协议 实现 的 优化 　 　 为了 达到 各种 ORB 间 互操作 的 目的 ， CORBA 规范 中 定义 了 用于 ORB 间通信 的 标准 通信协议 GIOPgeneralinterORBprotocol ， 它 由个 部分 组成 ： ① 　 公共数据 表示 （ CDR ） ， 它 提供 GIOP 表示 IDL 数据类型 的 格式 标准 ， 它 将 IDL 数据类型 映射 到 低级 的 二进制 流 ， 以便 于 网络 传输 ； ② 　 GIOP 消息 GIOP 协议 定义 了 种 消息 实现 对象 请求 回答 、 对象 定位 和 信道 管理 ； ③ 　 GIOP 消息传递 机制 的 定义 GIOP 协议 只是 一种 抽象 协议 ， 在 实现 时 必须 映射 到 具体 的 运输 层 协议 或者 特定 的 运输 机制 上 ， 目前 CORBA 规范 定义 了 GIOP 到 TCPIP 协议 和 DCE 的 映射 　 　 GIOP 协议 到 TCPIP 协议 的 映射 称为 IIOPinternetinterORBprotocol 协议 ， 它 逐步 成为 Internet 上 的 对象 互操作 协议 IIOP 协议 中 关于 数据表示 和 消息 格式 等 均 与 GIOP 完全相同 ， 它 只是 对 消息 传送 部分 进行 了 具体化 ， 它 规定 了 怎样 利用 TCP 连接 来 交换 GIOP 消息 　 　 由于 各种类型 的 参数 和 返回值 编 、 解码 及 发送 、 接收 都 要 经过 IIOP 协议 的 处理 ， 因此 ， IIOP 协议 的 实现 性能 直接 关系 到 整个 CORBA 系统 的 运行 性能 和 效率 　 　 （ ） 连接 管理 的 优化 　 　 IIOP 协议 直接 架设 在 TCPIP 协议 之上 ， 因此 每个 请求 和 回答 必定 是 通过 一个 特定 TCPIP 链接 来 进行 传输 的 对于 传输 CORBA 请求 和 回答 的 TCPIP 连接 而言 ， 大致 有类 管理 方法 ： ① 对 每个 客户 请求 都 建立 一个 单独 的 TCPIP 链接 该 方法 实现 比较简单 ， 不 需要 记录 任何 管理 信息 ， 但是 ， 由于 不断 地 建立 和 拆除 TCPIP 链接 会 耗费 大量 的 时间 ， 因此 ， 这种 方法 的 运行 效率 是 最低 的 ； ② 对 每个 服务 对象 建立 一个 TCPIP 链接 该 方法 避免 了 大量 的 建链 和 拆链 开销 ， 每个 不同 的 服务 对象 的 客户 请求 都 共享 同一个 链接 ， 但是 ， 当 服务端 服务 对象 的 数量 比较 大时 ， 同时 维持 的 TCPIP 链接 数 可能 会 超出 操作系统 的 许可 而 导致系统 的 失败 ； ③ 对 每个 服务端 系统 建立 一个 TCPIP 链接 此时 ， 客户端 对 一个 特定 的 服务端 系统 （ 无论 它 包含 多少 个 服务 对象 ） 只 建立 一次 链接 ， 所有 的 客户 请求 都 共享 该 链接 ， 因此 ， 运行 效率 是 最高 的 但是 ， 系统 必须 维护 一个 客户端 服务端 系统 链接 对应 表以 查找 得到 相应 的 TCPIP 链接 　 　 （ ） 表示层 处理 的 优化 　 　 大量 的 研究 和 测试表明 ［ ， ］ ， 基于 传统 的 CORBA 系统 开发 的 分布式应用 程序 的 性能 之所以 不高 ， 主要 在于 IIOP 的 协议 的 表示层 （ 编解码 ） 处理 效率 比较 低 对于 IIOP 协议 表示层 处理 的 优化 工作 ， 还 因 动态 调用 和 静态 调用 而 不同 　 　 在 动态 调用 情况 下 ， 当 客户 调用 服务 对象 的 操作 时 ， 客户 桩 和 服务器 架构 进行 的 参数 编 、 解码 需要 由 ORB 核心 中 的 CDR 引擎 动态 地 分析 该 参数 的 类型信息 TypeCode 在 遍历 该 参数 的 TypeCode 的 同时 ， 通过 多次 调用 组成 该 参数 类型 的 基本 类型 的 编解码 操作 来 完成 整个 参数 的 编解码 这种 处理 方法 可以 称为 “ 解释 型 ” 的 表示层 处理 方法 　 　 在 OMGIDL 语言 中 ， 各种 复杂 数据类型 ， 如 构造类型 和 模板 类型 等 ， 都 由 基本 类型 组合而成 ， 并且 可能 相互 嵌套 但是 ， 所有 的 复杂 类型 最终 将 拆 分为 各种 基本 类型 因而 ， 对于 各种类型 的 参数 的 编解码 操作 而言 ， 其 执行 的 时间 主要 可以 分为 两 部分 ： ① 组成 该 参数 类型 的 各个 基本 数据类型 的 编解码 操作 所 需 的 执行 时间 ； ② 分析 该 参数 的 类型信息 （ TypeCode ） 及 依次 调用 各 基本 类型 的 所 编解码 操作 所 需 的 执行 时间 显然 ， 对于 某个 固定 类型 的 参数 ， ① 部分 的 执行 时间 是 固定 的 ； 而 ② 部分 的 执行 时间 由于 该 方法 需要 动态 地 分析 参数 的 类型 值 ， 因而 开销 特别 大 ， 使得 表示层 的 处理 成为 瓶颈 　 　 对于 此种 情况 ， Gokhale 利用 Varghese 提出 了 通信协议 软件 优化 的 七个 指导性 原则 ， 对 IIOP 协议 的 表示 处理 进行 了 优化 ［ ］ ： ① 针对 常见 情况 和 常用 算法 进行 优化 ； ② 　 减少 因 冗余 操作 引起 的 资源 浪费 ； ③ 　 用 专用 算法 取代 效率 不高 的 通用 算法 ； ④ 　 事先 计算 并 保存 常用 值 ； ⑤ 　 保存 中间状态 以 加快 资源 耗费 大 的 算法 的 操作 ； ⑥ 　 在 层 与 层 之间 传递 优化 信息 ； ⑦ 　 针对 CPU 缓存 进行 优化 尽管 这些 指导 原则 的 主要 目的 是 为了 一般 网络通信 协议 的 优化 ， 但是 由于 所 描述 的 问题 和 提出 的 解决 方法 具有 一般性 ， 因此 这些 原则 也 适用 于 IIOP 协议 表示层 处理 的 优化 　 　 在 静态 调用 情况 下 ， 由于 客户服务 交互 的 接口 及其 使用 的 数据类型 在 IDL 文件 中 指定 ， 因而 接口 中 每个 操作 的 参数 类型 对于 客户 桩 和 服务器 架构 而言 是 可知 的 这 就 可以 针对 这种 特性 提出 了 一种 效率 较 高 的 IIOP 协议 表示 处理 方法 该 方法 的 基本 思想 是 通过 IDL 编译器 ， 在 客户 桩 服务 架构 中 直接 生成 组成 参数 类型 的 基本 数据类型 的 编解码 的 C 代码 ， 在 进行 参数 编解码 时 ， 就 可以 直接 调用 这些 编解码 操作 这种 方法 可以 称为 “ 编译 型 ” 方法 　 　 该 方法 的 ② 部分 的 执行 时间 比 “ 解释 型 ” 的 要 低 的 多 ， 因为 该 部分 的 工作 在 IDL 语言 编译 为 具体 编程语言 的 过程 中 已经 基本 完成 了 但是 ， 在 这个 过程 中 ， IDL 编译器 生成 的 代码 的 长度 将 大大 地 增加 对于 某些 嵌入式 系统 而言 ， 客户端 或 服务端 代码 的 增加 将 可能 无法 满足 系统 容量 的 限制 因此 ， 对于 静态 调用 的 情况 ， 还 应该 根据 具体情况 在 上述 两种 方法 之间 求得 最优 ［ ］ ， 把 编译 和 解释 处理 相结合 ， 形成 混合 编解码 的 方法 　 　 让 IDL 编译器 自动 生成 混合型 的 数据类型 编解码 操作 需要 解决 以下 个 主要 问题 ： 　 　 估算 为 某种 类型 生成 编解码 操作 的 代码 而 引起 代码 增加 的 耗费 ； 　 　 估算 为 该种 类型 生成 编解码 操作 的 代码 所 能 节省时间 的 收益 ； 　 　 估算 每种 数据类型 运行 时 的 用到 的 概率 ； 　 　 设计 一个 优化 算法 ， 以 上面 个 估算 值 、 运行 速度 或 代码 长度 的 限制 条件 以及 相关 的 数据类型 集合 为 输入 参数 ， 计算 出 一个 产生 混合型 编解码 方法 的 最优 方案 　 　 给定 数据类型 集合 Ttt … tn ， 代码 长度 集合 Ccc … cn ， 时间 集合 Sss … sn 和 频率 集合 Fff … fn ， 其中 ci 是 数据类型 ti 对应 的 编码 操作 和 解码 操作 增加 的 代码 长度 ， si 是 数据类型 ti 使用 编码 操作 和 解码 操作 后 节省 的 时间 ， 而 fi 是 类型 ti 运行 时 被 使用 到 的 频率 ， 它 可以 通过 预先 估计 或者 实际 运行 统计 得到 ， 在 一般 情况 下 可以 认为 各 频率 相同 设 Cmax 是 允许 增加 的 代码 长度 的 最大值 ， 则 该 优化 问题 可 形式 地 描述 如下 ： 　 　 假定 允许 增加 的 代码 长度 的 上界 为 Cmax ， 要求 选择 一个 需 产生 编码 操作 和 解码 操作 的 数据类型 的 集合 ， 使得 增加 的 代码 长度 不 超过 上 界 ， 而 节省 的 时间 最 多 ， 即求 下列 整数 规划 问题 ： 　 　 其中 xi ∈ ， 当 xi 时 表示 数据类型 ti 的 编解码 方式 为 编译 型 ， xi 时为 解释 型 　 　 虽然 整数 规划 问题 已 被 证明 是 一个 NP 完全 问题 ， 但 该 问题 中 xi 的 取值 只有 和 ， 因而 对于 该 问题 ， 存在 一些 较 好 的 逼近 或 启发性 算法 　 　 例如 一种 时间 复杂性 为 Onlogn 的 近似算法 如下 ： 　 　 令 kisifici ， 计算 每种 数据类型 ti 对应 的 ki ； 　 　 对 i 从 到 n ， 将 ti 按 ki 的 值 从 大到 小 排序 ， 设 tj 是 该 排序 ， 即当 jj ， ≤ j ≤ n 时 ， 有 kjkj ； 　 　 在 该 排序 中 ， 取出 前 m 个 ， 使得 ， 并令 tj 对应 的 xi 为 ， 其它 xi 为 　 　 通过 求解 该 整数 规划 问题 ， 可以 确定 输入 的 IDL 文件 中 哪些 数据类型 需要 生成 编码 和 解码 操作 而 对于 其他 数据类型 则 只 生成 TypeCode ， 通过 CDR 引擎 动态 地 解释 来 进行 编解码 这样 ， 就 可以 比较 完美 地 解决 IIOP 协议 的 表示层 处理 问题 请求 分发 机制 的 优化 　 　 传统 的 CORBA 实现 系统 ， 例如 IONA 公司 的 Orbix 系统 ， 在 服务端 对 接收 到 的 客户 请求 进行 分发 处理 时 ， 往往 采用 分 层次 处理 的 方式 ： 首先 ， 基本 对象 适配器 （ BOA ） 根据 客户 请求 中 的 目标 服务 对象 进行 顺序 查找 ； 然后 ， 在 查找 到 的 服务 对象 的 架构 （ skeleton ） 代码 中 ， 根据 所 请求 的 目标 对象 的 操作方法 名称 进行 顺序 查找 （ 字符串 比较 ） ； 最后 ， 执行 该 目标 操作方法 的 代码 ， 进行 具体 的 服务 处理 这种 分层 分发 处理 的 方式 ， 由于 涉及 多次 顺序 查找 的 过程 ， 当 服务端 的 服务 对象 数量 以及 各 服务 对象 所 支持 的 操作 的 数量 较大 时 ， 系统 的 开销 将 非常 大 换句话说 ， 就是 服务端 系统 的 可扩展性 比较 差 　 　 请求 分发 机制 的 优化 主要 是 采用 Hash 查找 机制 代替 顺序 查找 机制 ［ ］ 请求 分发 的 Hash 查找 机制 又 可以 分为 两大类 ： ① 分别 对 目标 服务 对象 查找 及 操作 名称 查找 施行 Hash 查找 的 方式 ， 从 整体而言 ， 分发 查找 过程 仍然 是 分 层次 进行 的 ； ② 将 对 目标 服务 对象 查找 及 操作 名称 查找 结合 在 一起 进行 Hash 查找 ， 此时 ， 基本 对象 适配器 以及 架构 的 分 层次 查找 过程 的 界限 将 被 打破 ， 形成 一次 查找 的 方式 该 方式 对于 服务端 的 服务 对象 数量 以及 各 服务 对象 所 支持 的 操作 的 数量 较大 的 情况 而言 ， 其 执行 效率 是 最高 的 当然 ， Hash 函数 的 确定 在 这里 是 相当 困难 的 　 ORBUS 系统 性能 优化 及其 测试 分析 　 ORBUS 系统 简介 　 　 “ 面向 CIMS 的 并行工程 集成 框架 关键技术 ” 课题 是 国家 “ 八 六三 ” 重大 攻关项目 ， 它 的 目标 是 通过 遵从 CORBA 规范 的 企业 层 框架 ， 实现 不同 的 领域 层 框架 （ 机械 领域 框架 、 电子 领域 框架 和 经营 领域 框架 ） 之间 的 不同 应用 系统 的 信息 和 过程 的 集成 ， 以 达到 尽可能 并行 地 进行 产品 的 开发 设计 和 制造 管理 ORBUS 系统 是 课题组 研制 的 遵循 CORBA 规范 的 一个 实现 ， 它 是 企业 层 框架 的 核心部件 ， 是 整个 集成 框架 正常 运转 的 重要 支撑 　 　 ORBUS 系统 目前 支持 Solaris 和 WindowsNT 操作系统 ， 它 所 支持 的 编程语言 为 CORBUS 系统 由 ORB 运行 系统 、 IDLC 编译器 和 接口 仓库 三个 主要 部件 组成 ORB 运行 系统 包括 了 CORBA 规范 中 的 ORB 核心 、 对象 适配器 、 DII 和 IIOP 等 的 内容 ； IDLC 编译器 包含 了 IDL 语言 映射 、 桩 和 架构 部分 的 生成 　 ORBUS 系统 的 性能 优化 　 　 ORBUS 系统 原先 的 报文 传输 机制 采用 了 SunSoft 公司 的 IIOP 软件包 SunSoft 的 IIOP 软件包 是 一个 免费 的 IIOP 协议 的 参考 实现 （ ftpftpomgorgpubinterop ） ， 它 是 由 C语言 编制 的 ， 提供 了 遵循 CORBA 规范 的 ORB 的 大多数 功能 ， 但是 不 包括 IDL 编译器 、 接口 仓库 和 完整 的 基本 对象 适配器 SunSoft 的 IIOP 参考 实现 采用 了 “ 解释 型 ” 的 表示 处理 方式 ， 它 主要 目的 是 为了 缩减 编解码 代码 的 长度 以 支持 嵌入式 系统 ， 因此 运行 效率 不高 ［ ］ 然而 ， ORBUS 系统 主要 支持 静态 调用 方式 ， 它 具有 一个 强大 而 完整 的 IDLC 编译器 ， 因此 ， 优化 后 的 ORBUS 系统 重新 改写 了 IDL 编译器 生成 编解码 代码 的 部分 ， 抛弃 了 SunSoft 的 解释 引擎 ， 形成 了 “ 编译 型 ” 的 表示 处理 方式 　 　 同时 ， 原先 的 ORBUS 系统 的 实现 为了 方便 ， 采用 了 对 每个 客户 请求 都 建立 一个 单独 的 TCPIP 链接 的 方法 ， 这 在 客户 请求 数量 比较 密集 的 情况 下 ， 性能 将 受到 很大 的 影响 因此 ， 优化 后 的 ORBUS 系统 采用 对 每个 服务端 系统 建立 一个 TCPIP 链接 的 连接 管理 方法 　 　 下面 对 ORBUS 系统优化 前后 的 性能 以及 主流 CORBA 产品 — — IONA 公司 的 Orbix 系统 的 性能 进行 对比 测试 这里 的 性能 衡量 指标 主要 有 如下 两个 ： 　 　 吞吐量 （ throughput ） 吞吐量 通常 指 单位 时间 内 两个 通信 实体 间 单向 传输数据 量 的 大小 ， 一般 以 bps 为 单位 对于 CORBA 系统 而言 ， 吞吐量 指标 主要 是 指 客户 进程 到 服务 对象 实例 之间 ， 单位 时间 内用 本地 主机 格式 表示 的 高层 应用 数据 平均 的 单向 流量 ， 因而 不 包含 表示层 及其 以下 各层 协议 数据 在内 吞吐量 是 衡量 表示层 处理 性能 的 主要 指标 　 　 延迟 （ latency ） 延迟 对 CORBA 系统 而言 ， 主要 是 指 从 客户 开始 调用 客户端 代理 对象 的 操作 开始 ， 到 客户 收到 该 操作 返回值 为止 所 经历 的 平均 时间 ， 并 需要 减去 服务 方 对象 实现 所 执行 操作 的 时间 　 测试环境 　 　 ORBUS 系统 及 Orbix 系统 的 性能 测试 是 在 一台 SunUltraI 工作站 （ CPU 主频 MHz ， 内存 MB ） 上 进行 的 ， 该 工作站 的 操作系统 为 Solaris 由于 实验室 的 网络 环境 为 MBps 以太网 ， 为了 不 使 网络 成为 传输 瓶颈 而 无法 正确 反映 报文 传输 的 吞吐量 ， 客户程序 和 服务程序 都 在 SunUltarI 工作站 上 运行 ， 它们 之间 利用 操作系统 内 的 TCPIP 本地 回环 （ loopback ） 方式 进行 报文 传输 　 　 typedefsequenceshort 　 　 　 shortSeq 　 　 typedefsequencelonglongSeq 　 　 typedefsequencefloatfloatSeq 　 　 typedefsequencedoubledoubleSeq 　 　 typedefsequencestringstringSeq 　 　 typedefsequencecharcharSeq 　 　 structPerfStruct 　 　 　 　 shortshortVallonglongValfloatfloatVal 　 　 　 　 doubledoubleValcharcharValstringstringVal 　 　 　 　 typedefsequencePerfStruct 　 　 structSeq 　 　 interfaceTestReqReply 　 　 　 longtestprimargsinshortshortValinlonglongVal … outcharoutCharoutstringoutString 　 　 　 longteststructargsinPerfStructstructValinoutPerfStructinoutStructoutPerfStructoutStruct 　 　 　 longtestprimseqinshortSeqshortValinlongSeqlongVal … outcharSeqoutCharoutstringSeqoutString 　 　 　 longteststructseqinstructSeqstructValinoutstructSeqinoutStructoutstructSeqoutStruct 　 　 　 供 测试 的 IDL 文件 中 定义 了 一个 TestReqReply 接口 及个 测试 操作 ， 分别 用于 测试 参数 类型 为 基本 类型 、 结构 类型 、 基本 类型 的 序列 类型 和 结构 类型 的 序列 类型 时 所有 CORBA 实现 系统 的 吞吐量 　 测试 结果 　 　 图 给出 了 基本 类型 、 结构 类型 、 基本 类型 序列 和 结构 类型 序列 的 测试 结果 测试 的 结果表明 了 采用 了 “ 编译 型 ” 表示层 处理 方式 以及 对 每个 服务端 系统 建立 一个 TCPIP 链接 的 连接 管理 方法 之后 ， CORBA 端系统 数据传输 吞吐量 有 了 较大 的 提高 ， 接近 甚至 超过 了 主流产品 — — IONA 公司 的 OrbixMTforSolaris 图中 “ ～ ” 分别 表示 执行 次数 、 序列 长度 组 ， … ， ， ， … ， ， ， … ， 图 　 a 基本 类型 ； b 结构 类型 ； c 基本 类型 序列 和 d 结构 类型 序列 的 测试 结果 　 结束语 　 　 本文 所 研究 的 CORBA 系统 的 性能 优化 主要 是 指 CORBA 端系统 实现 技术 的 优化 ， 而 CORBA 实现 系统 的 性能 优化 还 可以 从 CORBA 规范 （ 尤其 是 传输 协议 GIOPIIOP 等 ） 本身 的 机制 着手 进行 ， 例如 ， 如何 在 高性能 的 传输 协议 （ 如 XTP 协议 ） 之上 进行 CORBA 系统 报文 的 传输 此外 ， 目前 实时 CORBA 系统 的 研究 已经 成为 热点 ， 而 高性能 的 CORBA 的 研究 和 实现 也 是 实时 CORBA 系统 的 前提 和 基础 ■ 基金项目 ： 本 课题 得到 国家 “ 八 六三 ” 重大 攻关项目 （ 项目编号 ） 基金 资助 作者简介 ： 谢俊清 ， 男 ， 年生 ， 博士生 ， 主要 研究 领域 为 分布 对象 技术 、 异构 网络 集成 　 　 　 　 　 蔡敏 ， 男 ， 年生 ， 硕士 研究生 ， 主要 研究 领域 为 分布 对象 技术 　 　 　 　 　 顾 冠群 ， 男 ， 年生 ， 中国工程院 院士 ， 教授 ， 博士生 导师 ， 主要 研究 领域 为 高 　 　 　 　 　 　 性能 计算机网络 、 网络协议 工程 、 CIMS 、 分布 对象 技术 作者 单位 ： 谢俊清 （ 国家教委 计算机网络 和 信息 集成 支撑 技术 开放 实验室 东南大学 计算机 科 　 　 　 　 　 　 学与 工程系 　 南京 　 ） 　 　 　 　 　 蔡敏 （ 国家教委 计算机网络 和 信息 集成 支撑 技术 开放 实验室 东南大学 计算机科学 　 　 　 　 　 　 与 工程系 　 南京 　 ） 　 　 　 　 　 顾 冠群 （ 国家教委 计算机网络 和 信息 集成 支撑 技术 开放 实验室 东南大学 计算机 科 　 　 　 　 　 　 学与 工程系 　 南京 　 ） 参考文献 ： ［ ］ ObjectManagementGroupTheCommonObjectRequestBrokerArchitectureandSpecificationRevision ［ ］ VinoskiSCORBAIntegratingdiverseapplicationswithindistributedheterogeneousenvironmentsIEEECommunicationMagazine ～ ［ ］ GokhaleASchmidtDCMeasuringtheperformanceofcommunicationmiddlewareonhighspeednetworksInProceedingsofSIGCOMM ～ ［ ］ GokhaleASchmidtDCTheperformanceoftheCORBAdynamicinvocationinterfaceanddynamicskeletoninterfaceoverhighspeedATMnetworksInProceedingsofGLOBECOM ～ ［ ］ GokhaleASchmidtDCOptimizingthePerformanceoftheCORBAInternetInterORBProtocoloverATMWashingtonUniversityTechRepWUCShttpwwwcswustleducstechreportsWUCSpsgz ［ ］ HoschkaPHuitemaCAutomaticgenerationofoptimizedcodeformarshallingroutinesInIETPTCWGInternationalWorkingConferenceonUpplerLayerProtocolsArchitecturesandApplications ～ ［ ］ GokhaleASchmidtDCMoyerSEvaluatingthePerformanceofDemultiplexingStrategiesforRealTimeCORBAInProceedingsofGLOBECOMhttpwwwcswustleduschmidtGLOBECOMpsgz 收稿 日期 ： 修稿 日期 ：