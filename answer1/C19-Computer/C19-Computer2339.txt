计算机 研究 与 发展 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 　 Vol 　 No 　 P 一个 基于 机群系统 的 面向对象 并行程序 开发 环境 的 研究 与 实现 陆嘉 　 温冬婵 　 王鼎兴 　 郑健楠 摘 　 要 ： 面向对象 程序设计 技术 可以 降低 并行程序 设计 的 复杂性 ， 提高 并行程序 的 可读性 、 可维护性 、 可移植性 因此 提供 面向对象 的 并行程序 设计 环境 ， 可以 减少 并行程序 开发 难度 ， 有效 地 利用 并行 计算机系统 的 潜能 可 扩展 并行 机群系统 是 随着 网络 技术 迅速 发展 而 出现 的 一种 网络 并行计算 系统 其 主要 特点 是 适于 粗粒度 任务 并行 ， 适于 采用 消息传递 机制 文中 在 可 扩展 机群系统 上 实现 了 面向对象 的 并行程序 开发 环境 ParaObject ， 它 由 对象 平台 、 并行 对象 和 邮件 对象 组成 ， 并行程序 以 并行 对象 为 单位 并行执行 ， 通过 邮件 对象 传送数据 ， 具有 良好 的 封装 性 和 可移植性 ， 友好 的 用户 编程 接口 ， 使用方便 关键词 ： 并行程序 开发 环境 ， 面向对象 ， 机群系统 ， 消息传递 分类号 ： TPANOBJECTORIENTEDPARALLELPROGRAMMINGENVIRONMENTBASEDONSCALABLEWORKSTATIONCLUSTERLUJia （ DepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijing ） WENDongChan （ DepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijing ） WANGDingXing （ DepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijing ） ZHENGJianNan （ DepartmentofComputerScienceandTechnologyTsinghuaUniversityBeijing ） Abstract ： TheobjectorientedprogrammingtechnologyisveryusefulinsoftwareengineeringItalsomakessoftwaredeveloperseasytoexpressparallelalgorithmsinparallelprogrammingParaObjectisaparallelprogrammingenvironmentbasedonworkstationclusterItincludesobjectplatformparallelobjectandmailingobjectAsoftwaredeveloperexpressesparallelcoarsegrainedtasksbyparallelobjectsandtransfersdatabymailingobjectKeywords ： parallelprogrammingenvironmentobjectorientedworkstationclustermessagepassing ▲ 　 引言 　 　 面向对象 程序设计 技术 在 软件工程 上 有 巨大 的 优势 面向对象 模型 的 天然 的 并行性 ， 以及 它 所 具有 的 封装 性 、 继承性 、 多态性 等 特点 ， 可以 降低 并行程序 设计 的 复杂性 ， 提高 并行程序 的 可读性 、 可维护性 、 可移植性 因此 提供 面向对象 的 并行程序 设计 环境 可以 减少 并行程序 开发 难度 ， 有效 地 利用 并行 计算机系统 的 潜能 目前 常见 的 系统 有 ACTORS ［ ］ ， PRESTO ［ ］ ， PC ［ ］ ， uC ［ ］ 等 它们 一般 实现 在 共享内存 和 紧 耦合 的 多 机系统 上 ， 程序 并行 粒度 为 细粒度 　 　 可 扩展 并行 机群系统 是 随着 网络 技术 迅速 发展 而 出现 的 一种 网络 并行计算 系统 它 是 用 高速通信 网络 将 工作站 连接 在 一起 其 体系结构 特点 是 构造 简单 ， 各 节点 的 系统 完整 ， 分布式 存储 ， 其 通信 开销 较大 因此 ， 该 平台 上 的 并行计算 的 主要 特点 是 适于 粗粒度 任务 并行 ， 适于 采用 消息传递 机制 　 　 在 可 扩展 并行 机群系统 上 ， 用户 操作 使用 的 软件 界面 常用 的 有 PVM ， MPI ， EXPRESS 等 这些 并行程序 开发 环境 主要 解决 系统核心 运转 以及 组织 各 部分 有效 工作 的 底层 问题 ， 它们 通过 提供 C ， Fortran 语言 的 并行 函数库 实现 并行程序 设计 ， 因此 对 应用程序 的 高层 接口 考虑 不足 ， 特别 是 对于 同样 基于 消息传递 机制 的 不同 环境 ， 应用程序 可移植性 不 强 　 　 我们 采用 C语言 在 并行 机群系统 上 设计 了 ParaObject ， 它 包括 对象 平台 类 、 并行 对象 类 以及 邮件 对象 类 ， 实现 程序 粗粒度 并行 和 数据 传送 ， 完成 并行计算 所 需 的 机制 ， 提供 给 用户 一个 面向对象 的 并行程序 设计 环境 本文 第 部分 介绍 了 对象 平台 ， 第 部分 描述 了 并行 对象 ， 第 部分 描述 了 邮件 对象 ， 第 部分 说明 系统 实现 ， 最后 分析 了 系统 性能 　 对象 平台 　 　 由于 现在 的 并行 计算机系统 很多 ， 性能 差异 较大 ， 用户 的 应用程序 为了 获得 满意 的 性能 ， 往往 要 把 同一个 程序设计 成 许多 版本 ， 以 适应 不同 的 并行 计算机系统 ， 浪费 许多 人力物力 为了 实现 用户程序 的 机器 无关 性 和 良好 的 可移植性 ， 我们 提出 了 对象 平台 的 概念 对象 平台 是 并行 对象 与 实际 并行 系统 之间 的 平台 ， 如图所示 图 　 对象 平台 　 　 对象 平台 对于 普通用户 而言 是 不 可见 的 ， 对于 系统 程序员 相当于 一台 虚拟 并行 计算机 它 包括 虚拟 节点 和 虚拟 节点 之间 连接 ， 其中 虚拟 节点 实现 应用程序 的 运算 处理 ， 其 功能 等价 于 实际 并行 计算机系统 中 的 一个 运算 节点 系统 程序员 可以 设定 对象 平台 中 虚拟 节点 的 个数 和 节点 间 的 连接 方式 ， 也就是说 系统 程序员 可以 根据 实际 需要 定制 虚拟 并行 计算机 ， 即 对象 平台 对象 平台 管理 虚拟 节点 与 实际 并行 系统 的 映射 关系 ， 维护 虚拟 节点 与 实际 并行 节点 的 映射 表 ， 节点 与 节点 间通信 路由表 因为 用户 应用 程序设计 只是 关心 并行 节点 间 的 逻辑 连接 方式 ， 不 关心 实际 的 连接 方式 ， 所以 虚拟 节点 连接 默认 为 全 相连 ， 系统 默认 的 虚拟 节点 个数 与 实际 并行 计算机系统 的 节点 数目 相同 对象 平台 的 主要 功能 是 在 对象 平台 的 虚拟 节点 上 创建 一个 或 几个 任务 ， 通过 节点 与 节点 之间 的 通信 实现 任务 与 任务 之间 的 通信 对象 平台 的 设计 与 实现 充分利用 现有 的 并行程序 开发 环境 ， 例如 PVM ， MPI 等 ， 实现 节点 任务 的 分配 和 节点 之间 的 通信 　 　 我们 采用 C语言 实现 了 一个 对象 平台 类 ， 对象 平台 类 的 参数 主要 有 虚拟 节点 个数 ， 虚拟 节点 连接 表 主要 方法 调用 如下 ： 　 　 虚拟 节点 的 增加 与 删除 ： 　 　 　 　 NodeId 　 ObjectPlatformAddNode 　 　 　 　 void 　 ObjectPlatformDeleteNodeNodeIdnodeid 　 　 虚拟 节点 间 的 连接 建立 与 拆除 ： 　 　 　 　 void 　 ObjectPlatformNodeLinkNodeIdnodeidNodeIdnodeid 　 　 　 　 void 　 ObjectPlatformNodeDislinkNodeIdnodeidNodeIdnodeid 　 　 虚拟 节点 上 任务 的 创建 与 终结 ： 　 　 　 　 TaskId 　 ObjectPlatformCreateTaskNodeIdnodeid 　 　 　 　 void 　 ObjectPlatformTerminateTaskNodeIdnodeidTaskIdtaskid 　 　 各 任务 之间 的 通信 ： 　 　 　 　 void 　 ObjectPlatformSendMessageTaskIdtaskidintmessagelengthintmessagetypevoidmessage 　 　 　 　 void 　 ObjectPlatformReceiveMessageTaskIdtaskidintmessagelengthintmessagetypevoidmessage 　 　 该 对象 平台 类 屏蔽 底层 并行 系统 ， 而且 充分利用 现有 的 并行程序 开发 环境 ， 实现 于 不同 的 底层 并行 环境 上 ， 使 用户程序 无需 关心 底层 平台 的 情况 ， 可移植性 增加 另外 提供 给 应用 程序员 的 并行 对象 、 邮件 对象 都 建立 在 该 平台 上 ， 使得 它们 与 底层 系统 无关 ， 这样 ， 易用性 和 可移植性 就 更好 　 并行 对象 　 　 并行 对象 是 用户程序 在 对象 平台 上 运算 执行 的 任务 单位 它 是 由 并行 数据 、 并行执行 代码 组成 若干个 并行 对象 在 对象 平台 上 并行执行 ， 通过 对象 平台 完成 对象 间 的 通信 一个 并行 对象 相当于 虚拟 节点 上 的 一个 任务 并行 对象 的 主要 属性 有 并行 方法 、 并行 对象 组 、 同步 函数 等 并行 对象 实现 并行程序 的 数据 封装 和 数据 私有 ， 通过 消息传递 来 修改 数据 并行 对象 有 活动状态 和 休眠状态 两种 状态 ， 当 并行 对象 进行 运算 处理 时 ， 它 处于 活动状态 ； 当 并行 对象 处于 同步 等待 、 阻塞 发送 和 接收 时 ， 为 休眠状态 　 　 我们 用 C语言 实现 了 根 并行 对象 类 ， 该类 是 所有 并行 对象 的 父类 ， 它 实现 了 并行 对象 的 创建 与 消亡 、 并行 对象 的 同步 与 通信 系统 在 对象 平台 的 每 一个 节点 上 都 有 一个 主控 程序 ， 由 它 来 管理 并行 对象 全局 表 ， 当 一个 新 的 并行 对象 创建 时 ， 这个 并行 对象 的 情况 就 加入 到 并行 对象 全局 表中 ， 例如 该 对象 所在 的 节点 号 ， 并 通知 各个 节点 修改 自己 的 并行 对象 全局 表 对象 之间 通信 时 ， 要 先 检索 全局 表 ， 获得 与 之 通信 对象 所在 节点 号 ， 再 建立 节点 间连接 由于 每个 节点 上 都 有 若干个 并行 对象 ， 因此 每个 对象 都 有 自己 特定 的 消息 接收 类型 发送 对象 还 需要 知道 接收 对象 的 消息 接收 类型 ， 才能 发送数据 所以 全局 表中 还 记录 了 对象 的 消息 接收 类型 根 并行 对象 类中 有 一个 虚 函数 ParallelProcedure ， 没有 实际 可 并行执行 代码 用户 在 继承 根 并行 对象 类 定义 实际 应用程序 的 并行 对象 类时 ， 可 将 该 虚 函数 定义 为 用户 需要 并行 运算 的 函数 或 过程 　 并行 对象 的 创建 　 　 并行 对象 创建 在 用户程序 声明 时 用户 在 声明 一个 并行 对象 时 ， 先 定义 一个 新类 ， 它 继承 根 并行 对象 类 ， 有 自己 的 并行 运算 代码 这个 新类 可以 声明 若干个 实例 ， 每 一个 实例 就是 一个 并行 对象 这些 并行 对象 具有 相同 的 并行 运算 代码 这种 使用 方法 常用 于 并行程序 SPMD 的 执行 方式 另外 ， 不同 的 类 声明 不同 的 实例 ， 即 每 一个 并行 对象 的 并行 运算 代码 不同 这种 方法 常用 于 并行程序 MPMD 的 执行 方式 　 　 当 用户 定义 的 并行 对象 的 执行 代码 中 涉及 其他 并行 对象 时 ， 直接 用根 并行 对象 类 声明 该 并行 对象 实例 ， 而 不是 用 相应 子类 声明 系统 只是 将 该 实例 名 填入 全局 表 ， 并 不 实际 派生 并行 对象 直到 子类 声明 该 对象 实例 ， 派 生出 并行 对象 时 ， 其 相应 属性 才 填入 全局 表 例如 ： 　 　 　 　 classReceiverpublicParallelObject 　 　 　 　 　 　 virtualvoidParallelProcedure 　 　 　 　 　 　 　 　 floata ［ ］ b ［ ］ c ［ ］ 　 　 　 　 　 　 　 　 ParallelObjectsender 　 　 　 　 　 　 声明 但 不 创建 并行 对象 　 　 　 　 　 　 　 　 Mailm 声明 邮件 对象 　 　 　 　 　 　 　 　 msender 从 并行 对象 sender 接收 邮件 　 　 　 　 　 　 　 　 mgetb 　 　 　 　 　 　 　 　 mgetc 从 邮件 中 取出 数据 　 　 　 　 　 　 　 　 forintiii 　 　 　 　 　 　 　 　 　 　 a ［ i ］ b ［ i ］ c ［ i ］ 　 　 　 　 　 　 　 　 　 　 　 　 receiver ［ ］ 创建 个 并行 对象 　 　 　 　 classSenderpublicParallelObject 　 　 　 　 　 　 virtualvoidParallelProcedure 　 　 　 　 　 　 　 　 floatb ［ ］ c ［ ］ 　 　 　 　 　 　 　 　 ParallelObjectreceiver ［ ］ 　 　 　 　 声明 但 不 创建 并行 对象 　 　 　 　 　 　 　 　 Mailm 　 　 　 　 　 　 　 　 forintii ＜ i 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 mputb ［ i ］ 　 　 　 　 　 　 　 　 　 　 　 　 mputc ［ i ］ 　 　 　 将 发送数据 装入 邮件 　 　 　 　 　 　 　 　 　 　 　 　 mreceiver ［ i ］ 　 　 　 发送给 相应 并行 对象 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 sender 创建 并行 对象 　 并行 对象 组和 组间 同步 　 　 两个 并行 对象 之间 的 同步 可以 通过 阻塞 通信 来 实现 ， 而 几个 并行 对象 间 的 同步 则 可以 通过 系统 提供 的 并行 对象 组 的 组间 同步 来 实现 每 一个 对象 都 有 一个 组群 属性 ， 说明 它 所 属于 的 并行 对象 组 并行 对象 可以 加入 一个 并行 对象 组 ， 也 可以 退出 一个 对象 组 但是 不能 同时 属于 两个 组 　 　 并行 对象 组 主要 作用 是 实现 组间 同步 当组内 的 一个 对象 在 同步 点 申请 同步 后 ， 该 对象 则 进入 休眠 态 ， 直到 同 一组 内 的 所有 对象 都 申请 同步 当同 一组 的 所有 对象 都 申请 同步 后 ， 它们 都 进入 活动状态 ， 从 同步 点 继续 向下 执行 　 　 组间 同步 的 实现 方法 是 检索 并行 对象 全局 表中 的 同组 对象 的 状态 ， 若 所有 同组 对象 都 申请 同步 ， 则 向下 执行 ； 否则 等待 　 　 并行 对象 的 组群 管理 和 同步 函数 说明 如下 ： 　 　 BooleanParallelObjectJoinGroupchargroupname 　 　 加入 一个 指定 并行 对象 组 　 　 BooleanParallelObjectWithdrawGroupchargroupname 退出 一个 指定 并行 对象 组 　 　 voidParallelObjectBarrier 同组 对象 同步 　 并行 对象 间 的 通信 　 　 用户程序 使用 邮件 对象 来 进行 对象 间通信 ， 本文 第 部分 将 详细 说明 　 邮件 对象 　 　 基于 消息传递 机制 的 并行程序 设计 ， 消息 传递函数 是 非常 重要 的 然而 一般 并行 系统 所 提供 的 消息 通信 函数 往往 比较 繁琐 ， 大量 相似 的 函数 充斥 其中 ， 导致 应用程序 的 可读性 不好 ， 容易 出错 ， 并且 有 许多 涉及 底层 系统 的 数据结构 和 系统 调用 ， 一般 的 应用 程序员 不仅 难以 理解 而且 也 没有 必要 关心 这些 因此 ， 我们 为 用户 提供 了 一个 简单 、 灵活 的 邮件 类该 邮件 类 表达清晰 ， 可读性 强 ， 并 实现 了 并行 对象 间 消息 的 阻塞 传送 与非 阻塞 传送 　 邮件 类 　 　 用户 使用 的 邮件 对象 由 系统 提供 的 邮件 类 Mail 声明 ， 用户 可以 根据 自己 的 需要 ， 向 邮件 对象 中 加入 具体 消息 ， 一次 收发 含有 若干个 消息 的 邮件 对象 　 　 邮件 对象 有种 属性 ， 包括 邮件 目的 地址 、 邮件 发送 地址 、 邮件 类型 和 消息 包链 等 ； 两种 调用 方法 ： 阻塞 发送 和 非 阻塞 发送 其中 ， 邮件 发送 地址 由 系统 根据 发送 对象 自动 填写 ， 邮件 类型 说明 并行 对象 间 传递 邮件 的 类型 ， 以 区别 各种 不同 的 邮件 邮件 类型 有 普通 邮件 、 全局 广播 邮件 、 组内 广播 邮件 例如 邮件 类型 为 时 ， 该 邮件 为 全局 广播 邮件 程序员 在 使用 邮件 对象 时 没有 必要 关心 如何 设置 邮件 类型 消息 包是 并行 对象 之间 传递 的 数据 ， 邮件 对象 通过 消息 包 链表 将 若干 消息 包 组织 在 一个 邮件 对象 中 　 　 消息 包链 由 一个 或 几个 消息 包 组成 ， 每个 消息 包 包括 消息 缓冲区 首 地址 、 消息 长度 、 链表 指针 数据结构 定义 如下 ： 　 　 　 　 structMessagePackage 　 　 　 　 　 　 MessagePackagenext 　 　 　 　 　 　 voidmessagebufferaddress 　 　 　 　 　 　 unsignedlongmessagelength 　 　 　 　 　 　 程序员 可以 使用 邮件 对象 的 put 方法 将 若干个 消息 逐条 加入 邮件 对象 的 消息 包 链表 ， 使用 get 方法 将 邮件 对象 中 的 消息 逐条 取出 将 多条 消息 打包 、 一次 收发 的 方式 可以 减少 通信 连接 建立 次数 ， 减少 通信 开销 邮件 对象 的 putget 方法 有 两种 参数表 ， 一种 要 指明 消息 长度 ， 另 一种 无须 指明 ， 默认 消息 长度 为 这 常用 于 收发 单个 变量 　 　 例如 ： 并行 对象 po 发送数据 ， 并行 对象 po 接收数据 ： 　 　 po 的 程序 如下 ： 　 　 　 　 inta ［ ］ b 　 　 　 　 Mailm 　 　 　 　 　 　 　 定义 邮件 对象 　 　 　 　 mputa 　 　 　 　 mputb 　 　 　 数据 加入 邮件 　 　 　 　 mpo 　 　 　 　 发送 邮件 ； 　 　 po 的 程序 如下 ： 　 　 　 　 intaa ［ ］ bb 　 　 　 　 Mailmm 　 　 　 定义 邮件 对象 　 　 　 　 mmpo 　 　 　 接收 邮件 　 　 　 　 mmgetaa 　 　 　 　 mmgetbb 　 　 从 邮件 中 取出 数据 并行 对象 po 将 发送数据 a ［ ］ 和 b 加入 邮件 对象 m ， 并 发送给 并行 对象 po ； 并行 对象 po 从 po 收到 邮件 ， 放入 邮件 对象 mm ， 然后 取出 数据 ， 放入 aa ［ ］ 和 bb 　 邮件 的 传送 与 接收 　 　 邮件 类 提供 给 用户 种 通信 模式 ： 点对点 、 全局 广播 和 组内 广播 点对点 通信 是 两个 并行 对象 之间 的 通信 ， 通信 邮件 的 类型 为 普通 类型 ； 全局 广播 通信 是 对 该 程序 涉及 的 对象 平台 上 的 所有 对象 发送 ， 通信 邮件 的 类型 为 全局 广播 类型 ； 组内 广播 通信 是 对 所有 同组 并行 对象 广播 ， 通信 邮件 类型 为 组内 广播 类型 邮件 类 提供 给 用户 有种 点对点 发送 方式 ： 阻塞 发送 与非 阻塞 发送 邮件 的 阻塞 发送 是 发送 方 发送 邮件 ， 在 接收 方 接收 到 邮件 后 才 继续执行 阻塞 发送 可以 作为 并行 对象 间 两 两 同步 之用 邮件 的 非 阻塞 发送 是 发送 方 发送 完成 后 ， 不论 接收 方 是否 收到 ， 就 继续执行 非 阻塞 发送 消除 发送 后 等待 ， 可以 提高 发送 方 的 运行 效率 邮件 接收 时 ， 接收 方 阻塞 在 邮件 接收 处 ， 直到 邮件 收到 才 继续执行 　 　 系统 通过 重载 运算符 “ ” 、 “ ＞ ” 和 “ ” 、 “ ＜ ” 来 定义 发送 和 接收 的 方法 ， 其 操作数 是 并行 对象 ， 以 表明 邮件 发送 的 目的 地址 和 接收 邮件 的 发送 地址 “ ” 、 “ ” 表示 阻塞 方式 ， “ ＞ ” 、 “ ＜ ” 表示 非 阻塞 方式 邮件 全局 广播 发送 时 使用 方法 broadcast ， 组内 广播 发送 时 使用 方法 broadcastchargroupname 　 系统 实现 　 　 ParaObject 系统 由 对象 平台 类库 、 并行 对象 类库 、 邮件 类库 、 ParaObject 系统 预 编译器 和 C语言 编译器 组成 程序 通过 加入 并行 对象 ， 与 各类 库 完成 编译 链接 ， 便 得到 并行 系统 可 执行 代码 该 系统 总体 结构 如图所示 图 　 ParaObject 系统 总体 结构 　 　 ParaObject 系统 预 编译器 完成 并行程序 文本 的 处理 ， 以 适应 各 底层 系统对 并行任务 文本 的 要求 对象 平台 类 的 构造函数 完成 对象 平台 的 初始化 ， 以及 在 各 节点 创建 主控 任务 并行 对象 类 的 构造函数 创建 相应 的 并行 对象 处理 任务 ， 析构 函数 消亡 该 并行 对象 任务 邮件 对象 类 的 构造函数 实现 邮件 的 初始化 　 性能 测试 　 　 我们 用 C语言 在 由 台 曙光 PowerPC 工作站 （ 主频 MHz 组成 的 用 MEthernet 互联 的 并行 机群系统 上 ， 底层 使用 PVM 并行 开发 环境 实现 了 ParaObject 系统 ， 并 测试 了 系统 的 并行 运行 性能 ， 其中 多 环形 体 图像处理 是 CAD 的 真实 物体 光照 模型 计算结果 如下 表 所示 ： 表 　 性能 测试 结果 程序 名个 并行 对象 运行 时间 s 个 并行 对象 运行 时间 s 相对 加速 比 矩阵 乘 × 分数 维多 环形 体 图像 　 总结 　 　 我们 在 可 扩展 机群系统 上 实现 了 面向对象 的 并行程序 开发 环境 ParaObject ， 它 由 对象 平台 、 并行 对象 和 邮件 对象 组成 ， 并行程序 以 并行 对象 为 单位 并行执行 ， 通过 邮件 对象 传送数据 ， 具有 良好 的 封装 性 和 可移植性 ， 友好 的 用户 编程 接口 ， 使用方便 ■ 基金项目 ： 本 课题 得到 国家 国防科技 预研 重点项目 项目编号 基金 资助 作者简介 ： 陆嘉 ， 男 ， 年月生 ， 博士 研究生 ， 主要 研究 方向 为 并发 面向对象 语言 、 面向 　 　 　 　 　 　 对象 并行 系统 　 　 　 　 　 温冬婵 ， 女 ， 年月生 ， 副教授 ， 主要 研究 方向 为 并行计算 、 并发 计算机 语言 　 　 　 　 　 王鼎兴 ， 男 ， 年月生 ， 教授 ， 博士生 导师 ， 主要 研究 方向 为 并行计算 与 分布 　 　 　 　 　 　 处理 系统 及 应用 作者 单位 ： 陆嘉 （ 清华大学 计算机科学 与 技术 系 　 北京 　 ） 　 　 　 　 　 温冬婵 （ 清华大学 计算机科学 与 技术 系 　 北京 　 ） 　 　 　 　 　 王鼎兴 （ 清华大学 计算机科学 与 技术 系 　 北京 　 ） 　 　 　 　 　 郑健楠 （ 清华大学 计算机科学 与 技术 系 　 北京 　 ） 参考文献 ： ［ ］ AghaGAACTORSAModelofConcurrentComputationinDistributedSystemBostonTheMITPress ［ ］ BrianNBershadEdwardLazowskaDLevyHenryMPRESTOAsystemforobjectorientedparallelprogrammingSoftwarePracticeandExperience ～ ［ ］ BodinFBeckmanPGannonDYangSKesavanSMalonyAMohrBImplementingaparallelCruntimesystemforscalableparallelsystemsInProceedingsoftheSupercomputingConferencePortlandOregan ［ ］ BuhrPADithckfieldGStroobosscherRAYoungerBMuCConcurrencyintheobjectorientedlanguageCSoftwarePracticeandExperience ～ 收稿 日期 ： 修稿 日期 ：