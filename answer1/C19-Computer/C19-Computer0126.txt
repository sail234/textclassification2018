计算机 应用 COMPUTERAPPLICATIONS 年 第卷 第期 VolNoiRMX 环境 下 的 实时 程序设计 张建志 　 　 摘 　 要 　 实时 应用 程序设计 和 传统 应用 程序设计 在 许多 方面 有 显著 不同 。 本文 首先 论述 实时 程序设计 所 面临 的 主要 问题 ， 接着 介绍 iRMXforWindows 实时 OS 环境 下 玻壳 尺寸 数据 实时 测控 系统 的 实现 ， 最后 概述 两个 关键技术 问题 的 处理 方法 。 　 　 关键词 　 iRMX ， 实时 程序设计 ， 玻壳 ， 测控 REALTIMEPROGRAMMINGINIRMXENVIRONMENTZhangJianzhiSouthwestComputerCenterSichuanMianyang 　 　 Abstract 　 ThereareoutstandingdifferencesinmanywaysbetweentraditionalprogrammingandrealtimeprogrammingInthispaperthefirstdiscussionisthemainfactorsoftherealtimeprogrammingThenintroducestheiRMXforWindowsandtheimplementationoftherealtimemeasuringcontrolsystemusedinacolorbulbmanufacturerAtlastoutlinesthetreatmentoftwotechnicalkeyproblemsinthedevelopmentprocess 　 　 Keywords 　 iRMXRealtimeprogrammingBulbMeasuringcontrol 　 前言 　 　 实现 实时控制 的 计算机系统 称为 实时 系统 ， 它 必须 在 限定 的 时间 内 对外 来 的 信号 或 事件 进行 处理 并 做出 适当 反应 ， 从而 创建 一种 平稳 高效 的 工作 流程 。 一般 实时 应用 系统 是 在 实时操作系统 基础 上 构造 的 。 就 实时性 而言 ， 嵌入式 系统 也 属于 实时 系统 ， 但 它 运行 时 并不需要 实时 OS 。 因此 ， 实时 系统 有 多种 构造 方式 和 表现形式 。 对于 较 大规模 的 实时 应用 系统 ， 应该 说 ： 实时 系统 计算机 实时 OS 实时 应用程序 外部 过程 接口 。 　 　 一个 实时 应用 系统 的 实时性 ， 要 靠 实时 OS 和 实时 应用程序 共同 保证 。 因此 ， 实时 OS 是 基础 ， 实时 应用程序 是 关键 。 实时 OS 为 实时 应用程序 提供 开发 和 运行 环境 ， 保证 确定性 和 实时性 是 其 最高 设计 目标 。 　 实时 程序设计 所 面临 的 问题 　 　 不同于 传统 应用 程序设计 ， 实时 应用程序 一般 是 靠 事件驱动 的 ： 异步 事件 触发 一系列 计算 ， 而 这些 计算 必须 在 规定 的 时限 内 完成 ， 以 保证 应用 系统 的 正常 运作 。 在 iRMX 系统 中 ， 内部 事件 是 能够 导致 任务 状态 变化 的 某个 系统 调用 和 有关 目标 。 典型 的 外部 事件 是 中断 信号 。 　 　 实时 应用程序 必须 保证 逻辑 上 的 正确性 和 执行 时间 上 的 正确性 ， 必须 显式 地 处理 系统 程序 面临 的 一些 问题 ， 如 并发 性 、 任务 管理 和 调度 、 任务 间 通讯 和 互斥 等 。 在 iRMX 环境 下 进行 实时 程序设计 还应 考虑 以下 问题 。 ． 　 影响 实时性 的 因素 　 　 决定 一个 计算机系统 实时性 的 主要 因素 包括 确定性 、 速度 、 任务 现场 切换 时间 （ CST ） 和 中断 响应 时间 （ IRT ） 。 其中 确定性 最 重要 ， 它 主要 取决于 OS 的 性能 。 　 　 CST 分 三个 阶段 ： ① 识别 现场 切换 时机 ， 并 选择 下 一个 要 执行 的 任务 ； ② 保护 当前任务 的 CPU 现场 ， 以便 再次 执行 ； ③ 加载 新 任务 的 现场 ， 并 开始 执行 。 阶段 ① 由 OS 的 任务调度 程序 决定 。 阶段 ② 和 ③ 取决于 CPU 相关 指令 的 执行 速度 。 　 　 IRT 的 大小 主要 取决于 OS 的 中断 管理机制 。 IRT 也 受 硬件 的 约束 ， 因为 CPU 只能 在 一条 指令 执行 完毕 后 才能 识别 中断请求 ， 而 一般 CISC 最长 指令 和 最 短 指令 的 执行 周期 达 ： ， 所以 IRT 必须 按 最坏 的 情况 考虑 。 但 与 OS 的 中断 管理机制 相比 ， IRT 的 硬件 因素 显然 是 微乎其微 的 。 　 　 为 减小 IRT ， iRMX 支持 两级 中断 管理机制 ： 一级 是 中断 处理程序 ， 另 一级 是 中断 任务 。 中断 处理程序 在 当前任务 现场 执行 （ 无 任务 CST ） ， 进行 简单 的 数据 采集 和 外部 事件 应答 。 而 中断 任务 和 系统 中 的 其它 任务 一样 ， 竞争 使用 CPU ， 进行 较 复杂 的 数据处理 。 是否 使用 或 如何 使用 这一 机制 ， 则 由 应用 设计者 决定 。 ． 　 任务调度 　 　 iRMXOS 的 任务调度 程序 采用 抢占 式 基于 优先级 的 调度 算法 。 系统 不 干涉 应用 任务 的 优先级 。 运行 的 任务 一直 运行 下去 ， 唯一 能 停止 当前任务 运行 的 条件 是 ， 任务 进入 就绪 状态 以外 的 其它 状态 ， 或 有 一个 比其 优先级 更 高 的 任务 进入 就绪 状态 。 任务 的 就绪 态 运行 态 、 睡眠 态 就绪 态 、 和 睡眠 挂 起态 挂 起态 的 转换 ， 是 由 调度 程序 主动 完成 的 。 任务 的 其它 状态 转换 ， 则 由 应用 任务 自己 主动 申请 ， 由 OS 任务调度 程序 协助 完成 。 　 　 应用程序 要 合理 地 安排 好 各 任务 的 优先级 。 一般 的 做法 是 ， 使 任务 的 优先级 正比 于 相应 事件 的 到达 速率 （ 即 任务 的 到达 速率 越 快 ， 其 优先级 越高 ） 。 这种 简单 的 调度 算法 ， 可能 导致 事件 丢失 。 　 　 因此 在 设计 硬 实时 系统 时 ， 应用程序 应该 采用 适应性 任务调度 算法 （ 采用 中断 排队 缓冲 技术 和 动态 修改 优先级 的 办法 ， 最大 限度 地 满足 各 任务 的 时限 ） 。 首先 测量 和 计算 各 任务 的 λ τ δ （ 事件 到达 速率 所需 CPU 时间 时限 ） 参数 ， 然后 确定 调度 算法 ， 并用 软件 模拟 ， 逐步 修改 完善 。 如果 一个 实时 应用 系统 希望 OS 采用 适应性 调度 算法 ， 则 必须 有 一种 办法 ， 将 每个 任务 λ τ δ 参数 通知 实时 OS 的 调度 程序 。 遗憾 的 是 ， 实时 OS 一般 不 支持 适应性 调度 算法 。 因此 ， 适应性 调度 算法 只能靠 应用程序 实现 。 　 　 需要 指出 的 是 ， 如果 一个 应用 系统 的 所有 任务 存在 关系 ∑ λ i τ i ≮ （ i 为 任务 号 ） ， 那么 ， 无论 采用 何种 调度 策略 和 算法 ， 都 无法 满足 该 系统 的 实时性 要求 。 这 意味着 ， 任何 计算机系统 的 时间 和 空间 资源 都 是 有限 的 ， 其 负载 能力 也 是 有限 的 。 　 应用 系统 概述 　 　 彩色 玻壳 生产 是 一个 规模 较大 ， 工艺 复杂 ， 技术含量 较 高 的 工业 制造 过程 。 必须 要 有 一个 相应 规模 的 生产 计算机网络 ， 对 各条 生产线 进行 自动生产 计数 、 外观 缺陷 计数 、 尺寸 测量 和 现场 设备 的 协调控制 ， 并 能 对 大量 的 历史数据 进行 综合 分析 处理 ， 以 提供 质量 控制 、 现场 设备 调整 、 生产 计划 等 决策 支持 。 生产 计算机系统 由 上位 机系统 和 下位 机系统 两级 结构 组成 。 从 功能 观点 看 ， 上 、 下位 机系统 均 分为 计数 和 尺寸 两个 子系统 。 上 、 下位 机 的 应用 系统 通过 Ethernet 局域网 ， 采用 TCPIP 协议 ， 实现 系统 互联 和 通讯 。 本文 着重 介绍 尺寸 下位 机 TCU （ TerminalControlUnit ） 子系统 的 实现 。 ． 　 总体 需求 简介 　 　 尺寸 应用 系统 由 多台 自动 和 手动 尺寸 测量 TCU 组成 。 　 　 自动 尺寸 测量 TCU 系统 的 构成 如图所示 ， 用于 玻壳 产品 的 全数 检 。 其 主要 功能 是 ， 实时 采集 和 处理 尺寸 数据 ， 协调控制 现场 设备 正确 动作 ， 自动 接收 摄像机 发来 的 玻壳 设备 编码 （ FACTOR ） ， 并 和 尺寸 数据 一起 存盘 ， 实时 传给 上位 机 。 图 　 自动 尺寸 测量 TCU 系统 的 构成 　 　 手动 TCU 的 功能 要求 和 自动 TCU 的 基本相同 ， 差别 有 ： ① 手动 TCU 要 挂接 个 现场 测量 终端 ， 要求 能 同时 工作 ； ② 在 系统控制 台上 要 能 监视 个 测量 终端 的 测量 结果 ； ③ 不 需要 与 现场 其它 设备 进行 DIDO 操作 ， 通过 和 操作 人员 交互 完成 对 玻壳 的 各种 数据 测量 和 处理 。 　 　 为了 对 工艺 和 设备 的 变化 有 很 强 的 适应能力 ， 要求 尺寸 测量 TCU 系统 具有 处理 最 多路 模拟信号 和 DIDO 开关 信号 的 能力 。 比如 ， TCU 既 可以 挂接 数字 量规 ， 也 可以 挂接 模拟 量规 ， 量规 台数 （ ～ 台 ） 和 测量 点数 是 可变 的 ； 挂接 的 摄像机 可以 是 开关 量 的 ， 也 可以 是 串行口 的 ， 等等 。 除 工艺 文件 外 ， 类似 这样 的 环境参数 和 功能 选项 必须 是 动态 可 配置 的 。 各 TCU 要 能 自动 生成 新 的 测量 程序 ， 以便 快速 适应 生产线 的 产品 换型 。 要求 每台 尺寸 TCU 能 保存 当前 ～ 万枚 玻壳 产品 的 原始数据 记录 （ 字节 枚 ） ， 具体 数量 可 自由 设定 。 ． 　 实时性 和 并发 性需求 　 　 概括地说 ， 尺寸 TCU 应用 系统 的 实时性 和 并发 性需求 有 以下 几个 方面 ： 　 　 （ ） 实时 测量 处理 生产线 上 的 玻壳 尺寸 数据 ， 协调控制 现场 其它 设备 动作 。 自动 尺寸 TCU 的 现场 终端 ， 在 显示 测量 结果 的 同时 ， 可以 及时 响应 操作 人员 的 各种 操作命令 。 如 移动 自动 测量 数据 的 显示 点 位置 ， 进行 人工 设备 编码 输入 等 。 　 　 （ ） 在 本地 系统 控制台 或 远程 终端 上 ， 可以 进行 工艺 文件维护 ， 自动 生成 计算公式 和 测量 程序 ， 输出 各种 报表 ， 动态 配置 现场 测量 程序 的 环境参数 。 　 　 （ ） 远程 标题 登录 （ 主动 向上 位机 申请 一组 工艺 文件 ） 。 　 　 （ ） 在 系统 控制台 或 远程 终端 上 ， 反馈 监视 现场 终端 的 测量 画面 。 　 　 （ ） 实时 接收 上位 机下 传 的 工艺 文件 ， 并 自动 刷新 测量 程序 的 内存 工艺 参数 。 　 　 （ ） 在 ms 内 读入 摄像机 发来 的 玻壳 设备 编码 。 　 　 （ ） 尺寸 数据 实时 上传 。 在 的 时间 内 ， 将 最 多台 尺寸 TCU 中 堆积 的 数据 送往 上位 机 。 　 　 （ ） 尺寸 TCU 与 上位 机 自动 同步 。 　 　 （ ） 实时 向上 位机 发送 尺寸 TCU 的 运行 状态 和 报警 信息 。 　 　 （ ） 手动 TCU 的 三个 终端 可以 同时 进行 玻壳 尺寸 测量 。 　 　 （ ） 上述 所有 功能 的 同时 执行 ， 不能 影响 数据 采集 处理 和 生产线 的 动作 节拍 。 ． 　 应用 系统 的 实现 　 　 从 上述 需求 情况 可以 看出 ， 尺寸 TCU 应用 系统 的 OS 要 能 同时 支持 多用户 多任务 实时性 。 DOS 显然 不能 胜任 。 OS 和 Windows 虽然 是 多任务 系统 ， 但是 不 支持 多用户 ， 所以 也 不 可取 。 我们 选用 iRMXforWindows 作 开发 环境 和 目标 环境 ， 用 IntelC 作 开发 语言 。 整个 尺寸 应用 系统软件 由个 独立 的 可执行程序 组成 。 为了 方便使用 和 系统管理 ， 将 全部 程序 集 成为 个 子系统 。 整个 尺寸 应用 系统 运行 稳定 可靠 ， 完全 满足用户 需求 。 　 　 尺寸 TCU 应用 系统 采用 iRMX 的 两级 中断 管理机制 和 动态 修改 任务 优先级 的 办法 ， 在 确保 测控 任务 的 实时性 前提 下 ， 使 其它 作业 有 充足 的 机会 使用 CPU 。 应用 系统 的 技术 关键 还有 不同 作业 的 动态 数据交换 、 任务 的 通讯 和 互斥 操作 。 　 不同 作业 任务 间 的 通讯 　 　 同一 台 尺寸 TCU 中 ， 不同 作业 任务 间 要 进行 通讯 ， 必须 将 用于 通讯 的 iRMX 目标 登记 到 约定 的 作业 目录 下 ， 以便 双方 查找 和 使用 该 目标 。 不同 作业 任务 间 不能 用 直接 共享内存 或 直接 共享 目标 进行 通讯 。 　 　 在 同一 台 尺寸 TCU 系统 中 ， 不同 作业 任务 间 通讯 的 典型 例子 是 后台作业 APNETJOB 和 前台 作业 TCUSTART 、 TERMAT 、 TERMMA 和 PCTOOL 等 之间 的 通讯 。 APNETJOB 的 数据 追赶 任务 接受 PCTOOL 数据 追赶 请求 ， 向上 位机 发送 需要 追赶 的 尺寸 数据 ， 然后 向 PCTOOL 报告 有关 情况 。 APNETJOB 中 的 正常 数据 发送 任务 和 数据 追赶 任务 ， 通过 全局变量 start — keepupAPNetKeepOver 通讯 。 　 　 PCTOOL 与 APNETJOB 通讯 还 可以 采用 其它 处理 方式 。 但是 ， 只靠 文件 通讯 将 严重 影响 程序执行 效率 和 通讯 的 实时性 。 　 临界 资源 的 互斥 访问 　 　 手动 TCU 需要 挂接 三台 终端 ， 同时 启动 三个 测量 作业 。 三个 作业 使用 同一个 尺寸 数据文件 TCUii 和 索引 文件 TCUiiIDX （ ii 为 TCU 号 ） ， 它们 存放 尺寸 数据 和 建立 索引 的 操作 必须 协调一致 。 所以 手动 测量 程序 必须 确保 对 这 两个 文件 写 操作 的 互斥性 。 尽管 每个 测量点 只 占用 一个 AD 通道 ， 但是 对于 AD 卡 来说 ， 多个 模拟量 共用 一个 AD 转换 蕊 片 ， 并且 任何 两台 量规 的 部分 模拟信号 很 可能 占用 同 一块 AD 卡 （ 因为 每个 AD 卡为 路 ， 而 每根 电缆 跑 路 ） ， 所以 ， 手动 测量 程序 也 必须 保证 互斥 地 操作 AD 卡 。 否则 ， 任一 量规 的 测量 结果 随时 都 可能 出错 。 　 　 数据 索引 文件 的 互斥 访问 处理 与 之 类似 。 每个 测量 作业 随时 可能 从 手动 测量 程序 TERMMA 退到 TCUSTART 下 （ 测量 集成 环境 ） 。 TCUSTART 也 可以 退出 ， 但 退出 后 HI 又 自动 启动 它 。 之所以 如此 ， 是 为了 便于 系统维护 和 管理 。 因此 ， 让 TERMMA 或 TCUSTART 来 创建 该 互斥 机构 都 是 不 合适 的 。 因为 一旦 创建者 退出 系统 后 ， 其它 测量 作业 对 该 互斥 机构 的 访问 将 是 非法 的 。 所以 ， AD — MUTEX 只能 由 后台作业 APNETJOB 来 创建 ， 并 登录 到 系统 的 根 作业 目录 下 。 　 　 iRMX 临界 区 是 实现 临界 资源 互斥 访问 的 一种 专门 控制 机制 。 但是 ， 一 单位 信号灯 AD — MUTEX 同样 可以 实现 互斥 操作 。 　 总结 　 　 iRMX 提供 了 保证 实时性 的 内部 机制 ， 但是 ， 对 这些 机制 的 触发 和 运用 则 是 应用 开发者 的 事情 。 因此 ， 只有 彻底 理解 多任务 并发 执行 和 有关 任务 间 的 同步 、 通讯 、 互斥 操作 和 任务调度 等 概念 和 原理 ， 充分 掌握 并发程序 设计 的 思想 和 方法 ， 全面 熟悉 具体 实时 OS 的 有关 环境 和 系统 调用 ， 才能 设计 好 一个 实时 应用 系统 。 实时 应用 程序设计 与 传统 应用 程序设计 的 主要 区别 在于 ： 各自 的 主要 设计 目标 不同 ， 所 面临 的 技术 问题 不同 。 但 成熟 的 软件工程 理论 和 传统 的 程序设计 方法 都 可以 借鉴 。 面向 过程 的 设计 技术 和 面向对象 的 设计 思想 同样 适合 实时 程序设计 。 作者简介 ： 张建志 　 高级 工程师 。 主要 从事 ： 工控 应用 开发 、 实时 系统 研究 。 作者 单位 ： 西南 计算中心 　 四川 绵阳 （ ） 参考文献 ［ ］ 　 ChristopherVickeryRealTimeandSystemsProgrammingforPCsMcGrawHill ， ［ ］ 　 RadisysCorporationiRMXProgrammingTechniques ［ ］ 　 谭浩强 ， 等 程序设计 与 开发技术 北京 ： 清华大学出版社 ， 收稿 日期