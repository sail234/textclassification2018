计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNo 航空 票务 信息系统 的 设计 与 实现 汪世明 ， 杜 新华 摘要 ： 讲座 了 在 ClientServer 环境 下 ， 通信 系统 硬件 、 软件 以及 数据库 的 一种 设计 方法 ， 提出 利用 交换式 多 兆比特 数据业务 （ SMDS ） 进行 数据通信 的 系统 硬件 设计 方法 ， 讲座 了 工程 中 利用 WinSock 进行 通信 的 程序流程 ， 以及 ClientServer 环境 下 数据库 应用 开发 的 几点 经验 。 关键词 ： 客户服务器 ； 交互式 多 兆比特 数据业务 ； 套 接字 ； 开放式 数据库 互连 ； 数据库 管理系统 TheDesignandRealizationforInformationSystemofAirlinesTicketsServiceWangShimingduxinhuaResearchInstituteofOpticalFibreTechnologyshanghaiJiaotongUniversityShanghai 【 Abstract 】 AdesignmethodologyofthehardwaresoftwareintelecommunicationsystemanddatabaseunderClientServerenvironmentisdiscussedinthispaperAsystemhardwaredesignmethodologyofdatacommunicationviaSMDSispresentedThetechnologicalprocessofcommunicationprogrammingusingWinSockandtheexperienceofdatabaseapplicationdevelopmentunderClientServerenvironmentarealsodiscussed 【 Keywords 】 ClientServerSMDSWinSockODBCDatabasemanagementsystem 硬件 系统 的 实现 　 　 在 工程 中 ， 各 售票点 和 票务 信息中心 的 距离 少则 几公里 ， 多则 几十 上 百公里 ， 所以 直接 铺设 电缆 的 方法 是 行不通 的 ， 过高 的 铺设 费用 会 令人 望而生畏 。 一般 的 方案 是 利用 数字 数据网 DDNDigitalDataNetwork 租用 高速 的 数字 专线 将 Client 和 Server 连接起来 。 这种 方案 是 可行 的 ， 但 存在 如下 缺点 ： 专线 的 带宽 是 固定 的 ， 而 对 票务 信息系统 而言 ， 其 数据 流量 是 突发性 的 ， 这样 带宽 资源 利用率 极低 ， 不足 ％ ， 因此 ， 采用 该 方案 要 承受 很 高 的 运行 代价 。 另 一种 方案 是 采用 X 交换网 ， 这 方案 有着 良好 的 经济 性能 ， 但 它 满足 不了 对 性能 的 要求 ： X 交换网 采用 存储 － 转发 的 交换 方式 ， 传输 延迟 大 一般 为 几百 ms 而且 大多数 X 网络 工作 在 Kbs 的 速率 上 ， 满足 不了 系统 突发 数据 对 速率 的 要求 。 　 　 结合实际 情况 ， 在 系统 实现 中 使用 了 交换式 多 兆比特 数据业务 SMDSswitchedmultimegabitdataservice ， 见图 。 用户 通过 SMDS 的 用户 网络接口 SNISubscriberNetworkInterface ， 采用 分布式 队列 双 总线 SQDB 协议 接入 SMDS 。 SMDS 的 作用 象 一个 高速 的 LAN 主干网 允许 分组 从 一个 LAN 流向 另 一个 LAN ， 用户 只 需 n 条到 最近 SMDS 路由器 的 短 线路 。 这些 短线 路可选 用 各种 连接 办法 ： 如 使用 DQDB 的 城域网 MAN ， 从 电话公司 租用 很 短 的 高速 数字 专线 ， 采用 直接 电缆 连接 ， 或者 建立 红外线 路 等 。 图 使用 SMDS 互连 示意图 　 　 SMDS 是 为 处理 突发 流量 而 设计 的 ， 它 的 标准 速度 是 Mbs ， 虽然 有时 可以 选择 低 一些 的 速度 。 SMDS 以 如下 方式 处理 突发 流量 ， 连接 到 每根 访问 线 的 路由器 包含 一个 计数器 ， 它 以 固定 的 速率 增加 。 当 一个 分组 到达 路由器 时 ， 先 检查 计数器 的 值 是否 比 分组 长度 值大 。 如果 是 ， 该 分组 立即 被 发送 出去 并且 该 计数器 减去 分组 长度 值 。 否则 ， 该 分组 被 丢弃 。 实际上 ， 如果 用户 可以 以 Kbs 的 平均 速率 发送数据 ， 则 其 突发 速率 可能 要 高得 多 。 如果 线路 空闲 了 s ， 那么 用户 可以 按 Mbs 的 速率 发送 KB 的 突发 数据 ， 大约 传输 ms 。 即使 在 KBs 的 租用 线路 上 ， 传输 相同 的 数据量 ， 也 要 用 ms 。 表列出 了 不同 网络 对 用户 信息 的 延迟 表中 SMDS 交换 的 平均 数据 传输速率 为 kbs 设 线路 空闲 s 。 由此可见 ， 这一 方案 充分利用 了 带宽 资源 ， 大幅度降低 了 通信 成本 ， 具有 极好 的 经济性 。 同时 在 需要 时 提供 了 快速 响应 ， 延迟时间 短 。 表 不同 网络 的 信息 延迟 名称 延迟 ms 字节 的 帧 延迟 ms 字节 的 帧 SMDS 交换 帧中继 交换 X 交换 kbs 传输 kbs 传输 Mbs 传输 　 　 SMDS 的 另外 两个 用户 特性 值得一提 ： ① 多点 播送 ， 用户 可以 指定 一系列 SMDS 地址 ， 并且 被 分配 给 一个 特殊 的 号码 以 代替 整个 列表 。 任何 发往 该 号码 的 分组 将 被 发往 列表 上 的 所有 成员 ； ② 当 一个 分组 到达 SMDS 网络 时 ， 路由器 先 确定 源地址 是否 与 输入 线 一致 ， 如果 不 一致 ， 分组 被 抛弃 ； 而且 SMDS 提供 地址 屏蔽 ， 因此 用户 可以 有效 地 建立 私有 网络 ， 与 外界 没有 SMDS 联系 ， 确保 了 网络 的 安全性 。 最后 ， 该 方案 易于 网络 的 扩展 和 维护 。 软件系统 的 设计 　 　 软件 是 系统 的 重点 所在 ， 其 设计 采用 了 面向对象 的 程序设计 技术 。 在 开发 过程 中 ， 将 Client 和 Server 看成 是 两个 相互作用 的 类 ， 根据 需要 在 Client 和 Server 之间 分配资源 和 任务 ， 允许 根据 ClientServer 模式 重新 设计 业务流程 ， 开发 时 易于 把握 复杂 的 软件结构 ， 提高 软件 的 质量 和 适应性 ， 加快 开发 速度 和 降低 开发 代价 。 下面 深入探讨 软件系统 开发 的 具体方法 和 实现 策略 。 网络操作系统 和 开发工具 的 选择 　 　 考虑 用户 对 各种 网络操作系统 的 熟悉 程度 和 用户界面 的 友好 性 ， 选用 国内 最 通用 的 基于 TCPIP 的 MicrosoftWindowsNT ， Client 端 运行 WindowsNTWorkStation ， Server 端 运行 WindowsNTServer 。 在 软件 开发工具 方面 ， 考虑 到 开发工具 功能 的 强弱 以及 是否 具有 简单 易用 的 开发 界面 ， 采用 了 VisualC 。 因为 ① VisualC 支持 WindowsSockets 网络 编程 ， 而且 提供 了 ODBC 驱动器 ， 这些 驱动器 支持 诸如 Access 、 Foxpro 、 Oracle 等 数据库系统 ； ② 微软 基础 类库 MFC 提供 了 丰富 的 设计 良好 的 基类 ， 大幅度 地 减轻 了 编程 工作量 ； ③ 所见即 所得 的 界面设计 风格 使 开发者 无须 在 图形 用户 接口 GUI 设计 方面 花太多 的 时间 和 精力 。 通信软件 的 设计 　 　 Sockets 是 网络通信 的 基本操作 单元 ， 它 提供 了 不同 主机 间 进程 双向通信 的 端口 ， Sockets 编程 接口 是 应用层 协议 的 实现 基础 ， 它 通过 调用 传输服务 原语 访问 传输服务 来 隐藏 网络 底层 复杂 的 结构 与 协议 ， 使 编程人员 能够 抽象 而 简单 地 进行 网络通信 。 随着 Internet 在 全球 范围 内 的 广泛 使用 ， Sockets 已 逐渐 成为 网络 编程 的 通用 接口 。 Windows 套 接字 WinSock 和 WinSockAPI 结合 了 伯克利 的 套 接字 函数 和 微软 的 Windows 函数 ， 这种 结构 可 使 编程人员 将 Windows 的 消息 驱动 机制 和 伯克利 套 接字 规范 结合 起来 。 WinSock 支持 两类 套 接字 ， 分别 是 流式 套 接字 SOCKSTREAM ， 支持 TCP 协议 和 数据 报套 接字 SOCKDGRAM ， 支持 UDP 协议 ， 都 适用 于 ClientServer 模型 。 在 这 两种 套 接字 中 ， 数据 报套 接字 支持 广播 消息 的 发送 ， 但 不 保证数据 的 可靠性 ， 也 不 保证数据 的 顺序 。 在 工程 中 采用 流式 套 接字 ， 流式 套 接字 是 一种 面向 数据流 的 传输 方法 。 在 服务器 处 Socket 创建 成功 后 并 处于 等待 状态 时即 Listening 状态 ， 客户机 Socket 创建 成功 后 与 服务器 的 Socket 进行 连接 。 连接 成功 后 ， 双方 就 可以 进行 数据 的 发送 和 接收 工作 ， 全双工 状态 ， 接收 和 发送 同时 进行 。 采用 流式 套 接字 可以 保证 传输 的 可靠性 并 保证数据 的 顺序 。 　 　 为 描述 WindowsSocket ， MFC 提供 了 两个 类 ： CAsynSocket 和 CSocket 。 其中 CAsynSocket 类 封装 了 WindowsSocketsAPI 并 将 与 Sockets 有关 的 Windows 消息 转化 为 回调 函数 。 CAsynSocket 是 基类 ， 其 使用 更具 灵活性 ， 但 对 编程人员 的 要求 也 较 高 。 CSocket 类 是 CAsynSocket 类 的 派生类 ， 通过 MFC 中 的 CArchive 类 的 对象 提供 了 更 高层次 的 抽象 ， 它 封装 了 Sockets 实现 中 的 许多 小节 。 在 通信软件 的 开发 时 采用 了 CSocket 类 ， 按 以下 个 步骤 进行 如图所示 ： 注 ： （ ） ListenSocket 的 OnAcceptintnErrorCode 函数 被 回调 ， 处理 来自 客户机 的 连接 要求 ； （ ） 处 OnReceiveintnErrorCode 函数 被 回调 ， 处理 来自 另一方面 的 消息 （ ） 为 向 服务器发送 信息 （ ） 为 向 客户机 发送 消息 图 Socket 通信 流程图 　 　 在 服务器端 ， 构造 CListenSocket 对象 类 CListenSocket 是 类 CSocket 的 派生类 ， 重载 其 OnAcceptintnErrorCode 函数 ， 使 其 处理 来自 客户机 的 连接 请求 ， 在 客户机 端 ， 构造 CClientSocket 对象 类 CClientSocket 是 类 CSocket 的 派生类 ， 重载 其 OnReceiveintnErrorCode 函数 ， 使 其 用于 处理 来自 服务器 的 消息 。 　 　 对 以上 两个 对象 分别 调用 其 Create 函数 。 　 　 在 服务器端 ， 调用 CListenSocket 的 Listen 函数 ； 在 客户机 端 ， 调用 CClientSocket 的 Connect 函数 。 　 　 一旦 CListenSocket 的 OnAccept 函数 被 调用 ， 则 执行 CSrvSocketSrvSocket ； CListenSocketAcceptSrvSocket 类 CSrvSocket 是 类 CSocket 的 派生类 ， 重载 其 OnReceiveintnErrorCode 函数 ， 使 其 用于 处理 来自 客户 器 的 消息 。 　 　 在 服务器 和 客户机 两端 分别 构造 CSocketFile 对象 ， 使 其 分别 与 CSrvSocket 或 CClientSocket 对象 相关联 ； 构造 CArchive 对象 ， 接收 或 发送数据 。 　 　 利用 CArchive 对象 进行 ClientServer 间 的 通信 。 　 　 必要 时 删除 CArchive 、 CSocketFile 和 Sockets 对象 。 　 　 在 实际 的 软件 中 ， 有着 许多 错误 陷阱 。 为 节省 篇幅 ， 源程序 部分 略 。 数据库 软件 的 设计 　 　 数据库 软件 是 整个 软件系统 的 关键所在 ， 它 的 性能 很大 程度 上 确定 了 系统 的 性能 。 在 系统 的 开发 过程 中 ， 精心设计 了 这部分 软件 。 　 　 首先 ， 在 数据库 的 实现 方面 ， 考虑 与 已有 数据库 的 兼容性问题 ， 要求 异构 数据库 的 互连 、 共享 和 集成 ， 这样 就 必须 走 开放式 数据库 的 道路 ， 而且 最好 有 一个 简单 易用 的 开发 界面 ， 因此 我们 选用 了 ODBC 。 根据 VCBookOnline 的 定义 ： ODBCprovidesanAPIthatdifferentdatabasevendorsimplementviaODBCdriversspecifictoaparticulardatabasemanagementsystemDBMSYourprogramusesthisAPItocalltheODBCDriverManagerwhichpassesthecallstotheappropriatedriverThedriverinturninteractswiththeDBMSusingStructuredQueryLanguageSQL 。 这 就 说明 ， 作为 Windows 开放 标准 体系 WOSA 的 一个 组成部分 ， ODBC 是 通过 驱动程序 来 提供 数据库 的 独立性 的 。 驱动程序 是 一个 用于 支持 ODBC 函数调用 的 模块 ， 开发 MFC 数据库 软件 时 通过 调用 驱动程序 ODBCDLL 所 支持 的 函数 来 操纵 数据库 。 同时 在 工程 开发 时 ， 采用 了 优化 了 的 ODBC 的 ClientServer 体系结构 ， 如图所示 。 这样 ODBC 驱动程序 管理器 及 驱动程序 位于 Server 端 ， 减少 了 管理 驱动程序 的 工作量 。 并且 提供 了 开放 的 ODBCAPI 应用程序 编程 接口 ， 便于 定制 和 优化 应用程序 。 另外 ， 为 减轻 应用 程序开发 工作量 ， 充分利用 了 个 常用 的 MFC 数据库 类 ： CDatabase 类 封装 了 与 数据源 连接 的 操作 ； CRecordset 类 封装 了 从 数据源 中 选择 得到 的 记录集 ， 该 记录集 是 按 预定 的 查询 条件 获得 的 集合 ； CRecordView 类 提供 了 表格 视图 ， 可以 与 CRecordset 对象 相连接 。 还有 ， 根据 实际 需要 ， 灵活 地 利用 CRecordset 类 的 筛选 器 和 排序 器 对 各种 记录 进行 筛选 、 排序 也 是 很 重要 的 一环 它 使 软件 的 应用 更 方便 、 更 得力 。 图 优化 了 的 ODBCClientServer 体系结构 　 　 其次 ， 为 提高 ClientServer 数据库系统 的 反应速度 ， 我们 选用 了 分布式 逻辑 配置 ， 使得 系统 的 Client 和 Server 有 对称 的 负载 。 Client 和 Server 之间 的 每 一条 消息 ， 都 对应 一个 完整 的 数据库 事物 处理 ， 从而 减轻 了 网络 负载 。 同时 由于 将 表示 逻辑 层 划归 为 Client ， 减轻 了 Server 的 负载 ， 提高 了 系统 的 反应速度 。 另外 还 采用 了 其他 多种 方法 用以 提高 反应速度 ： 如 运行 专用 的 SQL 服务器 ， SQL 服务器 采用 FAT 文件格式 ， 减少 操作系统 高速 缓冲 ， 不 使用 不必要 的 驱动程序 等 。 　 　 最后 ， 在 系统 运行 过程 中 ， 由于 不可 预测 因素 有 可能 致使 网络通信 或者 数据库 操作 的 失败 ， 这样 就 会 导致 客户端 和 服务器 操作 的 不 一致 ， 致使 数据库 的 完整性 和 一致性 遭到 破坏 。 为此 ， 在 工程 中 采用 了 以下 两种 方法 来 控制 ： ① 证实 机制 ， 对 每 一个 数据库 的 写 操作 ， 都 验证 其 是否 被 成功 执行 ； ② 乐观 锁 ， 在 每 一个 表中 增加 一个 总是 随着 记录 的 更新 而 改变 的 字 段 ， 通过 比较 先前 读出 的 字 段值 和 当前 值 ， 就 可以 判断 这 期间 数据库 的 内容 是否 被 更新 。 乐观 锁 机制 提高 了 数据库系统 的 反应速度 。 效果 及 结束语 　 　 网络 条件 下 系统 健壮性 和 响应 时间 是 最 关键 的 问题 。 测试 结果表明 ： 服务器 和 客户机 均 正常 工作 后 ， 网络通信 的 最大 传输 延迟 在 秒 以下 ， 未 发现 有 误码 或 死机 及 系统 崩溃 现象 ； 数据库 是 该项 目的 最大 组成部分 ， 在 近周 的 测试 过程 中 ， 发现 数据库 操作 的 反应时间 在 秒 以下 ， 未 检测 到 有 任何 错误 ， 满足 了 航空 票务 信息系统 对 健壮性 和 响应 时间 的 要求 ， 用户 对系统 性能 表示满意 。 在 建成 和 运行 成本 方面 ， 由于 硬件 系统 的 优良 设计 ， 同 其他 类似 的 信息系统 相比 ， 该 系统 具有 最高 的 性能 价格比 。 另外 ， 由于 软件系统 的 精心设计 ， 其 开发 费用 是 相当 低 的 。 　 　 数据库 和 ClientServer 模型 的 结合 ， 是 信息管理系统 发展 的 必然趋势 。 在 硬件 系统 方面 根据 实际 情况 设计 通信 网络 ， 软件 上 采用 WinSock 机制 来 进行 Client 、 Server 之间 的 通信 ， 可 获得 较 高 的 通信 性能 价格比 。 ODBC 是 一个 十分 简洁 的 数据库 应用 接口 ， 适当 地 利用 它 可以 节省 开发 时间 ， 简化 开发 过程 ， 提高 软件 质量 。 最后 合理 地 进行 数据库系统 的 负载 分配 ， 精心 地 设计 数据库 应用 开发 ， 可以 提高 数据库系统 的 反应速度 ， 缩短 其 反应时间 。 作者 单位 ： 上海交通大学 光纤 技术 研究所 ， 上海 参考文献 NortonPMFC 开发 WindowsNT 应用 指南 北京 ： 清华大学出版社 PrenticeHall ， TanenbaumASComputerNetworksThirdEdition 北京 ： 清华大学出版社 、 PrenticeHall ， 高传善 ， 张世永 ， 曲海 计算机 网络教程 上海 ： 复旦大学 出版社 ， UllmanJD ， WidomJAFirstCourseinDatabaseSystems 北京 ： 清华大学出版社 ， OnlineHelpaboutVisualCMicrosoftCorporation ，