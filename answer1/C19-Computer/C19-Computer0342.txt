计算机 应用 COMPUTERAPPLICATIONS 年 第卷 第期 VolNo 基于 CORBA 的 异地 协同工作 流 模式 沈 军营 　 黄进 　 严隽琪 　 蒋祖华 　 　 摘 　 要 　 为了 解决 自动化 孤岛 之间 的 有效 通讯 问题 。 这里 提出 用 Java 在 Internet 上 开发 一种 基于 CORBA 的 工作 流 管理系统 的 方法 。 并 在 工作 流 管理系统 中 引入 了 Agent 技术 。 　 　 关键词 　 工作 流 ， CORBAAgentJavaInternetCORBABASEDTELE — COLLABORATIONWORKFLOWMODELShenJunying 　 HuangJin 　 YanJunqi 　 JiangZuhuaCIMResearchInstituteShanghaiJiaoTongUniversity ， Shanghai 　 　 Abstract 　 InordertosolvingthecommunicationproblembetweentheislandsofautomationaworkflowmodelbasedontheInternetCORBAispresentedTheAgentintheworkflowmodelisalsodiscussed 　 　 Keywords 　 Workflow ， CORBAAgentJavaInternet 　 前言 　 　 现代 企业 在 其 产品设计 和 制造 过程 的 各个环节 上 ， 有效 地 利用 了 计算机辅助 工具 。 可是 由此 却 形成 了 一系列 的 自动化 孤岛 。 在 各个环节 之间 存在 着 数据 交流 和 部门 协同 的 问题 。 常规 的 分布 计算技术 难以 胜任 这 类 协同工作 的 应用 。 因为 经典 的 客户服务器 计算技术 不 支持 服务器 对 客户 的 直接 控制 ， 也 不 支持 客户 应用 之间 的 信息 交流 。 这样 往往 造成 的 一种 结果 是 在 发达国家 中 普遍存在 的 片面 要求 集成 而 进行 的 大量 投资 但 缺乏 柔性 的 生产 及 信息 体系 。 　 　 工作 流 管理系统 和 CORBA 技术 是 解决 上面 问题 的 有效 方法 。 从而 为 企业 能够 快速 响应 市场 变化 ， 把握 市场 机遇 、 优化 资源 、 优势互补 而 建立 企业 之间 的 动态 联盟 ， 即 一种 通过 现代 通讯 手段 动态 联系 起来 而 形成 的 企业 集团 （ 虚拟企业 ） ， 提供 了 一种 有效 的 技术手段 。 　 工作 流 管理系统 　 　 工作 流 管理 是 近年来 在 计算机 应用领域 中 发展 最为 迅速 的 几项 新 技术 之一 ， 其 主要 特征 是 实现 人 与 计算机 交互 事件 结合 过程 中 的 自动化 。 工作 流 主要 涉及 的 内容 是 工作 任务 的 整体 处理过程 、 工作 组成员 间 依据 一组 已 定义 的 规则 及 已 制定 的 共同 目标 所 交换 的 文本文件 、 各种 媒体 信息 或 任务 。 工作 流 管理系统 是 一个 用于 分布式 环境中工作 任务 进程 间 的 协调 及 协作 式 处理 的 软件系统 。 面向 群体 协同工作 并 支持系统 开放 集成性 的 工作 流 管理系统 是 使 企业 的 内部 综合 信息处理系统 适应 动态变化 的 市场需求 的 关键所在 ， 人们 主要 采用 工作 流 管理系统 实现 工作 任务 处理过程 的 重构 设计 及 过程 的 优化 。 　 　 工作 流 管理 联盟 （ WfMC ） 将 工作 流 定义 为 业务流程 的 全自动 和 部分 自动化 ； 在 此 过程 中 ， 文档 、 信息 或者 任务 按照 一定 的 过程 规则 进行 流转 。 一个 流程 包括 一系列 的 活动 （ activities ） 和 相关 的 数据 。 在 流程 中 的 每 一步 即 是 一个 活动 （ activity ） 。 它 包括 一个 名称 、 类型 号 、 开始 和 结束 的 控制 信息 。 工作 流 的 运行 是 由 工作 流 管理系统 来 完成 的 。 它 和 工作 流 执行者 （ 人 、 应用程序 ） 交互 ， 推进 工作 流 实例 的 执行 ， 并 监控 工作 流 的 运行 状态 。 　 CORBA 技术 　 　 随着 网络 技术 的 迅速 发展 ， 在 Internet 、 WWW 、 企业 Intranet 上 都 出现 一个 主要 的 特征 ， 即 异构 性 。 这是 由于 网络 上 使用 了 不同 厂家 的 硬件 、 操作系统 、 网络协议 及 各种 软件产品 而 造成 的 。 一方面 ， 它 使 我们 某个 部分 可以 选择 最佳 的 硬件 和 软件 组件 ， 但 在 异构 的 分布式计算 环境 中要 实现 各个 层次 上 的 互操作性 是 非常 困难 的 ， 所谓 的 “ 互操作性 ” 是 指 来源 不同 的 构件之间 能 相互 协调 ， 相互 通讯 、 相互 提供 服务 ， 共同完成 复杂 的 任务 。 为了 实现 这一 目标 ， 国际 上 的 各个 有关 组织 纷纷 制定 支持 分布 系统 互操作 的 标准 。 　 　 当今 国际 上 有 三大 分布式 软件 组件 对象 标准 ： 一个 是 由 OMGObjectManagementGroup 组织 推出 的 CORBACommonObjectRequestBrokerArchitecture 即 公共对象 请求 代理 结构 ； 一是 Microsoft 推出 的 DCOMDistributedComponentObjectModel ， 即 分布式 组件 对象 模型 ； 还有 一个 是 Sun 公司 推出 的 用 Java 语言 开发 的 分布式 对象 模型 RMIRemoteMethodInvocation 。 　 　 CORBA 规范 是 由 OMG 集团 提出 的 对象 技术规范 ， OMG 集团 是 一个 包括 IBM 、 APPLE 、 SUN 等 著名 计算机 公司 的 技术 厂商 联合体 ， 其 宗旨 是 产生 一套 标准 的 语言 、 接口 和 协议 ， 以 支持 异构 应用 间 的 互操作性 及 独立 于 平台 和 编程语言 的 对象 重用 。 　 　 CORBA 规范 的 主要 成分 包括 ORB 核心 、 OMGIDL 接口定义 语言 、 语言 映象 、 接口 池 、 码桩 与 码架 、 动态 调用 与 分派 、 对象 适配器 、 ORB 间 协议 等 部分 。 对 各 部分 功能 的 详细 解释 请 见 参考文献 ［ ］ 　 基于 CORBA 的 工作 流 管理系统 　 　 在 Internet 上 实现 的 基于 CORBA 的 工作 流 管理系统 的 模型 框架 如图所示 ： 图 　 Internet 上 基于 CORBA 的 工作 流 管理系统 的 框架 　 　 在 现有 的 系统 中 ， 我们 实现 了 在 服务器之间 的 通讯 是 建立 在 CORBA 之上 。 在 服务器 和 浏览器 之间 仍然 使用 HTTP 协议 进行 通讯 。 　 　 基于 Web 的 工作 流 管理 的 优点 是 不 需要 专门 的 客户端 软件 。 客户端 软件 是 浏览器 ， 其 使用 方法 已 被 多数 用户 所 熟知 。 同时 ， Web 为 构造 工作 流 管理系统 提供 通讯 基础 。 Java 为 开发 Web 应用 提供 了 很大 的 方便 。 　 工作 流 管理 服务器 与 WWW 服务器 间 的 通讯 　 　 这里 需要 指出 的 是 在 一个 分布式系统 中 ， 特别 是 CORBA 下 的 分布式系统 中 ， 客户 与 服务器之间 的 区分 通常 是 不 确定 的 。 一个 CORBA 应用 部件 通过 创建 一个 实现 对象 及 使 它 应用 在 其他 部件 中 ， 来 提供 一种 特别 的 服务 。 其他 的 部件 通过 定位 那个 对象 来 访问 这些 服务 ， 然后 调入 对象 中 适合 的 方法 来 达到 所 希望 的 效果 。 在 这个 特殊 的 方案 中 ， 创建 这个 对象 的 部件 被 成为 那个 对象 的 服务器 。 调入 对象 的 方法 的 那个 部件 就是 客户 。 进一步 而言 ， 假如 服务 对象 的 一个 方法 把 另 一个 对象 的 参考 作为 一个 参数 。 现在 进一步 假设 客户 为 那个 对象 创建 一个 实现 ， 并 把 它 作为 一个 参数 来 传递 。 那个 “ 客户 ” 现在 就 扮演 这个 具体 对象 的 服务器 ； 那个 “ 服务器 ” ， 当 它 调用 这个 对象 的 任何 一种 方法 时 ， 它 就 成为 客户 。 尽管 两个 部件 的 整体 作用 没有 变化 ， 但是 就 CORBA 而言 ， 每 一个 部件 既 是 一个 客户 ， 又 是 一个 服务器 。 　 　 在 这里 使用 一个 所谓 “ 纯 ” 客户 和 “ 纯 ” 服务器 的 例子 简要 说明 一下 CORBA 在 系统 中 的 实现 。 在 “ 纯 ” 客户 和 “ 纯 ” 服务器 中 ， 客户 将 不 创建 服务器 所 使用 的 对象 。 这样 就 不会 出现 客户 扮演 服务器 的 方案 了 。 具体情况 另有 文章 描述 。 　 　 首先 ， 创建 CoWorkidl 文件 包括 三个 接口定义 interfaceCoWorkuserinterfaceCoWorkserver 和 interfaceCoWorkinfo 。 然后 ， 使用 IDL 编译程序 来 生成 客户 残余 程序 和 服务器 构架 ， 他们 是 客户 和 服务器 实现 创建 的 来源 。 我们 使用 的 是 SUN 公司 的 IDL 编译程序 （ 可 从 httpwwwjavasoftcomproductsjdkidlindexhtml 获得 ） 。 SUN 公司 的 IDL 编译器 的 名称 是 idltojava 。 编译器 使用 方式 为 ： idltojava — fclient – fserverCoWorkidl 。 — fclient — fserver 标志 告诉 IDL 编译器 为 每 一个 接口 分别 创建 客户 残余 程序 和 服务器 构架 。 在 生成 的 文件 中 包括 CoWorkuserjavaCoWorkserverjava 和 CoWorkinfojava 。 这些 文件 包括 那些 为了 创建 一个 功能 服务器 而 必须 实现 的 Java 接口定义 。 还有 — CoWorkuserImplBasejava — CoWorkserverImplBasejava 和 — CoWorkinfoImplBasejava 。 这些 文件 包括 那些 为了 创建 实现 以上 的 接口 ， 我们 将要 扩充 的 Java 类 的 定义 。 剩下 的 工作 就是 用 Java 扩充 和 实现 我们 已经 定义 过 的 服务器 和 客户 的 接口 了 。 　 WWW 服务器 和 浏览器 之间 通讯 　 　 一种 建立 在 CORBA 基础 上 的 服务器 和 浏览器 之间 的 通讯 协议 IIOPInternetInterOrbProtocol 可以 用来 支持 网络 间 的 数据 对象 通讯 。 IIOP 会 成为 一种 新 的 WWW 通讯 协议 ， 且 拥有 它 自己 的 URL 格式 ： iiopobjectrefoperationparameter 。 在 将来 ， IIOP 可能 会 取代 HTTP 从而 成为 访问 任何 的 分布式 Web 对象 的 新 协议 。 　 　 目前 ， 我们 利用 HTTP 通讯 协议 ， 使用 Javaappletserlet 在 WWW 环境 中 进行 开发 。 JavaApplets 为 Web 的 静态 HTML 页面 增添 了 动态 特性 和 交互性 而且 Java 程序 不 需要 移植 费用 。 所有 这些 因素 使得 基于 Java 和 Web 的 CSCW 应用 系统 具有 良好 的 性能 价格比 。 Servlets 是 Java 里 自带 的 扩展 服务器 ， 一般 用于 网络服务 。 包括 ApacheJavaWebServerJWSO ′ Reilly ′ sWebSite 以及 Netscape 在内 的 很多 网络 服务器 支持 它 。 从 更 高层 上 看来 ， servlets 只是 一个 Applet ， 所 不同 的 是 它 运行 在 服务器 环境 下 而 不是 浏览器 下 。 象 Applet 一样 ， 它 有 一个 受 环境 控制 的 生命周期 。 不同 的 是 ， 对 每个 网络 服务器 它 只 创建 一个 servlets 的 实例 。 每个 对 servlets 的 URL 的 请求 被 翻译 为 相同 的 servlets 实例 。 如果 使用 servlet 的 方式 来 扩展 支持 Java 的 Webserver 。 您 会 发现 Javaservlet 比 其他 的 CGI 更 容易 实现 Webserver 的 扩展 、 编程 ， 更加 简单 、 方便 。 　 　 Appelt 和 Servlet 在 TeleDM 工具 中 扮演 了 重要 的 角色 。 Servlet 是 通过 javaxservlet 和 javaxservlethttp 包中 提供 了 ServletAPI 来 实现 与 Applet 进行 通讯 的 。 javaxservlethttp 列举 这些 类 和 应用 界面 来 处理 HTTP 请求 。 通常 ， 他们 是 依靠 HTTP 协议 的 “ requesttorespone ” 模式 。 　 　 客户 对象 流 使用 URL 和 URLConnection 类 使用 HTTP 协议 的 POST 发送 消息 对象 。 即 在 执行 这个 applet 和 servlet 之间 的 通讯 时 ， 我们 用 Java 定义 了 一个 MSG 消息 类 。 即 在 Applet 和 Servlet 之间 传输 的 是 一种 MSG 消息 类 。 MSG 消息 类 包括 增加 和 更新 等 方法 、 信息 来 查找 和 访问 远 端的 类 文件 。 也 可以 通过 MSG 消息 类向 服务器端 发送 类 文件 。 Applet 通过 MSG 消息 类向 服务器端 的 Servlet 发出 信息 查询 的 请求 。 客户端 通过 向 服务器 的 应用 对象 流 传递 “ 消息 对象 ” ， 并 定期 轮询 服务器 以便 知道 它 的 变化 的 方式 来 达到 互通信息 ， 达到 协同工作 的 目的 。 在 文件传输 结束 以后 ， Servlet 把 类 文件 写 到 支持 Java 的 WWW 服务器 上 。 信息 的 通讯 过程 如图所示 。 图 　 AppeltServlet 通讯 示意图 　 工作 流 系统 中 的 Agent 　 　 Agent 是从 分布式 AI 发展 而来 的 。 现在 没有 一个 关于 Agent 的 统一 概念 。 总的来说 ， Agent 是 指 可以 代替 用户 完成 简单 、 重复 的 操作 具有 一定 的 代理 性 的 软件 。 　 　 在 工作 流 系统 的 开发 中 我们 在 两个 方面 引入 了 Agent 技术 ： 　 　 利用 Agent 技术开发 工作 流 管理者 。 这里 的 管理工具 并 不 只 提供 一种 各个 设计 环节 在 网络 之间 进行 的 传输 、 交换 及 共享 数据 的 功能 ， 利用 Agent 技术开发 工作 流 管理者 。 他 能够 向 各 工作站 下达 工作 流程 和 进度 计划 ， 主动 引导 各 工作站 按照 工作 流程 和 进度 计划 推进 工作 ， 并 受理 和 评价 各 工作站 进展 情况 的 报告 ， 以及 集中管理 各类 数据 。 　 　 利用 Agent 开发 工作 流 activity 的 执行者 。 工作 流中 ， “ 人 ” 和 “ Agent ” 共同完成 一个 Activity 的 情况 是 比较 多 的 ， 即 “ 人 ” 在 “ Agent ” 的 辅助 下来 完成 的 。 “ Agent ” 起到 的 是 一个 辅助 的 功能 ， 给 “ 人 ” 做 相关 的 重要 信息 。 即 开发 一种 能 给 各个环节 设计 人员 提供 指导 和 帮助 功能 的 软件 Agent 。 　 　 Java 提供 了 一种 先进 的 基于 WWW 的 Agent 的 方法 。 利用 Java 实现 的 Agent 可以 多线程 执行 ， 它 和 分布 在 Internet 上 的 其他 Agent 利用 KQML 进行 非 同步 通讯 ， 这个 模板 利用 Java 的 平台 独立性 交换 过程 信息 。 　 　 Agent 功能 实体 是 Agent 的 关键 组成部分 ， 它 可以 分成 两 部分 ： 行为 引擎 和 对象 结构 。 打个 比喻 ， “ 行为 引擎 ” 就象 一个 人 的 “ 心脏 ” ， “ 对象 结构 ” 就是 “ 大脑 ” 。 这个 Agent “ 大脑 ” 的 结构 如图所示 ， 是 由 模糊 神经网络 组成 。 它 能 接受 和 处理 由 一系列 模糊 值 组成 的 模糊 向量 。 神经网络 各个 节点 之间 的 权 也 是 由 模糊 值 构成 。 智能 知识库 根据 事先 建立 的 规则 进行 推理 。 这样 就 可以 由 Agent 来 决定 用户 需要 什么样 的 信息 。 这种 自适应性 是 通过 使用 一个 神经网络 来 分析 用户 的 选择 和 对 选定 信息 的 反应 来 实现 的 。 通过 对 神经网络 的 训练 ， agent 可以 根据 不同 用户 的 需求 特点 为 其 提供 相应 的 信息 。 图 　 Agent 对象 结构 的 示意图 　 　 当 采用 了 这种 Agent 结构 ， 开始 时 ， 用户 可能 会 得到 一些 不 相关 的 信息 ， 但是 Agent 会 根据 用户 对 信息 的 取舍 情况 ， 进行 自 组织 的 学习 过程 ， 对 信息 进行 判断 ， 把 与 用户 感兴趣 的 信息 传送 给 用户 。 　 Tele — DM 工具 运行 实例 　 　 根据 前面 的 介绍 ， 我们 开发 了 远程 协同工作 工具 。 Tele — DM 工具 提供 了 一个 虚拟 的 协同工作 环境 。 协同工作 的 成员 通过 白板 和 交谈 工具 进行 信息 的 交流 。 通过 它 ， 成员 能够 方便 迅速 的 把 讨论 的 结果 展示 给 组内 的 其他 成员 。 在 这里 我们 使用 对 组内 成员 平等 的 授权 的 策略 。 即 组内 成员 可以 不 受限制 的 使用 Tele — DM 工具 提供 的 功能 。 　 　 TeleDMco — work 工具 的 applet 是 安装 在 支持 Java 的 WWW 服务器 的 特定 目录 下 ， 同时 包含 了 一个 包含 applet 标识符 的 HTML 文件 也 被 安装 在 同一 目录 的 下面 。 Servlets 是 安装 在 一个 名为 “ servelts ” 的 系统目录 下 。 　 　 在 使用 时 。 用户 在 客户端 的 浏览器 中 输入 TeleCoWork 工具 的 URL 。 Applet 会 自动 的 从 服务器端 下载 到 客户端 。 用户 可以 打开 一个 存在 于 服务器 上 的 图像文件 。 协同 工具 中 的 白板 可以 显示 从 Web 服务器 上 下载 下来 的 图像文件 。 如果 用户 想 向 工作组 内 的 其他 成员 展示 一幅 图 。 他 需要 首先 把 图形 的 图像文件 上载 到 服务器端 ， 然后 从 白板 中 打开 这个 图像文件 。 这个 图像文件 便 同时 出现 在 工作组 内 其他 成员 的 白板 上 。 组内 成员 就 可以 用 白板 提供 的 画线 、 画圆 工具 展开讨论 了 。 这里 使用 Javaapplet 实现 的 白板 支持 除 gif 及 jpeg 两种 已经 被 Java 支持 的 图像 文件格式 外 ， 还 支持 bmp 格式 的 图像文件 。 　 　 同时 提供 了 一个 交谈 工具 。 启动 交谈 工具 的 方法 是 用 鼠标 单击 白板 菜单 中 的 “ optionchatwindow ” 选项 。 就会弹 出 交谈 工具 的 窗口 。 用户 就 可以 在 上面 进行 基于 文本 的 信息 交流 了 。 结果 如图所示 。 图 　 协同工作 工具 的 运行 结果 　 小结 　 　 基于 CORBA 的 工作 流 管理系统 的 模型 框架 为 解决 不同 企业 异构 平台 之间 的 信息 通讯 提供 了 有效 的 技术手段 。 把 Agent 技术 引入 工作 流 管理系统 ， 极大 的 提高 了 其 灵活性 和 适用性 。 　 　 基于 Web 的 工作 流 管理 ， 其 优点 是 不 需要 专门 的 客户端 软件 。 客户端 软件 是 浏览器 ， 其 使用 方法 已 被 多数 用户 所 熟知 。 参加 协同工作 的 用户 只要 简单 的 在 自己 的 浏览器 中 访问 Webserver ， 把 Applet 自动 下载 自己 的 浏览器 中 即可 进行 协同工作 。 　 　 我们 的 工作 目前 还 处在 实验室 阶段 。 开发 更加 实用 的 系统 还有 待 进一步 的 工作 。 注 ： 本文 得到 CIMSNo 资助 作者简介 ： 沈 军营 　 博士 。 主要 研究 方向 ： 异地 、 协同 产品开发 。 作者 单位 ： 上海交通大学 CIMS 所 　 上海 ） 参考文献 ［ ］ 　 MartinHardwickRichardBoltonTheIndustrialVirtualEnterpriseCommunicationsofACM ； （ ） ： ［ ］ 　 JinHuangInternetCORBAbasedMultiAgentSystemforTele — DesignandManufacturingICAMT ′ ， ［ ］ 　 TheworkflowreferencemodelTheworkflowmanagementcoalitionspecificationWfMCTC ［ ］ 　 OMGTheCommonObjectRequestBrokerArchitectureandSpecificationRevision ［ ］ 　 CharlesJPetrieAgentBasedEngineeringtheWebandIntelligenceIEEEExpert 收稿 日期 修改稿