微型机 与 应用 MICROCOMPUTERITSAPPLICATIONS 　 Vol 　 No 　 P 基于 Windows 线程技术 实现 数据 采集 的 简易 编程 方法 周开利 　 汪云 摘要 ： 基于 Windows 线程 编程技术 ， 将 DOS 数据 采集 程序 “ 包裹 ” 成个 线程 ， 利用 共享 文件 交换 数据 ， 实现 Windows 环境 下 数据 采集 的 简易 编程 。 关键词 ： 数据 采集 Windows 线程 共享 文件 　 　 Windows 以其 友好 丰富 的 图形用户界面 、 简单 灵活 的 操作 ， 折服 了 各 行业 的 用户 。 工业 控制 领域 的 用户 也 不 例外 ， 但 由于 Windows 操作系统 是 以 非 抢占 事件 消息 驱动 为 主要 特征 ， 强调 设备 无关 性 风格 ， 不 鼓励 用户 开发 直接 面向 硬件 设备 的 用户程序 ， 因此 试图 在 Windows 环境 下 开发 数据 采集 软件 ， 往往 使 习惯 DOS 编程 的 一般 用户 感到 无从下手 。 也 有 文章 介绍 了 一些 很 好 的 解决 方法 ， 但 大都 需要 较 高 的 Windows 或 特定 语言 如 VisualC ＋ ＋ 的 编程技术 。 而 当 你 熟悉 的 Windows 开发 环境 不 适于 采用 上述 方法 时 ， 本文 介绍 的 方法 也许 不失为 一种 简单易行 的 方法 。 本文 使用 DOS 环境 下 的 BorlandC ＋ ＋ 和 Windows 环境 下 的 BorlandC ＋ ＋ Builder 进行 程序编制 ， 但 若 使用 的 是 DOS 环境 下 的 BASIC 、 PASCAL 或 Windows 环境 下 的 VB 、 VC ＋ ＋ 等 ， 同样 可以 采用 本文 所 介绍 的 方法 。 它 所 要求 的 仅仅 是 ： 任何 一种 你 所 熟悉 的 DOS 环境 下 的 I ／ O 编程技术 和 共享 文件 使用 方法 ； 任何 一种 你 所 熟悉 的 Windows 开发 环境 中 有关 线程 和 共享 文件 的 应用 方法 。 基本原理 　 　 本文 采用 的 方法 如图所示 。 图 原理 框图 　 　 数据 采集卡 通过 DOSI ／ O 接口 程序 ， 对 I ／ O 口 进行 读写操作 交换 数据 ； 而 DOSI ／ O 接口 程序 与 Windows 应用程序 之间 却是 通过 共享 数据文件 交换 数据 。 换句话说 ， 对 I ／ O 口 直接 操作 的 依然 是 DOS 程序 ， Windows 应用程序 只是 对 数据 采集 间接 控制 ， 从而 避开 了 Windows 程序 不能 对 I ／ O 口 直接 读写 的 限制 。 　 　 问题 的 关键 是 Windows 应用程序 如何 能 实时 获得 I ／ O 口 的 数据 并 对 其 读写 进行 控制 ， 本文 通过 线程 和 共享 文件 解决 这一 问题 。 所谓 线程 ， 简而言之 就是 运行 在 应用程序 中 的 独立 进程 ， 它 只是 代码 的 执行 体 ， 其 处理 时间 由 操作系统 控制 而 不是 程序控制 。 在 Windows 应用程序 中 加入 DOSI ／ O 接口 程序 线程 对象 ， 则 二者 并行 运行 于 计算机 中 。 DOSI ／ O 接口 程序 通过 对 I ／ O 口 的 直接 读写 完成 数据 采集 并 以 采集 的 数据 不断更新 采集 数据文件 中 的 数据 。 Windows 应用程序 可 同时 从 采集 数据文件 中 读取数据 ， 效果 就 好像 从 I ／ O 口 直接 读取数据 一样 。 为了 对 数据文件 能 同时 进行 读写操作 ， 文件 必须 以 共享 方式 在 个 应用程序 中 同时 打开 — — 即 共享 文件 。 另一方面 ， 如果 我们 需要 对 DOS 线程 进行 控制 或 传输数据 如 终止 线程 运行 或 传递 D ／ A 数据 等 时 ， 可以 以 同样 方式 再 建立 个 控制数据 文件 进行 “ 消息 ” 传递 。 软件 编程 DOS 部分 　 　 本文 以市售 PCLS － 数据 采集卡 为例 ， 使用 DOS 环境 下 的 BorlandC ＋ ＋ 进行 软件 编程 。 该 采集卡 具有 个 D ／ A 和 个 A ／ D 通道 ， 其 I ／ O 口基 地址 为 x ， x ～ x 为 A ／ D 通道 的 高 ／ 低位 数据 和 通道 号 端口地址 ； x ～ x 为个 D ／ A 通道 的 高 ／ 低位 数据 端口地址 。 ＃ include ＜ stdioh ＞ ＃ include ＜ dosh ＞ ＃ include ＜ STDLIBH ＞ ＃ include ＜ conioh ＞ ＃ include ＜ shareh ＞ ＃ include ＜ ioh ＞ typedefunsignedintword ； constintBASE ＝ x ； ／ ／ 设置 I ／ O 口基 地址 voidmainintstatus ， dtl ， dth ， adl ， adt ， c ＿ reg ， chv ， i ， Tn ； wordda ＝ x ， da ＝ x ； FILEfADout ， fDAin ， fCtrl ； fDAin ＝ ＿ fsopen ″ DAindat ″ ， ″ r ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 打开 D ／ A 共享 数据文件 fADout ＝ ＿ fsopen ″ ADoutdat ″ ， ″ w ＋ ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 打开 A ／ D 共享 数据文件 fCtrl ＝ fsopen ″ Ctrldat ″ ， ″ r ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 打开 控制 共享 数据文件 do 　 　 fseekfCtrl ， SEEK ＿ SET ， ； 　 　 fscanffCtrl ， ″ ％ d ＼ n ″ ， ＆ Tn ； 　 　 ifTn ＝ ＝ ／ ／ DOS 程序 接到 Windows 终止 运行 控制 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 字 “ ” 时 ， 执行 相应 操作 　 　 　 　 　 fclosefDAin ； 　 　 　 　 fclosefADout ； 　 　 　 　 fclosefCtrl ； 　 　 　 　 exit ； 　 　 　 　 return ； 　 　 　 fseekfDAin ， SEEK ＿ SET ， ； 　 　 fscanffDAin ， ″ ％ d ％ d ＼ n ″ ， ＆ da ， ＆ da ； ／ ／ 从 D ／ A 数 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 据 文件 中 读取 D ／ A 数据 da 、 daoutportbBASE ＋ ， da ＆ xf ＜ ＜ ； ／ ／ 写 D ／ A 通道 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 数据 低位 值 outportbBASE ＋ ， da ＞ ＞ ； ／ ／ 写 D ／ A 通道 数据 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 高位 值 outportbBASE ＋ ， da ＆ xf ＜ ＜ ； ／ ／ 写 D ／ A 通道 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 数据 低位 值 outportbBASE ＋ ， da ＞ ＞ ； ／ ／ 写 D ／ A 通道 数据 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 高位 值 fseekfADout ， SEEK ＿ SET ， ； i ＝ ； do 　 　 outportbBASE ＋ ， ； 　 　 outportbBASE ， ； 　 　 do 　 　 　 　 status ＝ inportBASE ＋ ； 　 　 　 　 delay ； 　 　 　 whilestatus ＆ x ＝ ＝ ； 　 　 dtl ＝ inportbBASE ； ／ ／ 读 A ／ D 通道 i 数据 低位 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 值 和 通道 号 　 　 dth ＝ inportbBASE ＋ ； ／ ／ 读 A ／ D 通道 i 数据 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 高位 值 　 　 adl ＝ dtl ／ ； 　 　 adt ＝ dth ＋ adl ； ／ ／ A ／ D 转换 值 　 　 chv ＝ dtl － adl ； ／ ／ A ／ D 通道 号 　 　 fprintffADout ， ″ ％ d ％ d ＼ n ″ ， chv ， adt ； 　 ／ ／ 将 A ／ D 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 通道 号 及 转换 值 写入 A ／ D 数据文件 　 　 whilei ＋ ＋ ＜ ； 　 whilei ＞ － ； 　 　 　 　 ／ ／ 死循环 ， 以 保证 采集 过程 一直 进行 ， 除非 收到 控 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 制字 “ ” ， 才 结束 程序运行 　 　 return ； 　 　 程序编制 完成 后 形成 可执行文件 本文 为 adaexe ， 并 在 Windows 下 右击 该 文件名 ， 选择 “ 属性 ” 项 ， 将 程序运行 属性 设 为 “ 最小化 ” ， 并 选择 退出 时 关闭 ， 以使 Windows 应用程序 启用 该 线程 对象 时 ， 不至于 使 Windows 窗口 被 DOS 运行 窗口 遮挡 ， 并 在 终止 该 程序运行 时能 正常 关闭 DOS 窗口 。 Windows 部分 　 　 本文 使用 Windows 环境 下 的 BorlandC ＋ ＋ Builder 作为 开发 平台 、 以 s 显示 次 A ／ D 通道 的 采集 数据 和 进行 一次 D ／ A 转换 为 应用 目的 进行 程序编制 。 ／ ／ － － － － － － － － 窗体 Form 应用 程序代码 － － － － － － － － － ／ ／ ＃ include ＜ vclh ＞ ＃ pragmahdrstop ＃ include ＜ dosh ＞ ＃ include ＜ STDLIBH ＞ ＃ include ＜ conioh ＞ ＃ include ＜ ioh ＞ ＃ include ＜ fcntlh ＞ ＃ include ＜ sys ＼ stath ＞ ＃ include ＜ shareh ＞ ＃ include ＜ stdioh ＞ ＃ include ″ threadh ″ ＃ pragmapackagesmart ＿ init ＃ pragmaresource ″ dfm ″ TFormForm ； TadaThreadadaThread ； FILEfADout ， fDAin ， fCtrl ； intchv ， cht ， da ， da ； ／ ／ － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － ＿ fastcallTFormTFormTComponentOwner 　 　 　 　 ： TFormOwner ／ ／ － － － － － － － － － － 窗体 Form 创建 时 响应 事件 － － － － － － － － － － ／ ／ void ＿ fastcallTFormFormCreateTObjectSender 　 　 　 　 adaThread ＝ newTadaThreadfalse ； ／ ／ 启用 DOS 　 　 　 　 　 　 　 　 　 　 　 ／ ／ I ／ O 接口 程序 线程 　 　 　 　 adaThread － ＞ Resume ； 　 　 　 　 fCtrl ＝ ＿ fsopen ″ Ctrldat ″ ， ″ w ＋ ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 建立 控制 数据共享 文件 　 　 　 　 fseekfCtrl ， SEEK ＿ SET ， ； 　 　 　 　 fprintffCtrl ， ″ ％ d ＼ n ″ ， ； ／ ／ 写入 控制 字 初值 “ ” 　 　 　 　 fDAin ＝ fsopen ″ DAindat ″ ， ″ w ＋ ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 建立 D ／ A 数据共享 文件 　 　 fADout ＝ ＿ fsopen ″ ADoutdat ″ ， ″ r ″ ， SH ＿ DENYNO ； 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 建立 A ／ D 数据共享 文件 ／ ／ － － － － － － － － － － － 每 s 一次 的 响应 事件 － － － － － － － － － － － ／ ／ void ＿ fastcallTFormTimerTimerTObjectSender 　 　 da ＝ ； 　 　 da ＝ ； 　 　 fseekfDAin ， SEEK ＿ SET ， ； 　 　 fprintffDAin ， ″ ％ d ％ d ＼ n ″ ， da ， da ； ／ ／ 将 D ／ A 变 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 换 数据 写入 D ／ A 数据文件 中 　 　 fseekfADout ， SEEK ＿ SET ， ； 　 　 do 　 　 　 　 fscanffADout ， ″ ％ d ％ d ＼ n ″ ， ＆ chv ， ＆ cht ； 　 　 　 　 　 　 　 　 ／ ／ 从 A ／ D 数据文件 中 读取 A ／ D 变换 数据 　 　 　 　 ifchv ＝ ＝ ／ ／ A ／ D 通道 号 为 时 　 　 　 　 　 　 ListBox － ＞ Items － ＞ AddFloatToStrchv ＋ 　 　 　 　 　 　 　 　 String ″ ″ ＋ FloatToStrcht ； 　 　 　 　 ／ ／ 在 窗体 Form 的 ListBox 中 显示 A ／ D 通道 　 　 　 　 　 　 　 　 　 　 　 ／ ／ 的 采集 数据 　 　 　 break ； 　 　 whilechv ＜ ； ／ ／ － － － － － － － － － － 窗体 Form 关闭 时 响应 事件 － － － － － － － － － － ／ ／ void ＿ fastcallTFormFormCloseTObjectSender ， 　 　 　 　 　 　 　 　 　 　 　 TCloseAction ＆ ActionfseekfCtrl ， SEEK ＿ SET ， ； fprintffCtrl ， ″ ％ d ＼ n ″ ， ； ／ ／ 写入 终止 程序运行 控制 字 “ ” fclosefDAin ； fclosefADout ； fclosefCtrl ； ／ ／ － － － － － － － － － － － 线程 thread 程序代码 － － － － － － － － － － － － － ／ ／ ＃ include ＜ vclh ＞ ＃ pragmahdrstop ＃ include ″ threadh ″ ＃ pragmapackagesmart ＿ init ／ ／ － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － ＿ fastcallTadaThreadTadaThreadboolCreateSuspended ： TThreadCreateSuspended ／ ／ － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － － void ＿ fastcallTadaThreadExecutesystem ″ adaexe ″ ； ／ ／ 运行 DOSI ／ O 接口 应用程序 　 　 为 程序 略去 了 采集卡 的 初始化 程序 和 部分 关系不大 的 语句 ， 为 读者 在 实际 应用 时应作 相应 增改 。 本文 所述 数据 采集 方法 已 成功 应用 于 作者 的 项目 开发 中 ， 对 其它 Windows 环境 下 的 应用 程序开发 也 有 一定 参考价值 。 周开利 北京理工大学 五系 研汪云 北京理工大学 五系研 参考文献 ， 黄晓勇 ． Windows 工业 控制 应用 探讨 ． 工业 控制 计算机 ， ； （ ） ： ， 何 海波 ． 数据 采集 软件开发 中 问题 的 分析 ． 微 计算机信息 ， ； （ ） ： ， 袁志勇 ． 用 VC ＋ ＋ 编写 Windows 硬件 I ／ O 接口 程序 ． 电脑 学习 ， ； （ ） ： ， TelleM ． BorlandC ＋ ＋ Builder 高级 编程 指南 ． 北京 ： 中国 水利电力 出版社 ， 收稿 日期 ： － －