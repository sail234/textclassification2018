微型机 与 应用 WEIXINGJIYUYINGYONG 年 月 第卷 第期 volNo 基于 Java 技术 的 Web 环境 下 分布式 数据库 互操作性 的 实现 李炽明 　 莫倩 　 徐明 　 　 摘 　 要 ： 应用 JDBC 在 Web 环境 下 实现 对 异种 数据库 进行 透明 访问 及 采用 RMI 机制 消除 Java 对 Applet 程序 的 安全性 限制 ， 实现 Web 环境 下 分布式 数据库 的 互操作 ， 给出 了 一个 基于 Java 技术 设计 实现 的 Web 环境 下 N 层 ClientServer 结构 分布式 数据库 应用 系统 的 模型 。 　 　 关键词 ： 远程 方法 调用 RMI 　 JDBC 接口 　 环球网 WWW 　 分布式 数据库 互操作性 　 　 Java 是 近几年 随着 网络 的 发展 而 流行 的 ， 它 能够 在 短短 几年 间 迅速 成为 计算机 界 的 热点 ， 这 跟 它 的 种种 良好 的 特性 是 分不开 的 。 在 数据库 处理 方面 ， Java 提供 了 JDBCAPI ， 为 数据库 开发 应用 提供 了 标准 的 应用程序 编程 接口 。 新兴 的 RMI 技术 提出 了 远程 方法 引用 的 概念 ， RMI 技术 更 适合 Java 这种 纯 面向对象 语言 ， 它 使得 分布式 环境 下 不同 Java 程序 之间 的 通信 更加 简单 自然 ， 符合 面向对象 的 语义 ， Java 已经 成为 开发 网络 数据库 应用 的 理想 工具 之一 。 　 JDBC 工作 原理 　 　 JDBCJavaDatabaseConnectivity 是 个 Sun 公司 注册 了 的 商标 ， 代表 用来 执行 SQL 语句 的 Java 语言 应用程序 编程 接口 API ， 它 包括 一系列 用 Java 语言 编写 的 类 和 接口 ， 为 数据库 开发者 开发 数据库 应用 提供 了 标准 的 应用程序 编程 接口 。 　 JDBC 概述 　 　 采用 JDBC 可以 很 容易 用 SQL 语句 访问 任何 商用 数据库 ， 也就是说 ， 通过 JDBCAPI ， 数据库 应用 开发者 就 不 需要 编写 个 程序 访问 Sybase 数据库 ， 编写 另个 程序 访问 Oracle 数据库 ， 再 编写 第个 程序 访问 Informix 数据库 ， 而 只 需 编写 个 使用 JDBCAPI 的 程序 ， 就 可以 将 SQL 查询 语句 送往 合适 的 数据库 。 同时 ， 采用 Java 语言 编写 应用程序 ， 具有 平台 无关 性 ， 不 需要 为 不同 的 平台 编写 不同 的 应用程序 。 因此 ， 采用 Java 和 JDBC 编写 数据库 应用程序 的 开发者 可以 真正 做到 “ 编写 一次 ， 随处 可用 ” 。 　 　 JDBC 扩展 了 Java 语言 的 功能 。 例如 ， 使用 Java 和 JDBC ， 可以 制作 个 能够 从 远程 数据库 上 获取信息 的 具有 Java 应用 小 程序 Applet 的 Web 主页 ， 或者 开发 个 能够 使 企业 的 员工 通过 企业 内部网 Intranet 访问 个 或 多个 内部 数据库 的 应用 。 　 　 采用 Java 和 JDBC 将 使 信息 的 收集 和 发送 非常容易 和 经济 ， 公司 和 企业 可以 继续 保留 以前 的 数据库系统 ， 甚至 这些 数据库系统 是 互不 相同 的 ， 仍然 可以 轻松 地 访问 上面 的 信息 。 并且 开发 个 新 的 数据库 应用 的 时间 也 将 大大缩短 。 　 JDBC 的 体系结构 　 　 JDBC 的 体系结构 包含 个 组件 。 　 　 JDBC 应用程序 。 JDBC 应用程序 负责 用户 与 用户 接口 之间 的 交互 操作 ， 以及 调用 JDBC 的 对象 方法 以 给出 SQL 语句 并 提取 结果 。 　 　 JDBC 驱动程序 管理器 。 JDBC 驱动程序 管理器 为 应用程序 加载 和 调用 驱动程序 。 　 　 JDBC 驱动程序 。 JDBC 驱动程序 执行 JDBC 对象 方法 的 调用 ， 发送 SQL 请求 给 指定 的 数据源 ， 并 将 结果 返回 给 应用程序 。 驱动程序 也 负责 与 任何 访问 数据源 的 必要 软件 层 进行 交互 。 　 　 数据源 。 数据源 由 数据 集 和 与其 相关联 的 环境 组成 ， 主要 指 各 数据库 厂商 的 数据库系统 。 　 　 与 ODBC 一样 ， JDBC 提供 给 程序员 的 编程 接口 由 部分 组成 ， 即 ： 面向 应用程序 的 编程 接口 JDBCAPI 和 供 底层 开发 的 驱动程序 接口 JDBCDriverAPI 。 JDBCAPI 是 为 应用 程序员 提供 的 ， 而 JDBCDriverAPI 则 是 为 各个 商业 数据库 厂商 提供 的 。 各个 商业 数据库 厂商 的 JDBC 驱动程序 是 由 JDBC 驱动程序 管理器 自动 和 统一 管理 的 。 　 RMI 工作 原理 　 　 在 个 分布式系统 中 ， 不同 主机 上 的 程序 之间 的 通信 ， 可以 通过 直接 对 Socket 编程 ， 这是 比较 底层 的 方法 ， 也 可以 使用 层次 更高 一些 的 RPCRemoteProcedureCall 机制 来 实现 。 但是 对于 Java 这种 纯 面向对象 的 网络 编程语言 来说 ， 这些 方法 和 机制 都 不可避免 地 破坏 了 Java 的 面向对象 的 特性 。 Java 的 RMI 技术 所要 做 的 事情 就是 实现 分布式 对象 环境 下 的 不同 虚拟机 上 的 对象 之间 的 相互 引用 。 　 RMI 概述 　 　 RMI 就是 远程 方法 调用 RemoteMethodInvocation ， 是 Java 体系 中 新兴 的 一门 技术 。 Java 是 一种 纯 面向对象 的 语言 ， 每 一个 程序 实体 都 是 以 对象 的 形式 提交 的 。 为了 使 分布式 环境 下 的 Java 编程 保持 这一 特性 ， Sum 公司 提出 了 分布式 对象 的 概念 ， 并且 为 分布式 对象 即 远程 对象 之间 互相 引用 提供 了 适合 对象 语义 的 基于 抽象 的 对象 层次 的 机制 ， 这 就是 RMI 。 它 使得 分布式 环境 下 的 Java 编程 或者说 Java 程序 之间 的 网络通信 不再 涉及 底层 的 协议 和 数据 的 编码 解码 ， 从而 更加 简单 和 自然 。 　 　 　 RMI 的 体系结构 　 　 如图所示 ， RMI 系统 由以 下层 组成 ： 存根 架构 stubskeleton 层 ， 远程 引用 层 和 传输层 。 每 一层 的 边界 是 由 特定 的 界面 和 协议 来 界定 的 ， 因此 ， 每 一层 相对 于 它 的 相邻 层 是 独立 的 ， 也就是说 ， 某 一层 在 实现 上 的 改变 ， 是 不会 影响 到 其它 层 的 。 图 RMI 的 体系结构 　 　 stubskeleton 层 是 Java 程序 跟 RMI 系统 其它 部分 的 接口 。 在 RMI 系统 中 ， 这 一层 实际上 是 扮演着 代理 的 角色 ， stub 和 skeleton 分别 是 客户程序 和 服务程序 的 代理人 。 在 客户端 ， 客户程序 向 stub 发出 远程 方法 调用 请求 ， stub 则 负责 把 这些 请求 传递 给 服务器 ， 并且 把 调用 结果 返回 给 客户程序 。 而 在 服务器端 ， 来自 客户端 的 调用 申请 为 skeleton 所 接收 ， 并且 由 skeleton 负责 调用 相应 的 对象 方法 为 之 服务 ， 调用 结果 也 是 由 skeleton 返回 给 客户端 。 　 　 远程 引用 层 是 具体 的 从 语义上 实现 远程 对象 引用 的 部分 ， 所有 的 包括 对象 的 复制 等 对 远程 对象 的 操作 都 由 远程 引用 层来 管理 。 　 　 传输层 则 负责 侦听 进来 的 调用 请求 ， 为 它们 建立 连接 ， 并且 负责管理 和 监视 这些 连接 ， 同时 为 所有 存在 于 该 地址 空间 的 远程 对象 维持 张 远程 对象 表 ， 以便 定位 远程 调用 的 目标 。 　 对象 序列化 技术 　 　 RMI 系统 中 还 用到 对象 序列化 技术 objectserialization 。 对象 序列化 实质 是 对 Java 对象 的 编码 ， 在 远程 方法 调用 过程 中 ， 它 负责 把 发送 方要 传送 的 Java 对象 先 编码 成 字节 流 ， 然后 再 进行 网络 传送 ， 而 在 接收 方 ， 它 负责 把 接收 的 字节 流 还原成 Java 对象 ， 从而 实现 了 不同 地址 空间 上 的 对象 的 透明 传送 。 　 RMI 的 目标 　 　 RMI 技术 是 针对 Java 语言 的 ， 它 的 目标 就是 实现 对 存在 于 不同 虚拟机 上 的 对象 的 无缝 的 远程 调用 ， 把 分布式 对象 模型 自然 地 集成 到 Java 语言 里 ， 尽可能 地 从 语义上 保留 Java 的 面向对象 的 特性 ， 也 保留 Javaruntime 环境 所 提供 的 安全性 。 　 　 在 RMI 体系 里 ， 所有 的 远程 方法 调用 的 实现 细节 对 Java 程序 来说 都 是 透明 的 ， 远程 对象 之间 的 引用 ， 就 跟 引用 本地 的 Java 对象 一样 的 简单 自然 ， 符合 面向对象 的 语义 。 　 　 在 RMI 里 ， 对 远程 方法 的 调用 是 很 重要 的 ， 在 语法 上 ， 跟 对 本地 方法 的 调用 是 一致 的 。 　 基于 JAVA 技术 的 Web 环境 下 分布式 数据库 互操作性 的 实现 　 JDBC 对 异种 数据库 互操作性 的 实现 　 　 在 JDBC 中要 实现 对 各种 异种 数据库 的 访问 ， 有 一种 简单 而 又 快捷 的 方法 ， 就是 利用 ODBC ， ODBC 是 目前 较 成熟 的 数据库 应用 技术 ， 它 提供 了 对 各种 异种 数据库 的 统一 的 访问 接口 。 因此 ， 我们 只 需要 通过 JDBCODBC 桥 驱动程序 ， 就 可以 实现 对 各种 关系数据库 的 透明 访问 ， 从而 使 JDBC 应用程序 以及 其 驱动程序 都 获得 了 对 数据库 的 独立性 。 　 利用 RMI 解决 Java 对 Applet 的 安全性 限制 问题 　 　 对于 JDBC 应用程序 来说 ， RMI 最大 的 优点 是 它 可以 超越 JavaApplet 程序 所受 的 网络安全 方面 的 限制 。 Applet 作为 RMI 系统 的 客户端 部分 ， 是从 RMI 服务器 所在 的 主机 节点 下载 的 ， 它 可以 访问 RMI 服务器 上 的 资源 ， 可以 向 服务器 发出 数据库 访问 请求 和 接收 服务器返回 的 数据 ， 而 作为 JavaApplication 的 RMI 服务器程序 ， 它 没有 像 Applet 那样 的 限制 ， 它 可以 访问 其它 主机 上 的 资源 ， 包括 数据库 。 它 负责 接收 客户 Applet 的 数据库 访问 请求 ， 根据 请求 通过 JDBC 去 访问 数据库 资源 ， 并且 把 访问 结果 数据 返回 给 客户 Applet 。 实际上 RMI 服务器程序 成 了 客户 Applet 访问 数据库 的 个 代理 ， 屏蔽 了 Java 对 Applet 的 安全 限制 。 　 利用 RMI 和 JDBC 实现 个 三层 ClientServer 结构 模型 　 　 对 传统 的 二层 结构 的 一个 改进 办法 ， 就是 采用 ClientServer 三层 结构 ， 在 客户端 与 数据库 服务器之间 增加 个 “ 中间层 ” ， 客户端 所有 的 数据库 访问 都 是 由 中间层 执行 ， 访问 的 结果 数据 由 中间层 从 数据库 服务器 接收 ， 并 负责 转发给 客户端 。 中间层 实际上 起 着 个 代理 的 作用 。 　 　 RMI 服务器 是 作为 客户 和 数据库 服务器之间 的 中间层 ， 负责 它们 之间 的 数据通信 。 客户 Applet 的 数据库 访问 请求 ， 通过 RMI 服务器 来 向 数据库 提交 ， 而 访问 结果 ， 也 是 由 数据库 服务器 通过 RMI 服务器 向 客户 Applet 传递 。 RMI 服务器 其实 也 是 个 JDBC 应用程序 ， 它 通过 RMI 系统 与 客户 Applet 进行 通信 并 为 它 服务 ， 通过 JDBC 与 数据库 服务器 建立 连接 ， 从而 实现 了 客户 Applet 与 数据库 服务器之间 的 连接 。 　 　 使用 RMI 与 JDBC 结合 的 方法 实现 Web 环境 下 的 远程 数据 访问 ， 有个 明显 的 优点 ， 就是 作为 客户 的 Java 程序 ， 不再 需要 进行 低层 的 JDBCAPI 调用 ， 而是 由 服务器 提供 了 相应 的 高层 API ， 而 作为 RMI 服务器 ， 完全 可以 对 客户 Applet 的 请求 加上 一定 的 约束 ， 增加 了 系统 的 灵活性 和 安全性 。 　 实现 个 n 层 ClientServer 结构 　 　 上面 所述 的 三层 模型 ， 是 开发 Web 环境 下 分布式 数据库 应用 的 基础 。 基于 RMI 支持 点对点 通信 机制 即个 节点 上 的 RMI 程序 既 可 作为 服务器程序 又 可 作为 客户机 程序 的 特点 ， 完全 可以 实现 个 如图所示 的 n 层 客户机 服务器 模式 的 应用 。 图 N 层 客户机 服务器 模式 在 分布式 数据库 中 的 应用 　 　 这种 应用 系统 ， 由 许多 分布 在 不同 主机 节点 上 的 服务器 以及 它们 的 直接 客户机 所 组成 ， 每个 服务器 与其 直接 客户机 构成 个 三层 结构 系统 。 服务器 由 HTTP 服务器 、 RMI 系统 ServerClient 、 JDBC 、 ODBC 和 SQL 数据库 服务器 组成 ， 每个 服务器 通过 RMI 系统 与 和 它 相连 的 其它 服务器 以及 直接 客户机 进行 通信 。 在 整个 系统 里面 ， 它 既作 服务器 ， 为 直接 客户 和 其它 服务器 提供数据 服务 ， 又 作 客户机 ， 可以 向 其它 服务器 申请 数据服务 。 　 　 在 实际 应用 时 ， 每 一个 服务器 上 都 有 张表 ， 上面 记录 了 与 它 相连 的 其它 服务器 的 地址 ， 每 一个 服务器 的 直接 客户机 可以 向 其 服务器 发出 数据库 访问 申请 ， 服务器 首先 到 自己 节点 的 数据库 去 查询 ， 如果 存在 相应 信息 ， 则 将 它 返回 给 客户机 ， 否则 ， 就 按照 地址 表向 其它 服务器发送 查询 请求 ； 如果 其它 服务器 上 有 相应 信息 ， 也 把 它们 返回 给 客户机 ， 否则 ， 告知 客户机 查询 失败 。 明显 地 ， 所有 的 客户机 都 能够 透明 访问 所有 服务器 上 的 数据库 。 这样 ， 就 可 实现 个 Web 环境 下 的 分布式 数据库 应用 。 　 总 　 结 　 　 利用 JDBC 和 RMI 实现 Web 环境 下 的 分布式 数据库 互操作性 ， 是 应用 Java 技术 的 一个 尝试 ， 同时 ， 也 是 对 传统 CS 体系结构 的 一种 改进 ， 它 具有 简单 、 高效 的 优点 ， 结合 Java 的 各种 良好 特性 ， 特别 是 新兴 的 RMI 技术 和 为 业界 所 支持 的 JDBC 技术 ， 相信 它会 向着 标准化 的 方向 发展 ， 并且 会 得到 更加 广泛 的 应用 。 作者 单位 ： 长沙 国防科技大学 并行 与 分布 处理 重点 实验室 参考文献 　 　 RasmussenBWDBAWebInterfacetoSQLDatabasesEuropeanSouthernObservatoryhttparchhttphqesoorgbfrasmuswdbwdbhtml 　 　 NaguyenTSrinivasanVAccessingRelationalDatabaseFromtheWorldWideWebACMSIGMOD ’ MontrealCanada 　 　 YaylorAJDBCDevelopersResourcePrenticeHallPTRhttpwwwprehallcom 收稿 日期 ：