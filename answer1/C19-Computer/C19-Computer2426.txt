计算机 研究 与 发展 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 年 第卷 第期 VolNoSMDPA ： 基于 访问 频率 的 多维 数据 空间 放置 算法 谭郁松 　 杨利 　 周兴铭 摘 　 要 　 针对 一般 数据 访问 模式 ， 文中 引入 了 “ 相似性 ” 概念 ， 提出 了 并行 数据库 中 基于 频率 和 相似性 的 多维 数据 空间 放置 的 算法 — — SMDPA 算法 经过 性能 模拟 发现 SMDPA 算法 在 一般 访问 模式 下 依然 能 得到 良好 的 平衡 和 并发 性能 关键词 　 并行 数据库 ， 多维 数据 空间 ， 数据 超方体 放置 中图法 分类号 　 TPSMDPAASIMILARITYBASEDMULTIDIMENSIONALDATASPACEPLACINGALGORITHMTANYuSongYANGLiandZHOUXingMingNationalLaboratoryforParallelDistributedProcessingNationalUniversityofDefenseTechnologyChangshaNortheasternUniversityShenyangAbstract 　 ThispaperdescribesanewmultidimensionaldataspaceplacingalgorithmSMDPAThealgorithmcangettheaccessrelationbetweendatahypercubesbyusingtheirpriorifrequencyandsimilaritiesConsequentlyitcanplacethedatahypercubesefficientlyeveniftheyhavedifferentaccessedfrequencyThesimulationresultshowsthattheSMDPAalgorithmmayobtainbetterperformancethantraditionalalgorithmsdoKeywords 　 paralleldatabasemultidimensionaldataspacedatahypercubeplacement 　 引 　 　 言 　 　 自 年代 末期 以来 ， 随着 计算机技术 的 迅猛发展 以及 计算机 应用 的 进一步 推广 ， 许多 数据库 的 新 应用 层出不穷 ， 如 地理信息 数据库 （ GIS ） 、 联机 事务处理 系统 （ OLTP ） 、 决策支持系统 （ DSS ） 等 它们 具有 如下 主要 特点 ： ① 数据库 规模 越来越 大 ； ② 数据类型 非 结构化 、 复杂 ； ③ 查询 复杂 ； ④ 实时性 要求 高为 满足 未来 高性能 的 数据库 应用 要求 ， 对 数据库 的 研究 提出 了 极大 的 挑战 　 　 继 数据库机 之后 ， 并行 数据库 成为 研究 重点 ， 并 取得 了 极大 的 进展 和 实际 应用 价值 ［ ， ］ 对 并行 数据库 的 历史 、 关键技术 、 发展 展望 作 了 很 好 的 总结 至今 ， 已 出现 许多 商业 及 研究 用 并行 数据库系统 ， 如 XPRS ［ ］ ， Gamma ［ ］ ， Grace ［ ］ ， Bubba ［ ］ 等 　 　 当今 计算机 发展 的 现状 是 高速 的 CPU 和 低速 的 IO 之间 的 性能 差距 逐渐 扩大 所以 ， 如何 把 大量 的 数据 放置 在 并行 数据库系统 的 多个 处理单元 上 ， 以 提高 IO 有效 带宽 来 匹配 CPU 的 高速 ， 最小化 数据 查询 的 响应 时间 ， 提高 系统 的 性能 ， 是 并行 数据库系统 研究 的 一个 关键技术 本文 基于 一般 的 数据 访问 模式 ， 利用 数据 超方 体间 被 访问 的 相关性 ， 提出 了 基于 访问 频率 和 相似 度 的 多维 数据 空间 放置 算法 ： SMDPA （ similarlybasedmultidimensionaldataspaceplacementalgorithm ） 并且 算法 性能 的 模拟 结果 都 令人满意 　 　 本文 的 第节 简介 国内外 在 数据 放置 算法 上 的 研究 现状 与 相关 结果 ； 第节 详细 介绍 SMDPA 算法 ； 第节 给出 SMDPA 算法 和 其它 已有 算法 的 性能 比较 的 模拟 结果 　 相关 工作 　 　 数据 放置 方法 的 种类 可 大致 分为 如下 种 ： 顺序 文件 法 （ sequentiallyfilesmethod ） 、 树结构 法 （ treestructuredmethod ） 、 散列法 （ hashmethod ） 、 格 文件 法 （ gridfilesmethod ） 　 　 因为 格 文件 能 较 好 地 描述 数据 在 数据 空间 内 的 分布 情况 ， 并 具有 良好 的 数据分布 动态性 ， 所以 近年来 许多 专家 的 研究 主要 集中 在 格 文件 的 放置 算法 本文 也 主要 讨论 格 文件 的 放置 算法 　 　 放置 算法 可 依据 放置 属性 维数 一般 分为 单维 放置 算法 和 多维 放置 算法 单维 数据 放置 算法 是 最 简单 的 数据 放置 算法 ， 已 被 大多数 的 并行 数据库系统 实际 采用 它 一般 可 分为 三大类 ［ ］ ： ① RoundRobin 划分算法 ； ② Hash 划分算法 ； ③ Range 划分算法 因 单维 放置 算法 只能 较 好 地 支持 在 划分 属性 上 的 数据 访问 ， 对 其它 维 的 访问 则 很 低效 于是 基于 多维 属性 的 数据 放置 算法 便 孕育 而生 　 　 多维 放置 算法 可 依据 放置 的 算法 不同 ， 大致 分为 如下 几类 ： 　 　 基于 模 的 算法 （ modulobasedalgorithms ） 　 　 DM ［ ］ 和 CMD ［ ］ 算法 均 属 此类 该类 算法 就是 把 数据 块 号 依 处理单元 数取模 放置 　 　 基于 异或 的 算法 （ exclusivebasedalgorithms ） 　 　 FieldwiseExclusiveORAlgorithm ［ ］ 便是 典型 算法 该类 算法 的 主要 思想 为 把 数据 的 属性 值 进行 异或 操作 ， 得到 相应 的 处理单元 编号 即 ， 设 元组 为 〈 i ， i ， … ， iN 〉 ， 对 i ， i ， … ， iN 求异 或 操作 ， 则 为 该 元组 被 放置 的 处理单元 编号 　 　 基于 编码 的 算法 （ codebasedalgorithms ） 　 　 ErrorCorrectingCodeAlgorithm ［ ］ 即 为 典型 算法 该 算法 同样 需要 针对 属性 值 进行 二进制 编码 ， 然后 就 属性 值 的 二进制码 值 进行 纠错码 计算 ， 利用 编码 的 纠错码 部分 得到 码值 ， 从而 放置 到 相应 的 处理器 上 　 　 基于 空间 填充 曲线 的 算法 （ spacefillingcurvebasedalgorithms ） 　 　 该类 算法 主要 利用 分形 几何学 中 若干 分形 曲线 能 填充 整个 空间 的 结论 HilbertCurveAlgorithm ［ ］ 即 为 典型 算法 Hilbert 曲线 遍历 空间 内 所有 点 ， 但 不 重复 ， 并且 曲线 自身 并 不 相交 从而 该 算法 遍历 所有 点后 便 得到 所有 点 的 线性 编号 ， 从而 能 依此 编号 进行 随后 的 数据 放置 RowwiseCurveAlgorithm ［ ］ ， PeanoCurveAlgorithm ［ ］ ， GrayCurveAlgorithm ［ ］ 等 算法 均 属于 该类 算法 的 范畴 　 　 启发式 算法 （ heuristicalgorithms ） 　 　 该类 算法 利用 数据 访问 的 统计 信息 ， 利用 启发式 算法 进行 有效 的 放置 例如 ： Bubba 算法 ， DiskCooling 算法 都 是 该类 算法 的 典型 算法 　 　 Moon ［ ］ 给出 了 严格 的 数学 证明 ： DMCMD 算法 只 在 小规模 的 处理单元 数目 、 数据 查询 相对 大规模 的 情况 下 ， 它们 才能 得到 近似 最优 值 并且 ， 对于 一些 查询 ， 即使 增加 处理单元 数目 ， 也 不能 改善 系统 响应 时间 对于 基于 编码 、 异或 的 算法 需要 并行 数据库系统 的 处理单元 数目 为 的 幂次 ， 且 数据 空间 被 划分 的 数目 也 必须 为 的 幂次 显然 ， 该类 算法 并 不能 很 好 地 支持 一般 环境 下 的 数据 放置 基于 空间 填充 曲线 的 算法 ， 因为 要 遍历 多维 数据 空间 内 所有 点 的 算法 本身 就 没有 得到 很 好地解决 ， 算法 并 不能 保证 在 复杂 的 多维 空间 中 给出 一个 多项式 的 遍历 算法 ； 并且 对于 某些 空间 条件 下 ， 本身 就 不 存在 能 遍历 所有 点 的 曲线 　 　 并且 以上 的 算法 又 有 个 致命 的 缺点 ， 并 没有 考虑 数据 访问 的 模式 ， 而是 基于 均匀 访问 的 系统 假设 条件 下 ， 这 对于 复杂 的 实际 运用 是 不 太 恰当 的 ， 不能 给出 最 有效 的 算法 有些 基于 启发式 算法 的 方法 考虑 了 数据 访问 的 模式 ， 但是 对于 平衡性 、 并发 性 至今 还 没有 一种 算法 能 很 好 地 综合 考虑 　 SMDPA 算法 　 问题 背景 　 　 定义 从 数据 查询 的 发出 时刻 至 所有 所 需 数据 均 被 访问 完毕 时 的 时间 区间 长 称之为 响应 时间 （ responsetime ） 记为 RTQ 　 　 若 指令 执行 时间 和 网络 传输 延时 都 可 忽略不计 ， 则 响应 时间 可 简单 地 等价 于 各 处理单元 数据 访问 页面 的 最大值 本文 的 以下 所有 讨论 都 基于 该 假设 　 　 数据 放置 问题 （ datadeclusteringproblem ， DDP ） 可 描述 为 ： 给定 一个 D 维 笛卡尔 数据 空间 ： ［ LU ］ × ［ LU ］ × … × ［ LDUD ］ ， 空间 中以 一定 概率分布 了 若干 数据 ； 并行 数据库系统 中 含有 N 个 处理单元 试求 一个 数据 空间 的 划分 与 分置 算法 ， 使 算法 对 数据 查询 操作 的 响应 时间 最小 ［ ］ 文献 ［ ］ 证明 了 在 一般 条件 下 DDP 是 NPC 问题 ， 故而 只能 试图 寻求 可 得到 优化 结果 的 高效 算法 　 　 本文 认为 ， 一个 完整 的 数据 分 置 算法 应该 分为 两 部分 ， 即 数据 空间 的 划分算法 （ dataspacepartitionalgorithm ， DSPA ） 、 数据 超方体 的 放置 算法 （ datahypercubeplacementalgorithm ， DHPA ） 前者 按照 一定 的 限制 把 数据 空间 划分 为 若干个 超方体 ； 而 后者 则 把 这些 超方体 依 算法 放置 于 整个 并行 数据库系统 内 所有 处理单元 上 　 　 对于 多维 数据 空间 的 DSPA 算法 ， 作者 已 在 另 文中 详细 讨论 ， 提出 了 在 一般 数据 访问 模式 条件 下 基于 频率 均分 的 划分算法 FMDA 本文 将 详细 研究 数据 超 立方体 的 放置 算法 ， 故 假设 数据 空间 已 事先 被 划分 成 若干 数据 超方体 　 SMDPA 算法 介绍 　 　 现有 的 数据 放置 算法 大多 是 基于 访问 模式 满足 均匀分布 的 假设 ， 显然 该 假设 在 一般 的 实际 应用 背景 下 并 不 满足 ， 所以 该类 算法 的 实际 性能 较差 虽然 有些 启发式 算法 能 基于 一般 的 访问 模式 ， 但是 它们 并 没有 充分利用 有关 访问 模式 的 统计 信息 ， 故而 性能 也 并 不太高 　 　 考虑 到 实际 数据 访问 的 时空 局部性 ， 数据 超方体 之间 的 访问 存在 相关性 首先 我们 深入研究 该 访问 相关性 的 物理 含义 　 　 定义 由 并行 数据库系统 根据 系统 的 访问 日志 得到 的 数据 超方体 的 被 访问 概率 称之为 该 数据 超方体 的 先验 被 访问 概率 （ prioriaccessedfrequency ） 以 PAF （ A ） 表示 数据 超方体 A 的 先验 被 访问 概率 　 　 定义 考虑 到 应用 系统 的 访问 时空 局部性 ， 若 数据 超方体 A 将 以 概率 p 被 访问 ， 如果 数据 超方体 B 已 被 访问 ， 则 我们 称 数据 超方体 A 与 B 间 存在 值为 p 的 相似 度 （ similarity ） 用 Sim （ AB ） 来 表示 在 实际 系统 中 ， 我们 可以 简单 地 认为 Sim （ AB ） Sim （ BA ） 　 　 定义 考虑 到 实际 系统 中 的 数据 访问 局部性 ， 我们 可以 认为 系统 是 通过 数据 超方体 的 后验 被 访问 概率 （ posterioriaccessedfrequency ） 来 访问 各个 数据 超方体 使用 PeAF （ A ） 表示 数据 超方体 A 的 后验 被 访问 概率 　 　 　 　 为了 提高 并行 数据库系统 对 数据 查询 操作 响应 的 并发 能力 ， 我们 应该 将 可能 同时 被 访问 的 数据 超方体 放置 到 不同 的 处理 节点 上 但是 如何 判断 那些 数据 超方体 可能 被 同时 访问 呢 ？ 且 在 实际 的 并行 数据库系统 只能 利用 系统 的 日志 机制 得到 各个 数据 超方体 的 先验 被 访问 概率 ， 如何 得到 它们 的 后验 被 访问 概率 ？ 这 就 需要 利用 我们 所 定义 的 相似 度 概念 相似 度 定义 了 在 实际 系统 中 如何 衡量 数据 超方 体间 的 访问 局部性 依 概率 学 的 观点 ， 相似 度 本质 上 和 数据 超方体 访问 的 条件 概率 相同 　 　 不妨 假设 系统 已 访问 了 某个 数据 超方体 ， 设之为 A 那 对于 剩余 没有 被 访问 的 数据 超方体 （ 不妨 设为 B ） 而言 ， 它 可能 有 是 与 A 一同 被 该 数据 查询 操作 访问 ， 也 可能 是 被 单独 被 访问 （ 或者 是 和 其它 数据 超方体 一同 被 访问 ） 我们 可以 利用 PAF （ A ） 和 Sim （ B ， A ） 得到 B 的 “ 伪 ” 后验 被 访问 概率 ， 比较 该 概率 值 和 B 的 先验 被 访问 概率 若 先验 被 访问 概率 值大 ， 则 表明 数据 超方体 B 只以 很小 的 概率 与 A 共同 被 访问 ； 否则 ， 则 说明 B 将 以 较大 概率 和 A 共同 被 访问 此时 ， 我们 便 要 修正 B 的 被 访问 概率 值 ， 可 依然 命名 为 “ 先验 被 访问 概率 ” ， 虽然 它 的 物理 意义 已 为 “ 伪 ” 后验 被 访问 概率 ； 并且 记录 下 B 将 可能 与 A 共同 被 访问 的 结论 显然 在 如 上 的 被 访问 概率 被 修正 的 过程 中 ， 数据 超方体 的 “ 先验 被 访问 概率 ” 值 将 越来越 大 　 　 在 如 上 对 所有 未 被 访问 的 数据 超方体 进行 一轮 的 值 修正 后 ， 我们 便 要 判断 下 一个 最 可能 被 访问 的 数据 超方体 显然 依照 概率 的 观点 ， 我们 每次 选择 出 的 该 被 访问 数据 超方体 具有 在 所有 未 被 访问 的 数据 超方 体积 和 中 最大 的 被 访问 概率 值 　 　 如此 操作 多轮 后 ， 我们 便 将 所有 的 数据 超方体 依序 选择 出来 并且 所有 的 数据 超方体 可以 依据 被 访问 的 相关性 ， 被 划分 为 若干 有序 队列 在 同一个 队列 中 的 数据 超方体 将 以 大 概率 被 同时 访问 ， 既 具有 较强 的 访问 局部性 并且 队列 元素 的 顺序 表明 了 它们 被 依次 访问 的 顺序 　 　 因此 ， 为了 使 并行 数据库系统 能 较 好 地 并行 支持 数据 查询 操作 ， 我们 应该 将 在 同一个 有序 队列 的 数据 超方体 放置 到 不同 的 处理 节点 上 此时 ， 我们 便 可以 把 这些 数据 超方体 按照 DM 方法 ， 从 特定 的 起始 节点 开始 放置 　 　 同时 为了 能 使 系统 具有 较 好 的 平衡 性能 ， 我们 针对 每个 有序 队列 进行 放置 时 ， 所 选择 的 起始 节点 应该 是 当时 所有 处理 节点 中 最 空闲 的 处理 节点 　 　 依照 如 上 思想 ， 本文 给出 如下 数据 超方体 放置 算法 — — SMDPA ： 　 　 Input 　 　 PAFDCii ∈ ［ … K ］ 其中 ， K 是 数据 超方体 的 总数 　 　 SimDCiDCjij ∈ ［ … K ］ 　 　 N 处理 节点 的 数目 　 　 Output 　 　 PUIdDCii ∈ ［ … K ］ ∧ PUIdDCi ∈ ［ … N ］ 该 向量 表示 各 数据 超方 　 　 体 被 放置 的 处理 节点 的 标号 　 　 首先 初始化 算法 的 若干 参量 　 　 步骤 DC ∶ DCii ∈ ［ … K ］ 　 　 步骤 ProbDCi ∶ PAFDCii ∈ ［ … K ］ 　 　 步骤 ListIdDCi ∶ NULLi ∈ ［ … K ］ 　 　 步骤 NumOfLinkedList ∶ 　 　 步骤 WorkLoadPUii ∈ ［ … N ］ 　 　 现在 生成 若干 有序 的 链表 ， 在 同一 链表 内 的 节点 具有 较强 的 相关性 　 　 步骤 while ‖ DC ‖ do 　 　 步骤 寻找 具有 最大 被 访问 概率 的 数据 超方体 ， 不妨 设为 DCi 　 　 步骤 DC ∶ DCDCi 　 　 步骤 ifListIdDCiNULLthen 　 　 步骤 NumOfLinkedList ∶ NumOfLinkedList 　 　 步骤 LinkedListNumOfLinkedListDCi 　 　 步骤 ListIdDCiNumOfLinkedList 　 　 　 Else 　 　 步骤 LinkedListNumOfLinkedListLinkedListNumOfLinkedListDCi 　 　 现在 依据 DCi 的 概率 值来 修正 其它 未 被 选出 的 数据 超方体 的 后验 被 访问 概率 值 　 　 步骤 forallDCjinDC ∧ j ≠ ido 　 　 步骤 TempFrequency ∶ ProbDCi × SimDCjDCi 　 　 步骤 ifTempFrequencyProbDCjthendo 　 　 步骤 ProbDCjTempFrequency 　 　 步骤 ListIdDCjListIdDCi 　 　 　 　 　 endofif 　 　 　 　 endoffor 　 　 　 endofwhile 　 　 已 将 所有 的 数据 超方体 都 插入 所有 的 链表 中 ， 现在 需要 将 这些 链表 内 的 所有 数据 超方体 　 　 放置 到 所有 的 处理单元 上 　 　 步骤 fori ∶ iNumOfLinkedListiido 　 　 步骤 ListLinkedListi 　 　 得到 最 空闲 的 处理 节点 来 作为 链表 的 起始 放置 节点 　 　 步骤 k ∶ GetIdleNodeID 　 　 步骤 依序 遍历 该 链表 的 所有 数据 超方体 do 　 　 不妨 设 ， 现在 访问 DCj 　 　 步骤 PUIdDCj ∶ jkmodN 　 　 步骤 WorkLoadPUIdDCj ∶ WorkLoadPUIdDCjProbDCj 　 　 　 　 Endofvisitsalldatahypercubesinonelinkedlist 　 　 Endofforwhichvisitsalllinkedliststoplacethedatahypercubes 　 算法 性能 分析 　 　 如下 我们 给出 SMDPA 算法 的 模拟 结果 首先 定义 两个 衡量 性能 的 参数 　 　 定义 给定 一种 数据 空间 划分 和 放置 算法 ， 数据 查询 操作 Q 所需 访问 的 数据 超方体 被 放置 于 若干个 处理 节点 上 这些 处理 节点 的 数目 与 并行 数据库系统 内 所有 处理 节点 数目 的 比值 被 称之为 该 数据 查询 的 并行度 （ degreeofparallelism ， DP ） 用 DPQ 表示 数据 查询 操作 Q 的 并行度 　 　 显然 ， 对 所有 数据 查询 操作 的 DP 值 都 不 大于 　 　 定义 给定 一种 数据 空间 划分 和 放置 算法 ， 数据 查询 操作 Q 所需 访问 的 所有 数据 超方体 被 放置 于 DPQ 个 处理 节点 上 定义 下式 为 数据 查询 操作 Q 的 平衡 度 （ degreeofbalance ， DB ） 式 中 ， NumOfCubePUi 表示 在 PUi 中 存储 并 被 数据 查询 操作 Q 访问 的 数据 超方体 PUSetQ 表示 所有 满足 数据 查询 操作 Q 的 处理 节点 集合 显然 集合 中 元素 的 数目 等于 DPQ 　 　 显然 ， 对于 数据 空间 划分 和 放置 算法 而言 ， 它们 应该 使 系统对 数据 查询 操作 所 响应 的 并行度 尽可能 地 大 ， 平衡 度 尽可能 地小 　 　 在 本节 中 ， 我们 制作 了 二维 数据 空间 的 模拟 ， 采用 了 种 算法 进行 性能 比较 它们 是 ： CMD 算法 、 HilbertCurveHCA 算法 、 FieldXORXOR 算法 、 FMDASDMPA 算法 　 　 进行 模拟 的 首步 ， 我们 首先 假设 数据 超方体 在 空间 上 的 分布 满足 一定 的 概率分布 我们 进行 了 正态 概率分布 的 模拟 　 　 给予 假设 的 概率分布 ， 我们 生成 了 满足 概率分布 的 数据 超方体 我们 认为 数据 空间 存在 峰点 peakpoint ， 并行 数据库系统 对 峰点 处及 附近 的 数据 纪录 具有 较大 的 访问 概率 这 意味着 ： ① 在 峰点 附近 的 数据 纪录 分布 密集 ； ② 在 峰点 附近 的 数据 查询 操作 密集 　 　 因为 前种 方法 均 是 简单 的 将 数据 空间 进行 值 均分 划分 ， 而 FMDA 算法 则 是 将 数据 空间 进行 被 访问 概率 的 概率 均分 划分 故而 ， 数据 空间 的 划分算法 实质 上 只有 两种 ： 值 均分 划分 方法 、 概率 均分 划分 方法 　 　 利用 该 两种 数据 空间 划分 方法 进行 划分 后 ， 便 得到 了 若干 各自 的 数据 超方体 而后 分别 利用 如上种 算法 进行 数据 超方体 的 放置 　 　 图 表示 了 经过 种 放置 算法 处理 后 ， 各个 处理 节点 上 所有 数据 超方体 被 访问 概率 总和 ， 即 处理 节点 的 被 访问 概率 图 　 条件 下 各 处理单元 的 被 访问 概率 总和 　 　 在 种 算法 中 ， 显然 只有 FMDASMDPA 算法 才能 基本上 将 所有 处理 节点 的 被 访问 概率 保持 相等 而 其它 种 算法 都 将 使 部分 处理 节点 过热 ， 这些 热处理 节点 必然 将 成为 系统 的 瓶颈 ； 而 同时 却 有 其它 的 处理 节点 的 被 访问 概率 较 低 ， 这些 处理 节点 将 在 系统 运行 过程 中 较为 空闲 例如 ， HCA 算法 使 第个 处理 节点 的 被 访问 概率 高 达 ， 而 第个 处理 节点 的 被 访问 概率 却 只有 ， 两者之间 的 比例 高 达 　 　 图和图 显示 了 在 处理 节点 数目 为 和 数据 超方体 数目 为 条件 下 种 算法 的 并行度 和 平衡 度 性能 的 比较 图 　 条件 下 的 并发 性能 图 　 条件 下 的 平衡 性能 　 　 图和图 显示 了 在 处理 节点 数目 为 和 数据 超方体 数目 为 条件 下 种 算法 的 并行度 和 平衡 度 性能 的 比较 图 　 条件 下 的 并发 性能 图 　 条件 下 的 平衡 性能 　 　 图和图 显示 了 在 处理 节点 数目 为 和 数据 超方体 数目 为 条件 下 种 算法 的 并行度 和 平衡 度 性能 的 比较 图 　 条件 下 的 并发 性能 图 　 条件 下 的 平衡 性能 　 　 从 这些 图中 ， 我们 不难 发现 FMDASMDPA 算法 具有 较 其它 种 算法 更 良好 的 并发 性能 和 平衡 性能 例如 ， 当 模拟 参数 为个 处理 节点 、 数据 超方体 数目 为 时 ， 若 数据 查询 操作 的 访问 长度 为 ， SMDPA 算法 的 并行度 高 达 ， 且 平衡 度为 而 同时 ， HCA 算法 的 相应 性能 值 却 只有 ， 平衡 度为 　 　 此外 ， 我们 还 可以 发现 ： 当 其它 条件 不变 ， 但 处理 节点 数目 增加 时 ， FDMASMDPA 算法 具有 更 良好 的 性能 例如 ， 在 处理 节点 为 时 ， 同样 在 的 查询 长度 时 ， SMDPA 算法 的 并行度 只 为 ， 而 平衡 度 却 高达 这 可能 是 在 增加 处理 节点 数目 时 ， SMDPA 算法 能 更好 地 将 同一 有序 队列 中 的 数据 超方体 放置 在 不同 的 处理 节点 上 而 其它 算法 的 放置 节点 的 选择 也 增加 了 ， 但是 它们 没有 能 很 好 地 描述 各 数据 超方体 的 访问 局部性 ， 故而 性能 改善 不 大 　 　 当 其它 条件 不变 ， 但 数据 超方体 数目 增加 时 ， FDMASMDPA 算法 的 性能 也 有 较 明显 地 改善 例如 ， 当 处理 节点 数目 为 、 数据 查询 长度 为 、 且 数据 超方体 的 数目 为 时 ， SMDPA 算法 的 并行度 和 平衡 度 分别 为 和 ； 而 当 数据 超方体 数目 增加 到 时 ， 相应 的 性能 增加 到 和 这 是因为 ， 当 数据 超方体 数目 增加 时 ， 算法 可 利用 关于 数据 超方体 被 访问 的 信息 可能 更加 充分 ， 从而 能 更加 精确 地 描述 数据 超方 体间 的 被 访问 局部性 ， 所以 能 更好 地 放置 这些 数据 超方体 本 课题 得到 国家自然科学基金 项目 项目编号 的 资助 作者简介 ： 谭郁松 ， 男 ， 年月生 ， 硕士 研究生 ， 主要 研究 方向 为 并行 数据库 、 计算机 协同 　 　 　 　 　 杨利 ， 男 ， 年月生 ， 博士后 ， 副教授 ， 主要 研究 方向 为 并行 数据库 　 　 　 　 　 周兴铭 ， 男 ， 年月生 ， 中科院 院士 ， 教授 ， 博士生 导师 ， 主要 研究 方向 为 高性 　 　 　 　 　 能 计算机 体系结构 、 并行 与 分布 数据库 、 计算机 协同 作者 单位 ： 谭郁松 　 周兴铭 国防科技大学 并行 与 分布 处理 重点 实验室 　 长沙 　 ； 　 　 　 　 　 杨利 东北大学 软件 中心 　 沈阳 　 参考文献 　 　 BoralHetalPrototypingBubbaAhighlyparalleldatabasesystemIEEETransonKnowledgeandDataEngineering ～ 　 　 DewittJimGrayParalleldatabasesystemsThefutureofdatabaseprocessing 　 orpassingfadProcofACMSIGMOD ～ 　 　 StonebrakeTheDesignofXPRSInProcofthVLDBConfonVLDBLosAngeles ～ 　 　 DewittDJetalThegammadatabasemachineprojectIEEETransonKnowledgeandDataEngineering ～ 　 　 KitsuregawaMetalArchitectureandperformanceofrelationalalgebramachineGRACEInProcoftheInternationalConferenceonParallelProcessingLosAngelesIEEEComputerSocietyPress 　 　 DuHCSobolewskiJSDiskallocationforcartesianproductfilesonmultidisksystemACMTransonDatabaseSystems ～ 　 　 LiSrivastavaJCMDAmultidimensionaldeclusteringmethodforparalleldatabasesystemInProcofthVLDB ～ 　 　 KimMyoangHoPramanikSaktiOptimalfiledistributionsforpartialmatchretrievalProcACMSIGMOD ～ 　 　 FaloutsosCGraycodesforpartialmatchandrangequeriesIEEETransonSoftwareEngineering ～ 　 　 FaloutsosDeclusteringusingfractalsparallelanddistributedInConferenceonParallelandDistributedInformationSystemSanDiego ～ 　 　 SametApplicationsofSpatialDataStructureReadingMAAddisonWesley 　 　 OrensteinMerrettTAclassofdatastructureforassociativesearchingInProcofACMSIGMODWaterloo ～ 　 　 MoonBAcharyaASaltzJStudyofscalabledeclusteringalgorithmforparallelgridfilesInProcofthethInternationalParallelProcessingSymposiumLosAlarnitosIEEEComputerSocietyPress ～ 　 　 BellDDifficultdataplacementproblemsTheComputerJournal ～ 　 　 FaloutsosCMetaxasDDiskallocationmethodsusingerrorcorrectingcodeIEEETransonComputers ～ 　 　 FaloutsosCMetaxastDDeclusteringusingerrorcorrectingcodesInProcSymposiumonPrinciplesofDatabaseSystem ～ 　 　 GradeGuntherOMultidimensionalaccessmethodsACMComputingSurveys ～ 　 　 HinrichsKImplementationofthegridfileDesignconceptsandexperienceBIT ～ 　 　 HimatsingkaSrivastavaJPerformanceevaluationofgridbasedmultiattributerecorddeclusteringmethodsInProcofthVLDB ～ 原稿 收到 日期 ： ； 修改稿 收到 日期 ：