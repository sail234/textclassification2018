软件 学报 JOURNALOFSOFTWARE 年 第卷 第期 VolNo 分布式 工作 流 系统 FlowAgent 的 动态 任务调度 王文军 　 仲萃 豪 摘要 　 实际 的 企业 业务 要求 WFMSworkflowmanagementsystem 必须 能 把 分布 在 企业 异质 环境 中 的 人工 和 自动 任务 集成 到 一个 流程 中 ， 以 帮助 企业 实现 业务 的 全面 流程化 但 目前 大多数 WFMS 都 基于 集中 的 数据库系统 采用 静态 的 组织 结构 定义 为 实现 全 分布 任务 间 的 协同工作 FlowAgent 系统 设计 了 丰富 的 动态 任务调度 逻辑 和 一个 适合 于 工作 流 动态 特性 的 业务 描述 结构 关键词 　 工作 流 管理系统 任务 流 代理 任务 代理 任务 处理器 任务 域 多任务 域 结构 中图法 分类号 　 TPTheDynamicSchedulingofaDistributedWorkflowManagementSystemFlowAgentWANGWenjun 　 ZHONGCuihaoInstituteofSoftwareTheChineseAcademyofSciencesBeijingAbstract 　 RealenterpriseprocessesrequireWFMSworkflowmanagementsystemtorununderheterogeneousenvironmentsinvolvinghumanandautomatedtasksdistributedacrossenterprisesButmostoftheWFMSsarebasedontraditionalcentralizedDBMSandconstructedunderthelimitationofstaticorganizationstructureFlowAgentdevelopsitsownwaytorealizedynamicaltaskschedulinglogicandafederationstructureforenterpriseprocessesKeywords 　 WFMSworkflowmanagementsystemtask － flowagenttaskagenttaskprocessortaskdomainmulti － taskdomainarchitecture 　 工作 流 管理系统 　 　 面对 全球 范围 内 的 竞争 各 企业 都 在 试图 摆脱 官僚 的 层次 组织 结构 使 企业 的 业务 过程 和 决策 建立 在 任务 组 自我管理 的 基础 上 这 就 导致 了 BPRbusinessprocessesre － engineering 研究 的 出现 把 易 出错 的 传统 业务 过程 中 的 人工 或 自动 任务 集成 到 分布式 企业 的 IT 环境 中 ［ ］ 近年来 ， Internet 等 新 技术 为 BPR 的 实现 带来 了 一个 基于 网络 计算 的 业务 处理 新 概念 — — 工作 流 管理系统 workflowmanagementsystem 简称 WFMSWFMS 系统 可以 把 人工 业务 或 异质 环境 中 的 自动 应用 系统集成 到 统一 的 业务 过程 中 利用 企业 已有 的 计算 设施 通过 业务 任务 间 的 依赖 关系 WFMS 系统 可以 进行 复杂 的 任务 协同 调度 　 　 现有 的 各种 WFMS 模型 之间 的 不同 主要 在于 过程 调度 的 粒度 虽然 有 一些 研究 项目 用 比 “ 任务 ” 更细 的 粒度 任务 的 事件 和 状态 来 调度 “ 任务 ” ［ ］ 但 大多数 工作 流 系统 都 基于 “ 任务 ” 这一 调度 粒度 把 工作 流 过程 定义 为 任务 流 因为 这种 方式 和 企业 业务 的 人工 调度 非常 一致 任务 流 也 就 成 了 工作 流 定义 中 最 自然 的 方式 现有 的 任务 流 WFMS 系统 包括 IBM 的 FlowMark ［ ］ 和 Twente 大学 的 WIDE 系统 ［ ］ 等等 　 分布式 工作 流 管理系统 　 　 大型 组织 中 的 业务 过程 常常 涉及 到 分布 在 不同 地理位置 上 的 许多 资源 、 工具 和 人员 ， 所以 ， WFMS 必须 能 进行 全 分布 任务 及其 调度 的 定义 如果 任务 和 任务 间 的 协同 信息 可以 被 分布 到 异质 环境 中 一个 任务 的 改变 将 不会 影响 到 整个 业务 过程 这 就 增强 了 WFMS 的 可扩充性 和 可靠性 　 　 随着 CORBA 和 JavaBeans 等 分布式 对象 技术 的 成熟 人们 也 开始 用 它 来 构造 工作 流 系统 例如 FlowMark 使用 ObjectStore 来 对 分布 的 工作 流 客户 系统 进行 集中 的 控制 管理 ［ ］ ； WIDE 系统 使用 CORBA 环境 给 分布 的 工作 流 客户 提供 集中 的 调度 策略 定义 和 控制 ［ ］ 但是 它们 并 没有 使用 面向对象 的 体系结构 去 构造 出 最终用户 可以 重构 的 WFMS 而 仅仅 使用 分布式 对象 设施 把 集中 的 控制数据 存储 到 分布 的 环境 中去 或 在 工作 流 引擎 间 交换 任务 运行 中 的 “ 状态 或 事件 ” 如 在 Mentor 项目 中 使用 Tuxedo 来 实施 这种 信息 交换 监控 ［ ］ 　 　 因为 分布式 对象 设施 成为 分布式 异质 系统 的 构造 标准 它 能 为 分布式 工作 流 的 各 组件 提供 必要 的 分布 和 通信 能力 帮助 工作 流 系统 实现 任务 的 动态 调度 因为 分布式 对象 之间 可以 直接 通过 远程 过程 调用 与 “ 磋商 ” 确立 任务 间 的 依赖 关系 基于 分布式 对象 可以 很 好 地 建立 任务 流 模型 的 WFMS 例如 ExoticaFlowMark 的 分布式 后继 系统 通过 持久 消息 系统 如 IBM 的 MQSeries 来 实现 代表 工作 流 各 步骤 的 节点 之间 的 信息 交换 避免 了 在 集中式 工作 流 运行 中 存在 的 通信 瓶颈 ［ ］ 作为 基于 CORBA 的 工作 流 系统 ORBWork 用 分布 、 自主 的 CORBA 对象 描述 了 一种 动态 任务 流 结构 任务 间 的 依赖 关系 就 分散 在 这些 对象 taskmanagertask 中 ［ ］ 　 　 随着 分布式 对象 编程 环境 的 发展 代理 agent 概念 逐渐 被 基于 分布式 对象 的 应用 系统 所 采纳 ［ ］ 一个 工作 流 业务 过程 可以 很 自然 地被 看成 是 一个 由能 自主 完成 各自 任务 和 进行 任务 协同 调度 的 代理 的 集合 例如 在 DartFlow 系统 中 可 移动 的 代理 可以 从 集中 的 流程 控制 知识库 中 提取 自己 需要 的 路由 信息 从而 使 分布 在 不同 地点 的 众多 参与者 能 参与 到 集中 的 任务调度 中来 ［ ］ ； 在 ADEPT 系统 中 一个 代理 代表 一个 特定 应用程序 所 能 提供 的 “ 服务 ” 而 不同 的 代理 之间 通过 服务 协议 的 “ 磋商 ” 来 达成 任务 间 的 服务 提供 使用 关系 ［ ］ 　 多任务 域 结构 　 　 FlowAgent 是 建立 在 任务 代理 我们 称为 TaskAgent 概念 上 的 任务 流 系统 它 采用 一个 全 分布 的 体系结构 来 支持 任务 的 动态 调度 和 工作 流 过程 的 高 可扩充性 在 一个 分布式 体系结构 中 它 要 实现 的 多种 工作 流 的 “ 处理 工作 ” ， 如 医院 内 的 门诊 、 住院 等 为 处理 这些 工作 流 ， 把 整个 系统 分解成 若干 相对 独立 的 工作 域 工作 域 中 的 实体 都 称为 TaskAgent 任务 代理 每个 工作 域 中 都 有 一个 被 称为 TaskDomain 任务 域 的 TaskAgent 实体 ， 协同 其他 实体 共同完成 “ 处理 工作 ” ， 因此 称其为 MOTHER 母亲 受 TaskDomain 控制 的 TaskAgent 是 这个 工作 域 中 的 CHILD 儿子 彼此之间 互 称为 BROTHER 兄弟 如果 一个 TaskAgent 可以 有 若干个 兄弟 来 完成 它 的 后继 任务 这些 兄弟 就是 这个 TaskAgent 的 FOLLOWER 后 继而 这个 TaskAgent 就是 这些 兄弟 的 PREDECESSOR 前驱 如果 一个 TaskAgent 执行 的 是 该 工作 域 的 母亲 的 后继 任务 母亲 就是 这个 TaskAgent 的 前驱 　 　 在 这个 工作 域 中 的 儿子 TaskAgent 要么 是 一个 TaskProcessor 应用程序 要么 是 另 一个 工作 域 的 TaskDomain 由此 组成 了 多任务 域 层次 体系结构 　 　 该 工作 域 中 的 母亲 通过 协同 儿子 来 共同完成 该 工作 域 的 “ 处理 工作 ” 有些 儿子 是 直接 对应 于 某 应用程序 的 TaskProcessor 有些 则 是 拥有 自己 的 儿子 的 低层 TaskDomain 在 这样 的 多任务 域 结构 multiTaskDomainarchitecture 中 即便 非常复杂 的 工作 流 过程 也 可以 被 分解 在 若干层 的 TaskDomain 之中 在 每个 TaskDomain 中 大多数 任务 运行 调度 的 控制 逻辑 可以 独立 地被 定义 和 修改 而 不必 牵涉 更 高层 低层 的 TaskDomain 或 其他 兄弟 TaskDomain 的 调度 逻辑 由此 我们 可以 控制 一个 TaskDomain 的 复杂性 实现 整个 工作 　 FlowAgent 系统 　 　 一个 FlowAgent 工作 流 过程 是 由 分布 在 若干 有 层次化 结构 的 “ 工作 域 ” 中 的 若干 自主 而 分散 的 TaskAgent 所 组成 的 它们 通过 相互 “ 磋商 ” 来 实现 直接 的 相互 调度 图 表明 了 FlowAgent 的 系统 组成 在 一个 工作 流 过程 中有 层次结构 的 若干个 “ 工作 域 ” 中 伴随 着 每个 工作 域 的 TaskDomain 有 一个 域 监控器 domainmonitor 用来 跟踪 和 记录 所有 儿子 的 任务 运行 事件 还有 一个 可以 定义 和 存放 各种 TaskAgent 组件 的 任务 代理 设计 器 agentdesigner 这个 “ 工作 域 ” 的 TaskDomain 为 它 的 儿子 建立 起 第三方 系统 的 接口 使 它 的 儿子 可以 通过 第三方 系统 建立 起 共享 信息 图 　 FlowAgent 系统 构成 　 　 一个 FlowAgent 工作 流 过程 所 涉及 的 应用程序 可以 是 非常复杂 的 如图所示 的 应用程序 ApplicationC 因为 在 这种 应用程序 的 运行 中 包含 着 很 难用 单个 TaskAgent 表达 的 复杂 调度 关系 其 运行 的 每个 步骤 都 可以 用 一个 TaskAgent 进行 描述 而 所有 描述 该 应用程序 的 TaskAgent 及其 相互 调度 关系 就 构成 了 对 该 应用程序 调度 控制 的 逻辑 提取 如图所示 的 TaskDomain “ C ” 和 它 的 儿子 “ c ” “ c ” “ c ” 它们 一起 完成 了 对 应用程序 ApplicationC 运行 的 调度 逻辑 的 提取 这样 我们 就 可以 更加 灵活 地 把 更 多样 的 应用程序 集成 到 一个 FlowAgent 工作 流 过程 中来 目前 大多数 的 WFMS 系统 如 ADEPT ［ ］ 把 工作 流中 的 “ 任务 ” 定义 为 某个 应用程序 或 人工 作业 作为 整体 所 能 提供 的 某种 “ 服务 ” 应用 系统 内部 的 运行 状态 就 很 难 被 安排 到 工作 流 过程 的 任务调度 中 而 一个 TaskAgent 描述 的 是 一个 应用程序 中 能 自主 运行 的 某 部分 这样 FlowAgent 工作 流 过程 就 建立 在 比 应用程序 的 总体 “ 服务 ” 更细 的 粒度 之上 　 　 在 FlowAgent 的 全 分布式 体系结构 中 TaskAgent 之间 在 “ 应用程序 中 可 自主 运行 部分 ” 的 粒度 上 实现 了 相互依赖 调度 关系 的 定义 任务调度 策略 被 分布 到 每个 TaskAgent 以及 从 一个 TaskAgent 到 它 的 后继 之间 的 “ 调度 查询 ” 之中 通过 这种 任务调度 策略 不但 在 TaskAgent 之间 可以 实现 Commit 依赖 、 Abort 依赖 、 ConditionalExistence 依赖 关系 ［ ］ 而且 可以 实现 TaskAgent 之间 的 复杂 控制 诸如 分布式 TaskAgent 环境 中 的 任务 执行 限期 控制 、 任务 分支 汇合 控制 　 TaskAgent 的 动态 调度 　 　 在 设计 一个 “ 工作 域 ” 时 按照 这个 “ 工作 域 ” 所 要 完成 的 “ 处理 工作 ” 和 所 涉及 的 控制 信息 我们 可以 定义 这个 “ 工作 域 ” 中 的 工作 流 过程 涉及 多少 或 多少 种 TaskAgent 基于 调度 信息 调度 命令 参数 的 请求 提供 关系 我们 可以 定义 一些 任务 连接器 以 确立 这个 “ 工作 域 ” 中 的 TaskAgent 之间 的 相互 调度 关系 这些 任务 连接器 仅仅 是 不同 任务 间 的 逻辑 连接体 它 由 两个 部分 组成 — — Taskexit 和 一个 相匹配 的 Taskentry 一个 TaskAgent 可以 有 一个 或 多个 Taskentry 和 Taskexit 这些 任务 连接器 为 这些 TaskAgent 的 动态 调度 提供 了 类型 匹配 ， 即使 得 这些 TaskAgent 能 找到 哪些 TaskAgent 可以 成为 它们 的 调度 目标 这个 “ 工作 域 ” 中 的 所有 任务 连接器 为 这个 “ 工作 域 ” 定义 了 TaskAgent 间 的 通信 调度 协议 这 不同于 大多数 WFMS 系统 如 ADEPT ［ ］ 的 任务调度 策略 它们 把 “ 任务 ” 定义 为 某个 应用程序 所 能 提供 的 整体 “ 服务 ” 工作 流中 的 “ 任务 ” 是 应用 系统 能 提供 的 特定 “ 服务 ” 一个 工作 流 必须 定义 若干 有 复杂 语义 的 “ 服务 ” 工作 流中 的 一个 应用程序 仅能 提供 某个 特定 的 “ 服务 ” 所以 整个 工作 流 过程 的 调度 逻辑 将 不得不 被 分离 为 若干 的 片段 ； 　 　 工作 流中 的 “ 任务 ” 是 粗粒度 的 “ 服务 ” 不能 为 工作 流 调度 控制 从 应用程序 中 提取 出 足够 的 运行 信息 所以 很难 实现 动态 的 任务调度 机制 　 　 一个 “ 工作 域 ” 的 任务 连接器 通过 类型 匹配 实现 了 这个 “ 工作 域 ” 中 的 TaskAgent 间 的 调度 控制 有 某个 特定 Taskexit 的 TaskAgent 能 与 和 该 Taskexit 相匹配 的 Taskentry 的 TaskAgent 建立 起 调度 使能 关系 在 过程 运行 时 如果 一个 TaskAgent χ 要 调度 其他 TaskAgent χ 为 它 的 后继 χ 必须 拥有 一条 从 它 的 Taskexit θ 到 γ 的 Taskentry θ 的 调度 通道 在 TaskAgent χ 调度 点 Taskexit θ 动态 的 “ 调度 查询 ” 为 所有 该 后继 任务 的 侯选 TaskAgent 提供 了 “ Or ” 逻辑 这 就 实现 了 对 TaskAgent 的 任务 执行 能力 进行 动态 查询 的 调度 策略 这种 调度 策略 不是 基于 一个 应用程序 所 能 提供 的 整体 “ 服务 ” 或 一个 任务 运行 体在 企业 组织 结构 中 的 固定 角色 正如 目前 大多数 WFMS 系统 所 采用 的 方式 　 　 一个 TaskAgent γ 可以 有 若干 Taskentry 它们 为 TaskAgent γ 定义 了 何种 TaskAgent 可以 调度 γ 来 完成 它们 的 后继 任务 ？ 作为 调度 策略 中 的 类型 匹配 定义 一个 任务 连接器 可以 定义 从 χ 到 γ 的 数据 传递 或 任务 启动 调度 命令 TaskAgent γ 的 所有 Taskentry 之间 有 这样 的 “ And ” 逻辑关系 仅当 γ 的 所有 Taskentry 接到 了 其 对应 前驱 提供 的 任务 启动 调度 命令 和 输入 数据 γ 才 可以 开始运行 它 的 任务 　 TaskAgent 的 调度 逻辑 　 　 TaskAgent 调度 逻辑 的 部分 　 　 如图所示 TaskAgent χ 的 调度 逻辑 调度 其他 TaskAgent 或 被 其他 TaskAgent 所 调度 有个 部分 图 　 TaskAgent 高度 逻辑 的 个 部分 　 　 所有 Taskentry 上 的 “ And ” 逻辑 由图 中 “ ” 所示 仅当 χ 的 每个 Taskentry 都 接收 到 了 从 前驱 发来 的 一个 任务 启动 命令 后 χ 才 可以 启动 它 所 负责 的 任务 　 　 χ 的 一个 Taskexit θ 所 引导 的 所有 候选 后继 TaskAgent 之间 的 “ Or ” 逻辑 由图 中 “ ” 所示 在 χ 的 一个 Taskexit θ 上 χ 可以 选择 任何 一个 拥有 Taskentry θ 的 兄弟 作为 它 的 这个 后继 　 　 对 χ 对应 的 应用程序 的 运行 状态 结果 的 判定 由图 中 “ ” 所示 基于 从 χ 对应 的 应用程序 的 运行 中 提取 出来 的 状态 结果 χ 可以 执行 它 的 一个 操作 失败 处理 模块 如果 状态 结果表明 运行 失败 或 一个 后继 任务调度 模块 如果 状态 结果表明 运行 成功 　 　 在 一个 后继 任务调度 模块 中 的 “ followerstrategy ” 后继 策略 由图 中 “ ” 所示 当 χ 的 任务 运行 成功 后 χ 将 执行 它 的 一个 后继 任务调度 模块 该 模块 中有 一个 “ followerstrategy ” 它 用种 调度 操作符 VpVVsVAsA 把 若干 Taskexit 连接起来 不但 可以 进行 χ 的 后继 调度 工作 而且 可以 对 χ 已 成功 完成 的 任务 进行 确认 否定 　 　 因为 TaskAgent 间 的 调度 关系 是 基于 任务 连接器 而 不是 应用程序 能 提供 的 某种 “ 服务 ” 调度 逻辑 的 第 部分 是 静态 的 “ And ” 逻辑 第 ～ 部分 都 是 主动 逻辑 — — 描述 一个 TaskAgent 如何 去 调度 其他 TaskAgent 虽然 调度 逻辑 的 第 部分 非常简单 但 基于 任务 执行 能力 的 查询 和 选择 使 它 是 调度 逻辑 中 最具 动态性 的 部分 调度 逻辑 的 第 、 部分 可以 表达 丰富 的 调度 关系 通过 对 任务 运行 的 状态 结果 的 “ And ” “ Or ” 描述 或 ifthenloop 等 控制 第 部分 调度 逻辑 可以 定义出 该 任务 运行 对 工作 流 调度 的 复杂 作用 第 部分 的 “ followerstrategy ” 是 最具 逻辑 表达能力 的 部分 它 不但 可以 对 该 TaskAgent 任务 的 成功 运行 进行 确认 而且 可以 为 它 所有 的 后继 任务 和 后继 提供 复杂 的 调度 控制 　 　 后继 策略 和 种 调度 操作符 　 　 在 一个 “ followerstrategy ” 后继 策略 中若 如下 调度 操作符 连接 了 两个 Taskexitttt 先于 t 　 　 。 Parallel － Or 这 两个 Taskexit 将 并行 地 调度 它们 的 后继 如 它们 中任 一方 调度 成功 则 这部分 逻辑 结果 为 “ True ” 这 可以 描述 为 从 一个 任务 到 若干个 后继 任务 的 分支 过程 我们 用 符号 “ VpV ” 来 描述 这种 关系 tVpVt 　 　 。 Serial － Or 如果 t 成功 地 调度 了 它 的 后继 并 从 这个 后继 得到 了 一个 “ committedevent ” t 就 不再 调度 它 的 后继 这部分 逻辑 结果 为 “ True ” 我们 用 符号 “ VsV ” 来 描述 这种 关系 tVsVt 如果 t 是 t 的 补充 任务 t 可以 为 t 的 操作 失败 做 恢复 工作 这样 我们 可以 在 “ transactional ” TaskAgent 外为 工作 流 定义 更 多 的 事务性 操作 　 　 。 Serial － And 当 t 在 后继 任务调度 中 得到 了 “ failedevent ” 返回 t 将 不再 去 调度 它 的 后继 任务 该 部分 逻辑 结果 为 “ False ” 否则 t 必须 调度 它 的 后继 任务 这 将 用 符号 “ AsA ” 来 描述 tAsAt 　 　 在 一个 “ followerstrategy ” 中 两个 特殊 的 TaskexitForceTrueForceFalse 被 用来 使 部分 或 全部 逻辑 描述 直接 得到 “ True ” 或 “ False ” 的 结果 通过 这 两个 Taskexit 和 调度 逻辑 操作符 “ VpV ” 我们 可以 定义出 一个 “ followerstrategy ” 在 它 已经 得到 了 总 的 “ True ” 或 “ False ” 的 结果 后 ， 继续 进行 其他 后继 任务 的 调度 工作 　 　 Time － outdead － line 控制 　 　 当 TaskAgent χ 给 它 的 后继 γ 发送 了 任务 启动 命令 后 χ 将 等待 γ 返回 给 它 一个 事件 ， 表明 该 后继 任务 的 运行 成功失败 同时 χ 按照 后继 γ 的 “ timeoutduration ” 属性 在 这个 调度 点 一个 Taskexit 启动 一个 计时器 如果 γ 发生 了 崩溃 或 χ 与 γ 的 通信 失败 该 计时器 超时 并且 还 没有 任何 事件 从 γ 返回 到 χ χ 就 可以 认定 对 γ 的 调度 失败 实际上 “ timeoutduration ” 在 控制 TaskAgent 任务 运行 中 的 “ deadline ” 更有意义 例如 TaskAgent χ 可以 对 它 的 后继 γ 设置 “ deadline ” — — “ 后继 任务 必须 在 两 小时 内 完成 并 返回 一个 “ committedevent ” ” 如果 χ 向 γ 发出 任务 启动 命令 两 小时 后 γ 还 没有 完成 其 任务 超时 错误 将 导致 χ 认定 对 γ 的 任务调度 失败 　 　 调度 同步 和 任务 汇合 分支 　 　 如上所述 通过 调度 逻辑 的 第 部分 我们 可以 定义 TaskAgent γ 为 它 的 所有 前驱 的 同步 点 在 最后 一个 前驱 向 γ 发出 任务 启动 命令 之前 其他 已经 向 γ 发出 了 任务 启动 命令 的 前驱 将 分别 在 它们 自己 的 “ followerstrategy ” 中 的 某个 调度 点 等待 γ 启动 并 返回 给 它们 一个 成功失败 事件 为 扩展 任务 运行 调度 中 的 同步 我们 可以 定义 一个 TaskAgent 去 调度 若干 其他 TaskAgent 作为 它 的 后 继而 这些 后继 又 去 调度 同一个 TaskAgent 作为 它们 自己 的 必 由 后继 必须 在 该 后继 运行 成功 后 它们 的 “ followerstrategy ” 才能 得到 结果 为 “ True ” 这些 TaskAgent 描述 了 这样 一个 工作 流 过程 从 一个 任务 开始 分支 为 若干个 其他 任务 然后 又 汇合 到 一个 任务 上来 　 　 除了 上述 一个 TaskAgent γ 的 若干 前驱 间 的 同步 外 γ 的 “ followerstrategy ” 可以 在 γ 和 它 的 后继 之间 定义 更 复杂 的 调度 同步 γ 的 “ followerstrategy ” 有 两个 功能 首先 它 可以 选择 若干个 TaskAgent 为 它 的 后继 并 调度 它们 来 执行 它 的 后继 任务 ； 其次 在 后继 任务调度 中 基于 每个 Taskexit 调度 结果 的 逻辑 求值 可 被 用来 确认 否定 γ 已 成功 完成 的 任务 仅 当该 逻辑 求值 为 “ True ” 时 γ 才能 确认 其 已 完成 的 任务 并 宣布 它 “ 在 任务 运行 和 后继 任务调度 中 成功 ” 　 动态 角色 宿定 　 　 在 大型 的 企业 业务 过程 中 层次化 的 组织 结构 可以 是 多变 的 在 组织 结构 中 一个 任务 运行 的 责任 指派 — — “ 角色 ” 也 可以 是 动态变化 的 ［ ］ 事实上 工作 流 任务 在 组织 结构 中 的 角色 宿定 和 任务 本身 有着 更 紧密 的 关系 而 和 组织 结构 仅仅 是 间接 的 关系 但是 ， 目前 大多数 工作 流 系统 中 的 角色 宿定 是 基于 一个 集中 的 组织 数据库 来 把 逻辑 角色 映射 到 实际 的 执行者 体上 这种 角色 宿定 策略 不能 适应 大型 企业 工作 流 过程 及 相关 组织 结构 的 扩充 和 频繁 变化 　 　 在 FlowAgent 的 面向 功能 的 角色 宿定 策略 中 组织 结构 本身 和 组织化 的 任务 指派 — — “ 角色 ” 被 划分 开来 这里 “ 角色 ” 动态 地 描述 了 人 程序运行 一个 工作 流 任务 的 能力 动态 的 角色 宿定 策略 是 通过 组织 认证 系统 发放 检查 企业 职责 认证书 来 实现 的 为 一个 TaskAgent 安排 某个 资源 项 Resourceitem 数据 以及 该 数据 的 访问 授权 请求 认证 使该 TaskAgent 在 任务 运行 前 可以 动态 地 要求 任务 参与 人员 或 第方 系统 通过 基于 认证 的 组织 管理系统 提供 可证实 其 身份 权利 的 认证书 从而 实现 对 任务 的 组织 指派 任务 运行 调度 的 组织 许可 这样 一个 TaskAgent 可以 在 给 它 的 后继 任务 启动 命令 中 加入 这样 的 验证 信息 “ 以下 的 任务 必须 由 会计 部门 的 经理 来 执行 ” 而 该 后继 在 运行 该 后继 任务 前 必须 提供 认证 以 确认 它 有 这个 经理 的 职能 许可 　 总结 　 　 FlowAgent 系统 应用 JavaBeansJavaRMI 等 分布式 对象 设施 设计 了 一个 可以 支持 跨平台 、 企业 的 工作 流 过程 的 分布式 体系结构 “ 多任务 域 结构 ” 对于 分布式 WFMS 系统 的 一些 关键问题 如 可扩充性 、 动态 地 角色 宿定 等等 提出 了 较 满意 的 答案 接下来 我们 将 把 Jini 结构 和 可 移动 代理 等 先进 技术 应用 于 FlowAgent 系统 以 支持 更 丰富 的 企业 业务 过程 进一步 实现 FlowAgent 的 实用价值 致谢 　 FlowAgent 系统 的 研究 是 在 北京航空航天大学 计算机科学 与 工程系 的 “ 智能 可 移动 的 代理 ” 小组 的 大力协助 下 进行 和 取得 阶段性 成果 的 为此 我们 特别感谢 麦中 凡 教授 和 陶伟 、 陈冲 、 薛俞 等 同学 的 无私 帮助 本文 研究 得到 北京市 自然科学 基金 资助 作者简介 ： 王文军 年生 博士 主要 研究 领域 为 分布式 构件 开发 环境 　 　 　 　 　 仲萃 豪年生 研究员 ， 博士生 导师 ， 主要 研究 领域 为 构件 开发 环境 本文 通讯联系 人仲萃 豪 ， 北京 ， 北京 信箱 作者 单位 ： 中国科学院 软件 研究所 　 北京 　 Emailzchadminiscasaccn 参考文献 　 　 　 MaloneTWModelingcoordinationinorganizationsandmarketsManagementScience ～ 　 　 　 Garcia － MolinaCoordinatingMulti － transactionActivitiesTechnicalReportPrincetonUniversity 　 　 　 MuthPWodtkeDFromcentralizedworkflowspecificationtodistributedworkflowexecutionDepartmentofComputerScienceUniversityoftheSaarland 　 　 　 AlonsoGFailurehandlinginlargescaleworkflowmanagementsystemsIBMAlmadenResearchCenter 　 　 　 CasatiFGrefenPWIDEworkflowmodelandarchitectureTechnicalReporttheNetherlandsItalyUniversityofTwente 　 　 　 WodtkeDWeissenfelsJThementorprojectsteptowardsenterprise － wideworkflowmanagementTechnicalReportDepartmentofComputerScienceUniversityoftheSaarland 　 　 　 MuthPeterWodtkeDirkEnterprise － wideworkflowmanagementbasedonstateandactivitychartsTechnicalReportDepartmentofComputerScienceUniversityoftheSaarland 　 　 　 AlonsoGMohanCExoticaFMQMapersistentmessage － basedarchitecturefordistributedworkflowmanagementIBMAlmadenResearchCenter 　 　 　 BarbaraDMehrotraSINCAsmanagingdynamicworkflowsindistributedenvironmentsJournalofDatabaseManagementSpecialIssueonMultidatabases ～ 　 　 DasSORBWorkareliabledistributedCORBA － basedworkflowenactmentsystemforMETEORTechnicalReportUniversityofGeorgia 　 　 JenningsNRUsingintelligentagentstomanagebusinessprocessesTechnicalReportDepartmentofElectronicEngineeringQueenMaryWestfieldCollege 　 　 CuiTingGloorPADartFlowaworkflowmanagementsystemonthewebusingtransportableagentsTechnicalReportDepartmentofComputerScienceDartmouthCollege 　 　 AttiePCSinghMPSpecifyingandenforcingintertaskdependenciesInProceedingsofthethInternationalConferenceonVeryLargeDatabasesDublinIreland 　 　 KrishnakumarNShethAManagingheterogeneousmulti － systemtaskstosupportenterprise － wideoperationsJournalonDistributedandParallelDatabaseSystems ～ 　 　 LeiYuSinghMPAComparisonofworkflowmetamodelsTechnicalReportDepartmentofComputerScienceNorthCarolinaStateUniversity 本文 收到 原稿 收到 修改稿