计算机 应用 研究 APPLICATIONRESEARCHOFCOMPUTERSVolNoP 网上 点击 付费 业务 中 的 安全 问题 和 解决方案 洪帆 　 杨洋 摘 　 要 ： 介绍 了 一种 新型 的 网上 点击 付费 业务 并 分析 了 其中 的 安全 问题 ， 主要 针对 于 如何 监控 业务 提供 方 的 行为 提出 了 两种 简单 实用 的 解决方案 ， 最后 利用 数字签名 和 哈希 链 技术 对 其 进行 了 改进 。 关键词 ： 点击 付费 超链接 JavaScript 数字签名 哈希 链 　 简介 　 　 在 Internet 互联网 日益 普及 的 今天 ， 越来越 多 的 公司 利用 WWW 主页 在 网上 对 自己 的 产品 及 服务 进行 宣传 。 为了 增加 公司 主页 的 访问 人数 ， 许多 公司 以 付费 或 交换 等 方式 将 自己 的 主页 广告 及 超链接 显示 在 其它 站点 的 主页 上 。 如今 ， 网上 又 出现 了 一种 新型 的 主页 广告 方式 点击 付费 业务 ClickThroughPayment 。 简单 地说 ， Web 站点 A 的 管理员 可以 到 提供 点击 付费 业务 的 公司 去 申请 一个 帐号 ， 然后 他 将 由 该 公司 所 提供 的 主页 广告 和 超链接 放到 他 自己 的 主页 当中 。 以后 ， 只要 有人 通过 站点 A 主页 上 的 超链接 跳转 到 该 公司 的 主页 上时 ， 公司 就 付给 站点 A 一定 的 报酬 一般 是 几分 钱 。 通过 这种 方式 ， 公司 就 可以 达到 吸引 其它 Web 站点 为 其 主页 进行 宣传 的 目的 。 　 　 这种 网上 的 点击 付费 业务 的 内部 运行机制 非常简单 ， 完全 基于 HTTP 协议 。 见图 。 　 　 某 用户 U 正在 访问 站点 A 业务 申请 方 的 主页 httpsiteApageAhtml 。 当 他 点击 该 主页 上 站点 B 业务 提供 方 的 超链接 httpsiteBpageBhtml 时 ， 用户 的 浏览器 会 向 站点 B 的 Web 服务器 发出 一个 HTTP 客户端 请求 ， 请求 传输 pageBhtml 页 。 服务器 响应 客户端 的 请求 把 pageBhtml 页 发往 用户 U 的 浏览器 。 这 与 用户 点击 其它 的 Web 超链接 没有 什么 两样 。 而 这 一 业务 的 关键 之 处 在于 ， 在 客户端 请求 报文 中有 一个 Referrer 域 ， 该域 将 被 浏览器 自动 置 为 用户 当前 网页 的 URL 地址 httpsiteApageAhtml 。 站点 B 的 Web 服务器 正好 利用 了 这个 Referrer 域来 进行 判断 ， 如果 它 指向 某一 业务 申请 方 的 主页 ， 则 给 该 业务 申请 方 的 帐号 中 增加 一次 计数 计数 与 报酬 成正比 。 　 安全 问题 　 　 众所周知 ， 在 Internet 互联网 上 凡 涉及 到 经济 利益 关系 的 业务 ， 其 安全性 广义 的 是 不容忽视 的 。 然而 从 点击 付费 业务 这种 基于 HTTP 协议 的 机制 来看 ， 它 并 不 十分 可靠 。 除了 网络 本身 不 可靠 的 因素 以外 ， 它 还有 很 明显 的 安全漏洞 。 首先 容易 想到 的 一个 问题 是 ： 业务 申请 方 可以 重复 地 点击 业务 提供 方 的 超链接 以 获得 更 多 的 计数 。 业务 提供 方 如果 不能 防止 这种 情况 的 发生 ， 那么 这项 业务 在 网上 是 无法 生存 下去 的 。 另外 的 一个 问题 是 ： 业务 申请 方 无法 去 监控 业务 提供 方 的 行为 。 因为 业务 申请 方 并不知道 实际上 有 多少 用户 是 通过 其 主页 上 的 超链接 而 到达 业务 提供 方 主页 的 ， 所以 后者 完全 可以 在 背地里 少 进行 一些 计数 或者 篡改 前者 的 计数 ， 就算 被 前者 察觉 出来 也 没有 充分 的 证据 可 说明 。 　 　 对于 第一个 问题 ， 点击 付费 业务 的 提供者 一般 采用 一种 简单 而 有效 的 解决办法 判断 客户端 的 IP地址 。 由于 在 一般 情况 下 ， 不同 客户端 的 IP地址 是 不同 的 ， 所以 如果 服务器 发现 在 一段时间 里 ， 由 同一 IP地址 发出 的 且 Referrer 域 指向 某 业务 申请 方 的 HTTP 客户端 请求 报文 不止 一份 ， 则 说明 可能 有人 在 重复 地 点击 超链接 ， 对于 这种 情况 服务器 就 不 进行 计数 。 这样一来 ， 业务 申请 方 就 很 难 再 去 “ 骗取 ” 过多 的 计数 ， 即使 有 办法 如 更换 客户机 或 伪造 IP地址 也 往往 是 得不偿失 。 　 　 对于 后 一个 问题 ， 目前 申请 点击 付费 业务 的 许多 Web 站点 还 没有 重视 起来 ， 而 对 业务 提供 方抱 以 相信 的 态度 。 针对 这种 现况 ， 我们 将 在 下面 讨论 作为 业务 申请 方 如何 去 监控 业务 提供 方 的 行为 。 　 基本 方案 　 　 对于 业务 申请 方 来说 ， 他 首先 必须 要 能够 发现 业务 提供 方 的 欺骗 行为 。 其实 ， 要 做到 这 一点 并 不太难 。 业务 申请 方 可以 在 他 自己 的 站点 上 也 进行 用户 点击 计数 ， 然后 经常性 地 与 业务 提供 方所作 的 计数 进行 比较 。 如果 双方 统计 出 的 计数 相差太大 ， 业务 申请 方 就 有 理由 怀疑 业务 提供 方有 欺骗 行为 。 下面 提供 了 两种 不同 计数 方案 。 　 　 ． 方案 一 　 　 业务 申请 方 可以 在 他 自己 站点 A 的 主页 pageAhtml 上 嵌入 一段 脚本语言 ， 使得 每当 访问 该页 的 用户 点击 业务 提供 方 站点 B 的 超链接 时 ， 用户 的 浏览器 都 会 先 向 站点 A 发出 一个 通知 ， 然后 才 向 站点 B 的 Web 服务器 提出 HTTP 请求 。 如图 。 　 　 这样 站点 A 就 可以 确切 地 知道 站点 B 的 超链接 被 用户 点击 了 多少 次 。 下面 就是 这种 方案 的 JavaScript 脚本语言 实现 。 我们 在 pageAhtml 页 中 采用 帧 结构 把 这 一页 分为 两帧 ， 一帧 为 pageAcontentshtml ， 显示 站点 A 的 实际 内容 ， 而 另 一帧 则 对 用户 不 可见 ， 用于 CGI 程序 的 执行 。 pageAcontentshtml 页 中 定义 的 onClick 事件 使得 用户 在 点击 站点 B 的 超链接 时会 先 调用 过程 notify 通知 站点 A 中 用于 计数 的 CGI 程序 recordcgi ， 然后 再 去 访问 站点 B 的 主页 。 htmlFilepageAcontentshtmlahrefhttpsiteBpageBhtmlonClickparentnotifyhttpsiteBpageBhtmlClickhereforsiteBahtmlhtmlFilepageAhtmlheadscriptlanguageJavaScriptfunctionnotifyurlinvisiblelocationhttpsiteAcgibinrecordcgireferurl ； scriptheadframesetrowsframesrcpageAcontentshtmlnamevisibleframesrcaboutblanknameinvisibleframesethtml 　 　 让 我们 来 分析 一下 站点 A 用 方案 一来 统计 计数 的 准确性 。 在 通常 的 情况 下 ， 站点 A 和 站点 B 会 同时 进行 计数 ， 但是 如果 通往 站点 B 的 网络 出现 拥塞 或者 站点 B 本身 出现 了 问题 ， 用户 浏览器 在 通知 站点 A 后 并 没有 访问 到 pageBhtml 页 ， 那么 站点 A 就 会 比 站点 B 多 进行 一次 计数 。 所以 站点 A 以 这种 方式 统计 的 用户 点击 次数 要 比 站点 B 的 略 高些 。 我们 在 这里 并 没有 考虑 用户 浏览器 在 通知 站点 A 的 时候 会 出现 问题 。 这 主要 是因为 用户 刚 成功 地 访问 过 站点 A 的 主页 ， 在 这时候 出现 问题 的 机会 很小 。 　 　 ． 方案 二 　 　 方案 二 与 方案 一 的 机制 稍 有 不同 ， 如图 。 　 　 当 用户 点击 了 pageAhtml 页 上 站点 B 的 超链接 时 ， 用户 浏览器 先 向 站点 B 发出 HTTP 客户端 请求 ， 待 pageBhtml 页 传回 后 ， 然后 才 向 站点 A 发出 一个 通知 报文 。 由于 HTTP 协议 的 状态 无关 性 ， 所以 在 实现 这一 方案 时 利用 了 浏览器 的 安全 特性 。 htmlFilepageAcontentshtmlahrefhttpsiteBpageBhtmlonClickparentsetuphttpsiteBpageBhtmlClickhereforsiteBahtmlhtmlFilepageAhtmlheadscriptlanguageJavaScriptvarretrievednull ； functionsetupurlretrievedurl ； probefunctionprobevartempvisiblelocationhref ； setTimeoutprobefunctionnotifyinvisiblelocationhttpsiteAcgibinrecordcgireferretrievedwindowonerrorfunctionsetTimeoutnotifyreturntruescriptheadframesetrowsframesrchtmnamevisibleframesrcaboutblanknameinvisibleframesethtml 　 　 同 方案 一 类似 ， pageAhtml 页 也 是 分为 可见 和 不 可见 的 两 帧 。 当 用户 点击 了 站点 B 的 超链接 时 ， 触发 onClick 事件 去 调用 setup 过程 记录 下 一些 必要 的 信息 。 然后 用户 浏览器 去 访问 站点 B 的 pageBhtml 页 ， 并 将 其 显示 在 可见 帧 visible 之中 。 而 在 下载 pageBhtml 页 的 过程 中 ， 顶级 窗口 定期 地 调用 probe 过程 读取 可见 帧 窗口 中 Location 对象 的 href 属性 。 根据 浏览器 中 的 安全 模型 ， 当新 网页 下载 完成 时 ， 浏览器 会 重新 定义新 网页 所在 窗口 中 的 对象 ， 并 不再 允许 其它窗口 去 访问 这些 对象 了 。 所以 在 下载 pageBhtml 页 的 过程 中 ， 浏览器 允许 顶级 窗口 中 的 脚本语言 去 访问 可见 帧 中 的 对象 ； 而 一旦 pageBhtml 页 下载 完毕 ， 这种 操作 起一 就 会 引个 安全 错误 ， 我们 正好 可以 利用 这个 安全 错误 触发 onError 事件 去 通知 站点 A 的 计数 CGI 程序 。 　 　 在 这种 方式 下 ， 因为 在 站点 A 上 进行 的 计数 总是 在 站点 B 之后 进行 ， 所以 站点 A 所 统计 出来 的 用户 点击 次数 要 比 站点 B 统计 出来 的 稍低 些 。 　 　 以上 的 两种 方案 的 优点 是 ： 除了 特殊 情况 以外 ， 计数 比较 准确 ； 它们 对于 业务 申请 方 来说 都 很 容易 实现 ， 并且 不 需要 业务 提供 方 的 参与 ； 基本上 对 用户 透明 。 完全 可以 作为 发现 业务 提供 方 欺骗 行为 的 一种 方法 。 　 　 但是 这 两种 方案 也 有 它们 一定 的 局限性 和 缺陷 。 比如说 在 方案 的 实现 中 ， 用户 的 浏览器 必须 要 能够 支持 帧 结构 ； 还 必须 允许 脚本语言 程序 在 网页 中 运行 。 而 最 重要 的 一点 是 ， 业务 申请 方用 这 两种 方案 所 统计 出 的 计数 只能 作为 一种 参考 ， 而 对 业务 提供 方不 具有 任何 约束力 。 业务 提供 方 完全 可以 在 出现 问题 时 进行 抵赖 ， 而 业务 申请 方 也 拿不出 任何 可以 令人信服 的 证据 。 为了 解决 这个 问题 ， 我们 提出 了 一种 对 业务 提供 方有 一定 约束力 的 改进 方案 。 　 改进 方案 一 　 　 要 防止 业务 提供 方 的 抵赖 行为 ， 我们 可以 采用 数字签名 技术 。 办法 是 ， 当 业务 提供 方 的 站点 B 收到 由 业务 申请 方 站点 A 转来 的 有效 的 请求 时 ， 一方面 在 站点 A 的 帐号 里 增加 计数 ， 另一方面 还 向 站点 A 发出 一个 确认 消息 ， 表示 承认 站点 A 推荐 了 一名 用户 到 站点 B 。 在 这个 确认 消息 中 采用 数字签名 技术 ， 使得 站点 B 在 事后 不能 否认 它 曾经 发送 过此 消息 。 如果 站点 B 不向 站点 A 发 确认 消息 ， 站点 A 可以 通过 前面 的 两种 基本 方案 发现 站点 B 的 欺骗 行为 ， 从而 可以 提前 采取 必要 的 行动 如 终止 与 站点 B 的 点击 付费 业务 来 避免 更大 的 损失 至少 站点 B 不可否认 它 以前 发过 的 确认 消息 。 对于 站点 B 而言 ， 为了 吸引 更 多 站点 为 其作 主页 广告 ， 它会 遵守 双方 的 协议 向 站点 A 发出 签 了 名 的 确认 消息 。 一旦 站点 A 收到 了 站点 B 的 确认 消息 以后 ， 站点 B 就 无法 对此 进行 抵赖 了 。 　 　 但是 ， 这个 改进 方案 也 存在 着 一个 缺陷 ， 那 就是 每次 发送 确认 消息 时 站点 B 都 需要 进行 数字签名 。 就 目前 的 情况 来看 ， 进行 数字签名 的 时间 开销 较大 ， 这 在 站点 B 业务 忙 的 时候 不太 适用 ， 因此 我们 采用 哈希 链 HashChain 技术 对 这个 方案 作 进一步 的 改进 。 　 改进 方案 二 　 　 站点 B 首先 产生 一个 大 随机数 s ， 再用 一个 单向 哈希 函数 f 对 s 作用 k 次 产生 pfks ， 然后 站点 B 将 元组 k ， p 用 数字签名 后 发给 站点 A 。 以后 站点 B 的 确认 消息 只 需要 包含 元组 ip 即可 ， 其中 i 表示 第 i 次 确认 ≤ i ≤ k ， pfkis ， 这样 站点 B 就 可以 避免 每次 确认 都 进行 计算 量 较大 的 数字签名 了 。 站点 A 每次 收到 B 的 确认 后 可以 通过 计算 pfip 来 检查 其 正确性 。 如果 双方 发生 争议 ， A 只 需要 出示 B 签名 过 的 元组 kp 和 ip ， 仲裁者 通过 判断 pfip 就 可以 知道 B 是否 发过 i 次 确认 。 这种 哈希 链 的 方法 可以 解决 数字签名 的 时间 开销 问题 ， 但 它 也 有 它 的 不利 之 处 ： 因为 k 值 不能 太 大 否则 fkis 的 计算 量 也 很大 ， 所以 站点 B 必须 经常 更新 k 值 。 更新 方法 是 站点 B 再 传给 站点 A 一个 新 的 签名 过 的 元组 kfks 。 　 结束语 　 　 本文 介绍 了 一种 新型 的 网上 点击 付费 业务 并 分析 了 它 的 安全 问题 ， 主要 针对 如何 监控 业务 提供 方 的 行为 提出 了 几种 实用 的 解决方案 。 这些 方案 或多或少 还 存在 着 一些 缺陷 和 不足之处 ， 还 有待于 作 进一步 的 研究 。 洪帆 华中理工大学 计算机系 武汉 杨洋 华中理工大学 计算机系 武汉 参考文献 MKReiterDetectingHitShavinginClickThroughPaymentSchemesinProceedingsofthethUSENIXWorkshoponElectronicCommerceVAnupamSecurityofWebBrowserScriptingLanguagesVulnerabilitiesAttacksandRemediesInProceedingsofthethUSENIXWorkshoponSecuritySymposiumFIPSSecureHashStandardFederalInformationProcessingStandardsPublicationTimRitcheyJavascriptforNetscape 编程 指南 北京 ： 清华大学出版社 收稿 日期 ： 年月日