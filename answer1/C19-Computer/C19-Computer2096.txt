计算机 工程 COMPUTERENGINEERING 年 第卷 第期 VolNo 基于 ODBC 的 VisualCMFC 数据库 应用 程序设计 杨喜 中 摘要 ： 详细 讲座 了 在 Windows 环境 下 应用 VisualC 进行 ODBCMFC 数据库 应用 程序开发 的 具体方法 和 技巧 ， 分析 MFC 和 ODBC 运行机制 ， 给出 了 部分 应用 实例 。 关键词 ： 数据库 ， ODBC ， MFCTheODBCBasedVisualCMFCDatabaseApplicationDevelopmentYangXizhongDepartmentofCivilEngneeingGuangdongUniversityGuangzhou 【 Abstract 】 ThepaperdiscussesuponthetechnologyandmethodfordevelopingODBCMFCdatabaseapplicationbyVisualCandthenanalyzestherunningmechanismofMFCandODBCAtlastsomeapplicationcodeisgiven 【 Keywords 】 DatabaseODBCMFC 　 　 关系 型 数据库系统 的 发展 已 相当 成熟 并 得到 广泛应用 。 但 因 不同 数据库系统 间 数据结构 的 差异 ， 造成 各种 数据库 间 难于 勾通 和 数据共享 。 年 夏 ， 微软 发布 了 一种 称作 ODBC 的 异种 数据库 互操作 技术 ， 使 数据库 应用程序 的 开发者 不必 关心 数据库 的 类型 、 地址 、 结构 以及 与 其它 数据库 间 的 关系 等 细节 ， 把 对 不同 数据库 的 访问 简单 地 当作 对 一种 数据库 的 访问 。 目前 ODBC 已 得到 数据库 产业界 的 广泛支持 ， 在 Windows 、 OS 和 Macintosh 等 平台 都 有 ODBC 驱动程序 和 开发工具 ， 各大 数据库 、 工具 厂商 及 应用软件 开发商 都 提供 对 ODBC 的 支持 。 　 ODBC 及其 特点 　 　 VisualC 中 提供 与 ODBC 有关 的 MFC 类有 Database 、 CRecordSet 和 CRecordView 其中 CDatabase 类 提供 了 与 数据源 的 连接 接口 ， 通过 它 可 实现 对 数据源 的 操作 ； CRecordSet 类 提供 了 从 数据源 中 取出 的 记录集 ， 用于 建立 与 应用程序 用户界面 的 直接 连接 ； CRecordView 视图 类则 可 通过 控件 显示 数据库 中 的 记录 。 在 MFC 数据库 应用程序 中有 两种 非常 重要 的 数据交换机 制 ： 应用 程序界面 即 对话框 中 的 控件 与 CRecordSet 派生类 的 成员 变量 间 通过 DDX 对话框 数据处理 交换 机制 DoDataExchangeCDataExchangepDX 建立 关联 ； CRecordset 派生类 的 成员 变量 通过 RFX 记录 字 段 数据交换机 制 DoFieldExchangeCFieldExchangepFX 与 数据源 相应 表 的 字 段 建立 关联 。 图 两种 重要 的 数据交换机 制 　 应用 ODBC 进行 数据库 编程 的 步骤 　 　 在 系统 中 注册 数据源 。 首先 生成 数据库 ， 如用 MicrosoftAccess 创建 一个 数据库 文件 studentmdb 该 数据库 中有 许多 表 ， 如 StudentInfo 。 然后 打开 Window 的 控制面板 并 双击 ODBC 图标 注册 待 访问 的 数据库 。 　 　 用 AppWizard 创建 基本 数据库 应用程序 。 在 创建 过程 中 ， 要 根据 所 需要 的 数据库 的 特性 ， 可 选择 Databaseviewwithfilesupport 选项 或 Databaseviewwithoutfilesupport 选项 ， 再 选定 所 要 操作 的 数据库 并 选择 所 需要 的 表 ， 其他 选项 可 缺省 。 　 　 向 基本 数据库 应用程序 添加 支持 数据库 特性 的 代码 。 　 创建 数据库 记录 的 显示 　 　 应用 资源 编辑器 对 对话框 进行 修改 ， 根据 数据库 记录 字段 的 数量 和 类型 ， 在 对话框 中 加入 相应 的 用于 数据 显示 的 编辑框 和 静态 标签 ； 对 每个 编辑框 用 属性 对话框 给定 其 ID 号 和 其他 属性 。 每个 编辑框 代表 数据库 记录 的 一个 字 段 ， 然后 运行 ClassWizard 使 对话框 中 的 每个 编辑 控件 和 记录 集中 相应 的 成员 变量 相连接 。 如 选择 mpSetmStudentName 进行 绑定 ； 即 通过 选择 应用程序 CRecordSet 派生类 中 的 成员 变量 作为 应用程序 的 视图 类 控件 成员 变量 ， 从而 建立 控件 与 数据源 之间 的 连接 。 此时 运行 程序 就 可 显示 数据库 中 的 数据 。 　 加入 支持 数据库 特性 的 代码 基本 数据库 操作 代码 　 　 在 生成 的 数据库 应用程序 的 视图 类中 包含 一个 指向 CRecordSet 记录集 派生类 对象 的 指针 mpSet ， 该 指针 建立 了 视图 类 与 记录集 之间 的 联系 ， 使得 在 视图 中能 较 容易 地 显示 记录 集中 相应 的 查询 结果 。 新增 记录 ： 　 　 mpSetAddNew 　 建立 一个 空 记录 　 　 UpdateDataFALSE 　 用空 记录 刷新 控件 的 显示 删除 记录 ： 　 　 mpSetDelete 　 删除 当前 记录 　 　 mpSetMoveNext 　 　 ifmpSetIsEOF 　 是否 在 记录集 末尾 　 　 mpSetMoveLast 　 　 ifmpSetIsBOF 　 是否 在 记录集 开头 　 　 mpSetSetFieldNullNULL 　 　 UpdateDataFALSE 　 视图 窗口 显示 编辑 记录 ： 　 　 mpSetEdit 存储 记录 ： 　 　 UpdateDataTRUE 　 将 数据 从 控件 传送 到 记录集 　 　 ifmpSetCanUpdate 　 确定 数据源 是否 可 更新 　 　 mpSetUpdate 　 将 新 记录 数据 添加 到 数据源 　 　 mpSetRequery 　 重建 记录集 　 　 UpdateDataFALSE ； 　 刷新 视图 窗口 显示 数据库 的 排序 和 过滤 　 　 数据库 排序 ： 先 关闭 记录集 ， 再 设定 排序 字段名 ， 即将 SQL 语句 中 Orderby 后 的 字符串 赋给 mstrSort ， 然后 再 打开 记录集 。 　 　 mpSetClose 　 关闭 记录集 　 　 mpSetmstrSortName 设置 排序 字 段 　 　 mpSetOpen 重新 打开 记录集 　 　 UpdateDataFALSE 用新排 好序 的 记录集 更新 视图 　 　 数据库 过滤 先 关闭 记录集 ， 再 设定 过滤 排序 字符串 ， 即将 SQL 语句 中 Where 后 的 条件 串赋 给 mstrFilter ， 然后 再 打开 记录集 。 　 　 mpSetClose 　 关闭 记录集 　 　 mpSetmstrFilterNameYang 设置 过滤 字符串 　 　 mpSetOpen 重新 打开 记录集 　 　 intRecountmpSetGetRecordCount 　 　 ifRecount 　 　 mpSetClose 　 　 mpSetmstrFilter 　 　 mpSetOpen 　 　 UpdateDataFALSE 　 数据库 的 多表 操作 　 　 VisualCAppWizard 生成 数据库 应用程序 时 通常 选择 数据源 的 单个 表 进行 操作 ， 但 有时 数据库 应用程序 需要 实现 同时 对 多个 表 进行 操作 ， 可用 下列 方法 实现 ： 多表 同步 联合操作 　 　 生成 数据库 应用程序 或用 ClassWizard 创建 新 的 CRecordSet 派生类 时 ， 数据源 后 可 同时 选择 多个 表 。 此时 生成 的 CRecordSet 派生类 是 将 所 选表 的 各个 字 段 集合 生成 一个 大表 ， 即 同步操作 每 一个 表 。 下面 是 同步操作 个表 tabletabletable 其中 table 和 table 的 结构 相同 的 部分 代码 ： 　 　 void 　 CMydbSetDoFieldExchangeCFieldExchangepFX 　 　 AFXFIELDMAPCMydbSet 　 　 pFXSetFieldTypeCFieldExchangeoutputColumn 　 　 RFXTextpFXTtablenamemname 　 　 ∶ 　 　 RFXTextpFXTIDCardmIDCard 　 　 AFXFIELDMAP 　 　 　 　 CStringCMydbSetGetDefaultSQL 　 　 　 　 returnTtabletabletable 　 　 多表 单独 同时 异步 操作 　 　 许多 时候 数据库 应用程序 需要 异步 操作 多个 表 ， 此时 可用 ClassWizard 对 数据源 中 的 各个 表 分别 创建 各自 的 CRecordSet 派生类 进行 管理 ， 即可 实现 对 各个 表 单独 进行 操作 。 同 类型 多表 切换 操作 　 　 数据库 应用程序 需要 异步 操作 的 多个 表 具有 相同 结构 ， 即 为 同类 表 。 此时 也 可 对 数据源 中 的 各个 表 分别 创建 各自 的 CRecordSet 派生类 进行 管理 ， 实现 对 各个 表 单独 进行 操作 。 这样 做 增加 了 编程 工作量 及 复杂性 ， 但 通过 分析 单独 创建 各个 同类 表 的 CRecordSet 的 派生类 ， 可以 发现 它们 的 构成 大部分 是 相同 的 ， 差别 在于 各自 的 成员 函数 GetDefaultSQL 返回 的 表名 不同 ， 例如 第一个 表 的 该 函数 为 ： 　 　 CStringCSetGetDefaultSQL 　 　 returnTtable 　 　 　 　 生成 数据库 应用程序 或 创建 新 的 CRecordSet 派生类 时 在 选择 数据库 后 选择 一个 表 。 此后 再 对 该类 的 成员 函数 GetDefaultSQL 进行 修改 ， 将表名 换 为 一个 字符串 变量 。 而 在 打开 某个 特定 表 之前 ， 通过 将 其表名 字符串 如 Ttable 赋给 该 字符串 变量 TableName 就 可 实现 用 同一个 CRecordSet 派生类 对 多个 同类 表 进行 独立 操作 。 例如 ： 　 　 CStringCSetGetDefaultSQL 　 　 returnTTableName 　 　 　 结论 　 　 应用 VisualC 的 ODBC 类库 进行 MFC 数据库 应用程序 的 开发 ， 可 操作 大多数 的 数据库 ， 也 便于 异种 数据库系统 间 的 操作 。 用户 可 将 不同 数据库 的 访问 简单 地 当作 对 一种 数据库 的 访问 ， 因而 减少 了 开发 的 工作量 ， 使 程序 具有 良好 的 可移植性 和 数据库 的 独立性 及 可扩充性 。 作者简介 ： 杨喜 中 （ ～ ） ， 男 ， 副教授 ， 研究 方向 ： GIS 、 数据库系统 、 AutoCAD 的 开发 、 多媒体技术 等 作者 单位 ： 广东 工业 大学 土木工程 系 ， 广州 参考文献 KruglinskiDJ 王国 印译 VisualC 技术 内幕 北京 ： 清华大学出版社 GregoryK 康博 创作室 译 VisualC 开发 使用手册 北京 ： 机械 工业 出版社 收稿 日期 ：