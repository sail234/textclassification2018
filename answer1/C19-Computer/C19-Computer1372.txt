　 自动化 学报 ACTAAUTOMATICASINICA 年 第卷 第期 volNo 避免 死锁 调度 的 数学 建模 与 求解 杨 　 盛 　 吴 　 澄 　 　 摘 　 要 　 通过 引入 “ 资源分配 函数 ” 的 概念 建立 了 以 最 短 加工 时间 为 目标 函数 的 制造 系统 避免 死锁 调度 的 数学模型 ， 给出 了 该 模型 在 两 进程 情况 的 最优 解 算法 和 多 进程 情况 的 可行 解 算法 　 　 关键词 　 死锁 ， 调度 ， 制造 系统 MATHEMATICALMODELINGANDSOLUTIONOFSCHEDULINGFORDEADLOCKAVOIDANCEYANGSHENGWUCHENGDepartmentofAutomationTsinghuaUniversityBeijing 　 　 AbstractThispaperpresentsthemathematicalmodelofoptimalschedulingfordeadlockavoidanceinmanufacturingysstemsbasedontheconceptionofresourceallocationfunctionaimedatreducingthesystemtotalprocessingtimeTwoalgorithmsareproposedfortheoptimalsolutioninthecaseoftwoprocessesandthefeasiblesolutioninthecaseofmultiprocessesrespectively 　 　 KeywordsDeadlockschedulingmanufacturingsystem 　 　 　 引 　 言 　 　 死锁 现象 广泛 存在 于 计算机 操作系统 ［ ］ 、 网络系统 ［ ］ 、 生产 制造 系统 ［ － ］ 等 多 进程 、 多 作业 的 复杂 系统 产生 死锁 的 原因 在于 系统资源 的 有限 和 进程 推进 顺序 的 不合理 死锁 的 产生 将 严重 损害 系统 的 性能 ， 因此 处理 死锁 是 多 进程 系统 的 一个 重要 方面 　 　 文 ［ ］ 论述 了 计算机 操作系统 中 产生 死锁 的 充要条件 和 消除 死锁 的 主要 方法 由于 生产 制造 系统 与 操作系统 相比 有 其 自身 的 特点 ， 两者 的 行为 、 约束 和 优化 目标 都 不尽相同 本文 以 生产 制造 系统 为 背景 研究 避免 死锁 调度 的 数学 建模 与 求解 　 　 　 数学 建模 与 求解 　 　 在 复杂 的 生产 制造 系统 中 往往 同时 存在 多 类 生产 资源 和 多个 生产 任务 一个 生产 任务 的 一次 实现 称为 该 任务 的 一个 进程 　 　 定义 设 生产 系统 Σ 中 存在 n 类 资源 ， 其中 第 i 类 资源 的 数目 为 ki ， i … n 定义 系统 的 资源 向量 kkk … knT 这个 系统 用 二元 组 Σ k 表示 　 　 定义 已知 系统 Σ k 在 任意 时刻 t ， 某个 进程 p 对 第 i 类 资源 的 占用 数为 riti … n 定义 该 进程 的 资源分配 函数 rtrtrt … rntTrtk 　 　 进程 p 的 资源分配 函数 RAF 可以 分为 两种 ： 无 延迟 资源分配 函数 NRAF 和 可 延迟 资源分配 函数 DRAF 前者 是 进程 p 在 零 等待 无 延迟 情况 下 的 资源分配 函数 ； 后者 是 系统 中 存在 多个 并发 的 进程 ， 进程 p 对 资源 的 申请 可能 需要 等待 情况 下 的 资源分配 函数 前者 是 后者 一个 特例 　 　 定义 单位 阶跃 函数 utut ＜ 由于 进程 p 对 资源 的 占用 和 释放 均 是 在 一系列 离散 时间 点上 进行 的 ， 有 如下 性质 　 　 性质 已知 系统 Σ k 以 进程 p 首次 占用 资源 的 时间 点 作为 时间 零点 ， 则 进程 p 的 无 延迟 资源分配 函数 rt 可以 表示 为 其中 ttj ＞ tjj … m 向量 aj ≠ 而且 　 　 性质 已知 进程 p 的 无 延迟 资源分配 函数 则 它 的 可 延迟 资源分配 函数 st 可以 表示 为 其中 t ′ t ′ itititii … m 　 　 性质 如果 则 stst 可以 表示 为 stst 其中 minmmmmm 　 　 定义 已知 资源分配 函数 定义 st 的 第 j 个 资源 状态 为 ， 其 持续时间 Δ jsttjtjj … mst 总 的 持续时间 定义 为 　 　 以 系统 总 的 加工 持续时间 最短 为 目标 函数 的 避免 死锁 调度 的 数学模型 为 ： 设 系统 Σ k 中 存在 n 个 进程 ， 其中 第 j 个 进程 pj 的 无 延迟 资源分配 函数 rjtajkut α jkj … n 要求 pj 的 可 延迟 资源分配 函数 使 之 满足 可行 解 条件 和 最优 解 条件 　 　 对于 n 的 情况 可以 通过 如下 的 区域 算法 获得 系统 的 最优 解 　 　 区域 算法 　 　 构造 平面 直角坐标 系 ， 其中 横轴 t 代表 rt 的 各个 资源 状态 ai 的 持续时间 ， 纵轴 t 代表 rt 的 各个 资源 状态 bi 的 持续时间 两个 坐标轴 采用 同样 的 比例尺 　 　 求出 rt 和 rt 的 冲突 区 ConflictrtrtP ｜ tt ∈ Prtrt ＞ k 具体 求法 是 ， 考查 rt 的 第 i 个 资源 状态 ak 与 rt 的 第 j 个 资源 状态 bi 在 坐标系 中 对应 的 小 矩形 Uij 如果 akbk ＞ k 则 Uijrtrt 　 　 由 冲突 区求 出 死锁 区 Deadlockrtrt 坐标系 中 两个 相邻 接 冲突 区 的 左下角 区域 构成 死锁 区 ， 如图 中 的 D 和 D 图 　 区域 算法 　 　 两个 进程 的 加工过程 在 坐标系 中 可以 用 水平线 、 垂直线 和 ° 线 三种 连续 线段 表示 ， 从 ， 开始 到 amam 结束 其中 水平线 表示 p 运行 ， p 等待 ； 垂直线 表示 p 运行 ， p 等待 ； ° 线 表示 p 和 p 同时 运行 三种 加工 线段 都 不得 进入 冲突 区 和 死锁 区 与 其它 解 相比 ， 最优 解 对应 的 加工 路径 中 ° 线 占 的 比例 最大 这样 从 原点 出发 ， 只要 有 可能 ， 就 以 ° 线 向 amam 推进 如果 遇到 冲突 区 或 死锁 区 ， 则 改为 沿 冲突 区 或 死锁 区 的 下 或 左 边界 水平 或 垂直 推进 　 　 根据 步骤 求出 的 最优 路径 ， 求 最优 解 st 和 st 　 　 对于 两 进程 的 情况 ， 如果 指定 进程 p 较 进程 p 有 资源 优先权 ， 它 可以 不 受 阻碍 地 运行 ， 即 strt ， 则 可以 进一步 将 区域 算法 简化 为 一维 算法 的 水池 算法 ， 其 基本 思想 是 ， 在 保证 p 无 延迟 运行 情况 下 ， 求出 p 的 每个 资源 状态 在 时间 区间 amam 上 的 允许 区间 集 如果 p 能够 从 第一个 资源 状态 连续 地 过渡 到 最后 一个 资源 状态 ， 并且 每个 资源 状态 的 持续时间 能够 满足要求 ， 则 系统 存在 可行 解 ， 其中 最先 过渡 到 最后 一个 资源 状态 的 路径 对应 系统 的 最优 解 这 好比 在 m 个 水平 面上 分布 着 若干个 水池 每个 水池 能够 向下 一个 水平 面上 与 之 相邻 的 水池 排水 从 最上层 水池 经过 中间 各层 水池 最后 流到 最 下层 水池 中 的 流水 所 形成 的 路径 对应 可行 解 　 　 水池 算法 　 　 在 时间 amam 上求 出 p 的 第 j 个 资源 状态 bk 的 允许 区间 集 Fjab ｜ ba Δ jrt ∧ tabkrtbkj … m 指定 Fj 中 的 元素 从小到大 排列 　 　 由 允许 区间 集 Fj 求 有效 区间 集 Vjj … m 下面 给出 以 C 伪码 形式 描述 的 递推 求解 算法 输入 ： 允许 区间 集 序列 　 FF … Fm 　 　 　 　 持续时间 序列 Δ Δ … Δ m 输出 ： 有效 区间 集 序列 VV … VmLetsetVF 　 foriimi 　 letsetVi φ 　 　 forjkj ｜ Vi ｜ j 　 　 getthejthelementabofsetVi 　 　 　 whilek ｜ Fi ｜ 　 　 　 getthekthelementcdofsetFi 　 　 　 　 ifcd ＜ a Δ ibkcontinue 　 　 　 　 ifcd ＞ a Δ ibbreak 　 　 　 　 letpqcd ∩ a Δ ib 　 　 　 　 ifqp Δ iViVi ∪ pq 　 　 　 　 k 　 　 returnthesequenceofvalidintervalsetsVV … Vm 　 　 从 Vm 开始 回 推 最优 解 st 有效 区间 集 Vm 中 的 每个 元素 对应 一个 可行 解 ， 其中 第一个 元素 ab 对应 最优 解 系统 的 最 短 持续时间 Δ rtsta Δ mVV … Vm 中 每 一个 不 在 可行 解 路径 上 的 区间 都 必定 对应 一个 死锁 状态 　 　 对于 n ≠ 的 一般 避免 死锁 调度 问题 ， 由于 计算 复杂度 为 NP 难 的 ， 其 最优 解 往往 难于 获得 下面 给出 一种 求 可行 解 的 方法 　 　 首先 对 rt 和 rt ， 由 区域 算法 求出 其 最优 解 st 和 st 然后 令 r ′ tstst 对 r ′ t 和 rt ， 由 区域 算法 求出 其 最优 解 s ′ t 和 st 再令 r ′ ts ′ tst ， … ， 直到 最后 对 r ′ nt 和 rnt ， 由 区域 算法 求出 其 最优 解 s ′ nt 和 snt 根据 函数 序列 snts ′ ntsnts ′ nt … s ′ tstst 可以 构造 出 系统 的 一个 可行 解 　 　 例 已知 系统 Σ kkT 进程 p 和 p 的 无 延迟 资源分配 函数 分别 为 图 是 由 区域 算法 求出 的 两条 最优 路径 ， 其 解析 式 分别 为 　 　 　 　 　 　 　 　 　 　 系统 的 最 短 持续时间 Δ ststmin 图是 由 水池 算法 求出 的 最优 路径 ， 其 解析 式 同 上面 的 式 图 　 水池 算法 作者 单位 ： 清华大学 自动化系 　 北京 　 参考文献 　 　 PetersonJLsilberschatzAOperatingSystemConceptssecondeditionAddisonWesleyPublishingCompanyInc 　 　 DiazMModellingandanalysisofcommunicationandcooperationprotocolsusingpetrinetbasedmodelsComputerNetworks 　 　 BanaszakZAKroghBHDeadlockavoidanceinflexiblemanufacturingsystemswithconcurrentlycompetingprocessflowsIEEETransRoboticsAutomat 　 　 ViswanadhamNNarahariYJohnsonTLDeadlockpreventionanddeadlockavoidanceinflexiblemanufacturingsystemsusingpetrinetmodelsIEEETransRoboticsAutomat 收稿 日期